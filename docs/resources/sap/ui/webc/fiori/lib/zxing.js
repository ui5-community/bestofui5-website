(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?t(exports):typeof define==="function"&&define.amd?define(["exports"],t):(e=typeof globalThis!=="undefined"?globalThis:e||self,t(e.ZXing={}))})(this,function(e){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)if(t.hasOwnProperty(r))e[r]=t[r]};function r(e,r){t(e,r);function n(){this.constructor=e}e.prototype=r===null?Object.create(r):(n.prototype=r.prototype,new n)}function n(e,t){var r=Object.setPrototypeOf;r?r(e,t):e.__proto__=t}function i(e,t){if(t===void 0){t=e.constructor}var r=Error.captureStackTrace;r&&r(e,t)}var s=function(e){r(t,e);function t(t){var r=this.constructor;var s=e.call(this,t)||this;Object.defineProperty(s,"name",{value:r.name,enumerable:false});n(s,r.prototype);i(s);return s}return t}(Error);class o extends s{constructor(e=undefined){super(e);this.message=e}getKind(){const e=this.constructor;return e.kind}}o.kind="Exception";class a extends o{}a.kind="ArgumentException";class l extends o{}l.kind="IllegalArgumentException";
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class h{constructor(e){this.binarizer=e;if(e===null){throw new l("Binarizer must be non-null.")}}getWidth(){return this.binarizer.getWidth()}getHeight(){return this.binarizer.getHeight()}getBlackRow(e,t){return this.binarizer.getBlackRow(e,t)}getBlackMatrix(){if(this.matrix===null||this.matrix===undefined){this.matrix=this.binarizer.getBlackMatrix()}return this.matrix}isCropSupported(){return this.binarizer.getLuminanceSource().isCropSupported()}crop(e,t,r,n){const i=this.binarizer.getLuminanceSource().crop(e,t,r,n);return new h(this.binarizer.createBinarizer(i))}isRotateSupported(){return this.binarizer.getLuminanceSource().isRotateSupported()}rotateCounterClockwise(){const e=this.binarizer.getLuminanceSource().rotateCounterClockwise();return new h(this.binarizer.createBinarizer(e))}rotateCounterClockwise45(){const e=this.binarizer.getLuminanceSource().rotateCounterClockwise45();return new h(this.binarizer.createBinarizer(e))}toString(){try{return this.getBlackMatrix().toString()}catch(e){return""}}}class c extends o{static getChecksumInstance(){return new c}}c.kind="ChecksumException";
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class u{constructor(e){this.source=e}getLuminanceSource(){return this.source}getWidth(){return this.source.getWidth()}getHeight(){return this.source.getHeight()}}class d{static arraycopy(e,t,r,n,i){while(i--){r[n++]=e[t++]}}static currentTimeMillis(){return Date.now()}}class f extends o{}f.kind="IndexOutOfBoundsException";class g extends f{constructor(e=undefined,t=undefined){super(t);this.index=e;this.message=t}}g.kind="ArrayIndexOutOfBoundsException";class w{static fill(e,t){for(let r=0,n=e.length;r<n;r++)e[r]=t}static fillWithin(e,t,r,n){w.rangeCheck(e.length,t,r);for(let i=t;i<r;i++)e[i]=n}static rangeCheck(e,t,r){if(t>r){throw new l("fromIndex("+t+") > toIndex("+r+")")}if(t<0){throw new g(t)}if(r>e){throw new g(r)}}static asList(...e){return e}static create(e,t,r){let n=Array.from({length:e});return n.map(e=>Array.from({length:t}).fill(r))}static createInt32Array(e,t,r){let n=Array.from({length:e});return n.map(e=>Int32Array.from({length:t}).fill(r))}static equals(e,t){if(!e){return false}if(!t){return false}if(!e.length){return false}if(!t.length){return false}if(e.length!==t.length){return false}for(let r=0,n=e.length;r<n;r++){if(e[r]!==t[r]){return false}}return true}static hashCode(e){if(e===null){return 0}let t=1;for(const r of e){t=31*t+r}return t}static fillUint8Array(e,t){for(let r=0;r!==e.length;r++){e[r]=t}}static copyOf(e,t){return e.slice(0,t)}static copyOfUint8Array(e,t){if(e.length<=t){const r=new Uint8Array(t);r.set(e);return r}return e.slice(0,t)}static copyOfRange(e,t,r){const n=r-t;const i=new Int32Array(n);d.arraycopy(e,t,i,0,n);return i}static binarySearch(e,t,r){if(undefined===r){r=w.numberComparator}let n=0;let i=e.length-1;while(n<=i){const s=i+n>>1;const o=r(t,e[s]);if(o>0){n=s+1}else if(o<0){i=s-1}else{return s}}return-n-1}static numberComparator(e,t){return e-t}}class A{static numberOfTrailingZeros(e){let t;if(e===0)return 32;let r=31;t=e<<16;if(t!==0){r-=16;e=t}t=e<<8;if(t!==0){r-=8;e=t}t=e<<4;if(t!==0){r-=4;e=t}t=e<<2;if(t!==0){r-=2;e=t}return r-(e<<1>>>31)}static numberOfLeadingZeros(e){if(e===0){return 32}let t=1;if(e>>>16===0){t+=16;e<<=16}if(e>>>24===0){t+=8;e<<=8}if(e>>>28===0){t+=4;e<<=4}if(e>>>30===0){t+=2;e<<=2}t-=e>>>31;return t}static toHexString(e){return e.toString(16)}static toBinaryString(e){return String(parseInt(String(e),2))}static bitCount(e){e=e-(e>>>1&1431655765);e=(e&858993459)+(e>>>2&858993459);e=e+(e>>>4)&252645135;e=e+(e>>>8);e=e+(e>>>16);return e&63}static truncDivision(e,t){return Math.trunc(e/t)}static parseInt(e,t=undefined){return parseInt(e,t)}}A.MIN_VALUE_32_BITS=-2147483648;A.MAX_VALUE=Number.MAX_SAFE_INTEGER;
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class C{constructor(e,t){if(undefined===e){this.size=0;this.bits=new Int32Array(1)}else{this.size=e;if(undefined===t||null===t){this.bits=C.makeArray(e)}else{this.bits=t}}}getSize(){return this.size}getSizeInBytes(){return Math.floor((this.size+7)/8)}ensureCapacity(e){if(e>this.bits.length*32){const t=C.makeArray(e);d.arraycopy(this.bits,0,t,0,this.bits.length);this.bits=t}}get(e){return(this.bits[Math.floor(e/32)]&1<<(e&31))!==0}set(e){this.bits[Math.floor(e/32)]|=1<<(e&31)}flip(e){this.bits[Math.floor(e/32)]^=1<<(e&31)}getNextSet(e){const t=this.size;if(e>=t){return t}const r=this.bits;let n=Math.floor(e/32);let i=r[n];i&=~((1<<(e&31))-1);const s=r.length;while(i===0){if(++n===s){return t}i=r[n]}const o=n*32+A.numberOfTrailingZeros(i);return o>t?t:o}getNextUnset(e){const t=this.size;if(e>=t){return t}const r=this.bits;let n=Math.floor(e/32);let i=~r[n];i&=~((1<<(e&31))-1);const s=r.length;while(i===0){if(++n===s){return t}i=~r[n]}const o=n*32+A.numberOfTrailingZeros(i);return o>t?t:o}setBulk(e,t){this.bits[Math.floor(e/32)]=t}setRange(e,t){if(t<e||e<0||t>this.size){throw new l}if(t===e){return}t--;const r=Math.floor(e/32);const n=Math.floor(t/32);const i=this.bits;for(let s=r;s<=n;s++){const o=s>r?0:e&31;const a=s<n?31:t&31;const l=(2<<a)-(1<<o);i[s]|=l}}clear(){const e=this.bits.length;const t=this.bits;for(let r=0;r<e;r++){t[r]=0}}isRange(e,t,r){if(t<e||e<0||t>this.size){throw new l}if(t===e){return true}t--;const n=Math.floor(e/32);const i=Math.floor(t/32);const s=this.bits;for(let o=n;o<=i;o++){const a=o>n?0:e&31;const l=o<i?31:t&31;const h=(2<<l)-(1<<a)&4294967295;if((s[o]&h)!==(r?h:0)){return false}}return true}appendBit(e){this.ensureCapacity(this.size+1);if(e){this.bits[Math.floor(this.size/32)]|=1<<(this.size&31)}this.size++}appendBits(e,t){if(t<0||t>32){throw new l("Num bits must be between 0 and 32")}this.ensureCapacity(this.size+t);for(let r=t;r>0;r--){this.appendBit((e>>r-1&1)===1)}}appendBitArray(e){const t=e.size;this.ensureCapacity(this.size+t);for(let r=0;r<t;r++){this.appendBit(e.get(r))}}xor(e){if(this.size!==e.size){throw new l("Sizes don't match")}const t=this.bits;for(let r=0,n=t.length;r<n;r++){t[r]^=e.bits[r]}}toBytes(e,t,r,n){for(let i=0;i<n;i++){let n=0;for(let t=0;t<8;t++){if(this.get(e)){n|=1<<7-t}e++}t[r+i]=n}}getBitArray(){return this.bits}reverse(){const e=new Int32Array(this.bits.length);const t=Math.floor((this.size-1)/32);const r=t+1;const n=this.bits;for(let i=0;i<r;i++){let r=n[i];r=r>>1&1431655765|(r&1431655765)<<1;r=r>>2&858993459|(r&858993459)<<2;r=r>>4&252645135|(r&252645135)<<4;r=r>>8&16711935|(r&16711935)<<8;r=r>>16&65535|(r&65535)<<16;e[t-i]=r}if(this.size!==r*32){const t=r*32-this.size;let n=e[0]>>>t;for(let i=1;i<r;i++){const r=e[i];n|=r<<32-t;e[i-1]=n;n=r>>>t}e[r-1]=n}this.bits=e}static makeArray(e){return new Int32Array(Math.floor((e+31)/32))}equals(e){if(!(e instanceof C)){return false}const t=e;return this.size===t.size&&w.equals(this.bits,t.bits)}hashCode(){return 31*this.size+w.hashCode(this.bits)}toString(){let e="";for(let t=0,r=this.size;t<r;t++){if((t&7)===0){e+=" "}e+=this.get(t)?"X":"."}return e}clone(){return new C(this.size,this.bits.slice())}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var E;(function(e){e[e["OTHER"]=0]="OTHER";e[e["PURE_BARCODE"]=1]="PURE_BARCODE";e[e["POSSIBLE_FORMATS"]=2]="POSSIBLE_FORMATS";e[e["TRY_HARDER"]=3]="TRY_HARDER";e[e["CHARACTER_SET"]=4]="CHARACTER_SET";e[e["ALLOWED_LENGTHS"]=5]="ALLOWED_LENGTHS";e[e["ASSUME_CODE_39_CHECK_DIGIT"]=6]="ASSUME_CODE_39_CHECK_DIGIT";e[e["ASSUME_GS1"]=7]="ASSUME_GS1";e[e["RETURN_CODABAR_START_END"]=8]="RETURN_CODABAR_START_END";e[e["NEED_RESULT_POINT_CALLBACK"]=9]="NEED_RESULT_POINT_CALLBACK";e[e["ALLOWED_EAN_EXTENSIONS"]=10]="ALLOWED_EAN_EXTENSIONS"})(E||(E={}));var m=E;class _ extends o{static getFormatInstance(){return new _}}_.kind="FormatException";
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var I;(function(e){e[e["Cp437"]=0]="Cp437";e[e["ISO8859_1"]=1]="ISO8859_1";e[e["ISO8859_2"]=2]="ISO8859_2";e[e["ISO8859_3"]=3]="ISO8859_3";e[e["ISO8859_4"]=4]="ISO8859_4";e[e["ISO8859_5"]=5]="ISO8859_5";e[e["ISO8859_6"]=6]="ISO8859_6";e[e["ISO8859_7"]=7]="ISO8859_7";e[e["ISO8859_8"]=8]="ISO8859_8";e[e["ISO8859_9"]=9]="ISO8859_9";e[e["ISO8859_10"]=10]="ISO8859_10";e[e["ISO8859_11"]=11]="ISO8859_11";e[e["ISO8859_13"]=12]="ISO8859_13";e[e["ISO8859_14"]=13]="ISO8859_14";e[e["ISO8859_15"]=14]="ISO8859_15";e[e["ISO8859_16"]=15]="ISO8859_16";e[e["SJIS"]=16]="SJIS";e[e["Cp1250"]=17]="Cp1250";e[e["Cp1251"]=18]="Cp1251";e[e["Cp1252"]=19]="Cp1252";e[e["Cp1256"]=20]="Cp1256";e[e["UnicodeBigUnmarked"]=21]="UnicodeBigUnmarked";e[e["UTF8"]=22]="UTF8";e[e["ASCII"]=23]="ASCII";e[e["Big5"]=24]="Big5";e[e["GB18030"]=25]="GB18030";e[e["EUC_KR"]=26]="EUC_KR"})(I||(I={}));class S{constructor(e,t,r,...n){this.valueIdentifier=e;this.name=r;if(typeof t==="number"){this.values=Int32Array.from([t])}else{this.values=t}this.otherEncodingNames=n;S.VALUE_IDENTIFIER_TO_ECI.set(e,this);S.NAME_TO_ECI.set(r,this);const i=this.values;for(let e=0,t=i.length;e!==t;e++){const t=i[e];S.VALUES_TO_ECI.set(t,this)}for(const e of n){S.NAME_TO_ECI.set(e,this)}}getValueIdentifier(){return this.valueIdentifier}getName(){return this.name}getValue(){return this.values[0]}static getCharacterSetECIByValue(e){if(e<0||e>=900){throw new _("incorect value")}const t=S.VALUES_TO_ECI.get(e);if(undefined===t){throw new _("incorect value")}return t}static getCharacterSetECIByName(e){const t=S.NAME_TO_ECI.get(e);if(undefined===t){throw new _("incorect value")}return t}equals(e){if(!(e instanceof S)){return false}const t=e;return this.getName()===t.getName()}}S.VALUE_IDENTIFIER_TO_ECI=new Map;S.VALUES_TO_ECI=new Map;S.NAME_TO_ECI=new Map;S.Cp437=new S(I.Cp437,Int32Array.from([0,2]),"Cp437");S.ISO8859_1=new S(I.ISO8859_1,Int32Array.from([1,3]),"ISO-8859-1","ISO88591","ISO8859_1");S.ISO8859_2=new S(I.ISO8859_2,4,"ISO-8859-2","ISO88592","ISO8859_2");S.ISO8859_3=new S(I.ISO8859_3,5,"ISO-8859-3","ISO88593","ISO8859_3");S.ISO8859_4=new S(I.ISO8859_4,6,"ISO-8859-4","ISO88594","ISO8859_4");S.ISO8859_5=new S(I.ISO8859_5,7,"ISO-8859-5","ISO88595","ISO8859_5");S.ISO8859_6=new S(I.ISO8859_6,8,"ISO-8859-6","ISO88596","ISO8859_6");S.ISO8859_7=new S(I.ISO8859_7,9,"ISO-8859-7","ISO88597","ISO8859_7");S.ISO8859_8=new S(I.ISO8859_8,10,"ISO-8859-8","ISO88598","ISO8859_8");S.ISO8859_9=new S(I.ISO8859_9,11,"ISO-8859-9","ISO88599","ISO8859_9");S.ISO8859_10=new S(I.ISO8859_10,12,"ISO-8859-10","ISO885910","ISO8859_10");S.ISO8859_11=new S(I.ISO8859_11,13,"ISO-8859-11","ISO885911","ISO8859_11");S.ISO8859_13=new S(I.ISO8859_13,15,"ISO-8859-13","ISO885913","ISO8859_13");S.ISO8859_14=new S(I.ISO8859_14,16,"ISO-8859-14","ISO885914","ISO8859_14");S.ISO8859_15=new S(I.ISO8859_15,17,"ISO-8859-15","ISO885915","ISO8859_15");S.ISO8859_16=new S(I.ISO8859_16,18,"ISO-8859-16","ISO885916","ISO8859_16");S.SJIS=new S(I.SJIS,20,"SJIS","Shift_JIS");S.Cp1250=new S(I.Cp1250,21,"Cp1250","windows-1250");S.Cp1251=new S(I.Cp1251,22,"Cp1251","windows-1251");S.Cp1252=new S(I.Cp1252,23,"Cp1252","windows-1252");S.Cp1256=new S(I.Cp1256,24,"Cp1256","windows-1256");S.UnicodeBigUnmarked=new S(I.UnicodeBigUnmarked,25,"UnicodeBigUnmarked","UTF-16BE","UnicodeBig");S.UTF8=new S(I.UTF8,26,"UTF8","UTF-8");S.ASCII=new S(I.ASCII,Int32Array.from([27,170]),"ASCII","US-ASCII");S.Big5=new S(I.Big5,28,"Big5");S.GB18030=new S(I.GB18030,29,"GB18030","GB2312","EUC_CN","GBK");S.EUC_KR=new S(I.EUC_KR,30,"EUC_KR","EUC-KR");class p extends o{}p.kind="UnsupportedOperationException";class T{static decode(e,t){const r=this.encodingName(t);if(this.customDecoder){return this.customDecoder(e,r)}if(typeof TextDecoder==="undefined"||this.shouldDecodeOnFallback(r)){return this.decodeFallback(e,r)}return new TextDecoder(r).decode(e)}static shouldDecodeOnFallback(e){return!T.isBrowser()&&e==="ISO-8859-1"}static encode(e,t){const r=this.encodingName(t);if(this.customEncoder){return this.customEncoder(e,r)}if(typeof TextEncoder==="undefined"){return this.encodeFallback(e)}return(new TextEncoder).encode(e)}static isBrowser(){return typeof window!=="undefined"&&{}.toString.call(window)==="[object Window]"}static encodingName(e){return typeof e==="string"?e:e.getName()}static encodingCharacterSet(e){if(e instanceof S){return e}return S.getCharacterSetECIByName(e)}static decodeFallback(e,t){const r=this.encodingCharacterSet(t);if(T.isDecodeFallbackSupported(r)){let t="";for(let r=0,n=e.length;r<n;r++){let n=e[r].toString(16);if(n.length<2){n="0"+n}t+="%"+n}return decodeURIComponent(t)}if(r.equals(S.UnicodeBigUnmarked)){return String.fromCharCode.apply(null,new Uint16Array(e.buffer))}throw new p(`Encoding ${this.encodingName(t)} not supported by fallback.`)}static isDecodeFallbackSupported(e){return e.equals(S.UTF8)||e.equals(S.ISO8859_1)||e.equals(S.ASCII)}static encodeFallback(e){const t=btoa(unescape(encodeURIComponent(e)));const r=t.split("");const n=[];for(let e=0;e<r.length;e++){n.push(r[e].charCodeAt(0))}return new Uint8Array(n)}}
/*
     * Copyright (C) 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class R{static castAsNonUtf8Char(e,t=null){const r=t?t.getName():this.ISO88591;return T.decode(new Uint8Array([e]),r)}static guessEncoding(e,t){if(t!==null&&t!==undefined&&undefined!==t.get(m.CHARACTER_SET)){return t.get(m.CHARACTER_SET).toString()}const r=e.length;let n=true;let i=true;let s=true;let o=0;let a=0;let l=0;let h=0;let c=0;let u=0;let d=0;let f=0;let g=0;let w=0;let A=0;const C=e.length>3&&e[0]===239&&e[1]===187&&e[2]===191;for(let t=0;t<r&&(n||i||s);t++){const r=e[t]&255;if(s){if(o>0){if((r&128)===0){s=false}else{o--}}else if((r&128)!==0){if((r&64)===0){s=false}else{o++;if((r&32)===0){a++}else{o++;if((r&16)===0){l++}else{o++;if((r&8)===0){h++}else{s=false}}}}}}if(n){if(r>127&&r<160){n=false}else if(r>159){if(r<192||r===215||r===247){A++}}}if(i){if(c>0){if(r<64||r===127||r>252){i=false}else{c--}}else if(r===128||r===160||r>239){i=false}else if(r>160&&r<224){u++;f=0;d++;if(d>g){g=d}}else if(r>127){c++;d=0;f++;if(f>w){w=f}}else{d=0;f=0}}}if(s&&o>0){s=false}if(i&&c>0){i=false}if(s&&(C||a+l+h>0)){return R.UTF8}if(i&&(R.ASSUME_SHIFT_JIS||g>=3||w>=3)){return R.SHIFT_JIS}if(n&&i){return g===2&&u===2||A*10>=r?R.SHIFT_JIS:R.ISO88591}if(n){return R.ISO88591}if(i){return R.SHIFT_JIS}if(s){return R.UTF8}return R.PLATFORM_DEFAULT_ENCODING}static format(e,...t){let r=-1;function n(e,n,i,s,o,a){if(e==="%%")return"%";if(t[++r]===undefined)return undefined;e=s?parseInt(s.substr(1)):undefined;let l=o?parseInt(o.substr(1)):undefined;let h;switch(a){case"s":h=t[r];break;case"c":h=t[r][0];break;case"f":h=parseFloat(t[r]).toFixed(e);break;case"p":h=parseFloat(t[r]).toPrecision(e);break;case"e":h=parseFloat(t[r]).toExponential(e);break;case"x":h=parseInt(t[r]).toString(l?l:16);break;case"d":h=parseFloat(parseInt(t[r],l?l:10).toPrecision(e)).toFixed(0);break}h=typeof h==="object"?JSON.stringify(h):(+h).toString(l);let c=parseInt(i);let u=i&&i[0]+""==="0"?"0":" ";while(h.length<c)h=n!==undefined?h+u:u+h;return h}let i=/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;return e.replace(i,n)}static getBytes(e,t){return T.encode(e,t)}static getCharCode(e,t=0){return e.charCodeAt(t)}static getCharAt(e){return String.fromCharCode(e)}}R.SHIFT_JIS=S.SJIS.getName();R.GB2312="GB2312";R.ISO88591=S.ISO8859_1.getName();R.EUC_JP="EUC_JP";R.UTF8=S.UTF8.getName();R.PLATFORM_DEFAULT_ENCODING=R.UTF8;R.ASSUME_SHIFT_JIS=false;class N{constructor(e=""){this.value=e}enableDecoding(e){this.encoding=e;return this}append(e){if(typeof e==="string"){this.value+=e.toString()}else if(this.encoding){this.value+=R.castAsNonUtf8Char(e,this.encoding)}else{this.value+=String.fromCharCode(e)}return this}appendChars(e,t,r){for(let n=t;t<t+r;n++){this.append(e[n])}return this}length(){return this.value.length}charAt(e){return this.value.charAt(e)}deleteCharAt(e){this.value=this.value.substr(0,e)+this.value.substring(e+1)}setCharAt(e,t){this.value=this.value.substr(0,e)+t+this.value.substr(e+1)}substring(e,t){return this.value.substring(e,t)}setLengthToZero(){this.value=""}toString(){return this.value}insert(e,t){this.value=this.value.substr(0,e)+t+this.value.substr(e+t.length)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class y{constructor(e,t,r,n){this.width=e;this.height=t;this.rowSize=r;this.bits=n;if(undefined===t||null===t){t=e}this.height=t;if(e<1||t<1){throw new l("Both dimensions must be greater than 0")}if(undefined===r||null===r){r=Math.floor((e+31)/32)}this.rowSize=r;if(undefined===n||null===n){this.bits=new Int32Array(this.rowSize*this.height)}}static parseFromBooleanArray(e){const t=e.length;const r=e[0].length;const n=new y(r,t);for(let i=0;i<t;i++){const t=e[i];for(let e=0;e<r;e++){if(t[e]){n.set(e,i)}}}return n}static parseFromString(e,t,r){if(e===null){throw new l("stringRepresentation cannot be null")}const n=new Array(e.length);let i=0;let s=0;let o=-1;let a=0;let h=0;while(h<e.length){if(e.charAt(h)==="\n"||e.charAt(h)==="\r"){if(i>s){if(o===-1){o=i-s}else if(i-s!==o){throw new l("row lengths do not match")}s=i;a++}h++}else if(e.substring(h,h+t.length)===t){h+=t.length;n[i]=true;i++}else if(e.substring(h,h+r.length)===r){h+=r.length;n[i]=false;i++}else{throw new l("illegal character encountered: "+e.substring(h))}}if(i>s){if(o===-1){o=i-s}else if(i-s!==o){throw new l("row lengths do not match")}a++}const c=new y(o,a);for(let e=0;e<i;e++){if(n[e]){c.set(Math.floor(e%o),Math.floor(e/o))}}return c}get(e,t){const r=t*this.rowSize+Math.floor(e/32);return(this.bits[r]>>>(e&31)&1)!==0}set(e,t){const r=t*this.rowSize+Math.floor(e/32);this.bits[r]|=1<<(e&31)&4294967295}unset(e,t){const r=t*this.rowSize+Math.floor(e/32);this.bits[r]&=~(1<<(e&31)&4294967295)}flip(e,t){const r=t*this.rowSize+Math.floor(e/32);this.bits[r]^=1<<(e&31)&4294967295}xor(e){if(this.width!==e.getWidth()||this.height!==e.getHeight()||this.rowSize!==e.getRowSize()){throw new l("input matrix dimensions do not match")}const t=new C(Math.floor(this.width/32)+1);const r=this.rowSize;const n=this.bits;for(let i=0,s=this.height;i<s;i++){const s=i*r;const o=e.getRow(i,t).getBitArray();for(let e=0;e<r;e++){n[s+e]^=o[e]}}}clear(){const e=this.bits;const t=e.length;for(let r=0;r<t;r++){e[r]=0}}setRegion(e,t,r,n){if(t<0||e<0){throw new l("Left and top must be nonnegative")}if(n<1||r<1){throw new l("Height and width must be at least 1")}const i=e+r;const s=t+n;if(s>this.height||i>this.width){throw new l("The region must fit inside the matrix")}const o=this.rowSize;const a=this.bits;for(let r=t;r<s;r++){const t=r*o;for(let r=e;r<i;r++){a[t+Math.floor(r/32)]|=1<<(r&31)&4294967295}}}getRow(e,t){if(t===null||t===undefined||t.getSize()<this.width){t=new C(this.width)}else{t.clear()}const r=this.rowSize;const n=this.bits;const i=e*r;for(let e=0;e<r;e++){t.setBulk(e*32,n[i+e])}return t}setRow(e,t){d.arraycopy(t.getBitArray(),0,this.bits,e*this.rowSize,this.rowSize)}rotate180(){const e=this.getWidth();const t=this.getHeight();let r=new C(e);let n=new C(e);for(let e=0,i=Math.floor((t+1)/2);e<i;e++){r=this.getRow(e,r);n=this.getRow(t-1-e,n);r.reverse();n.reverse();this.setRow(e,n);this.setRow(t-1-e,r)}}getEnclosingRectangle(){const e=this.width;const t=this.height;const r=this.rowSize;const n=this.bits;let i=e;let s=t;let o=-1;let a=-1;for(let e=0;e<t;e++){for(let t=0;t<r;t++){const l=n[e*r+t];if(l!==0){if(e<s){s=e}if(e>a){a=e}if(t*32<i){let e=0;while((l<<31-e&4294967295)===0){e++}if(t*32+e<i){i=t*32+e}}if(t*32+31>o){let e=31;while(l>>>e===0){e--}if(t*32+e>o){o=t*32+e}}}}}if(o<i||a<s){return null}return Int32Array.from([i,s,o-i+1,a-s+1])}getTopLeftOnBit(){const e=this.rowSize;const t=this.bits;let r=0;while(r<t.length&&t[r]===0){r++}if(r===t.length){return null}const n=r/e;let i=r%e*32;const s=t[r];let o=0;while((s<<31-o&4294967295)===0){o++}i+=o;return Int32Array.from([i,n])}getBottomRightOnBit(){const e=this.rowSize;const t=this.bits;let r=t.length-1;while(r>=0&&t[r]===0){r--}if(r<0){return null}const n=Math.floor(r/e);let i=Math.floor(r%e)*32;const s=t[r];let o=31;while(s>>>o===0){o--}i+=o;return Int32Array.from([i,n])}getWidth(){return this.width}getHeight(){return this.height}getRowSize(){return this.rowSize}equals(e){if(!(e instanceof y)){return false}const t=e;return this.width===t.width&&this.height===t.height&&this.rowSize===t.rowSize&&w.equals(this.bits,t.bits)}hashCode(){let e=this.width;e=31*e+this.width;e=31*e+this.height;e=31*e+this.rowSize;e=31*e+w.hashCode(this.bits);return e}toString(e="X ",t="  ",r="\n"){return this.buildToString(e,t,r)}buildToString(e,t,r){let n=new N;for(let i=0,s=this.height;i<s;i++){for(let r=0,s=this.width;r<s;r++){n.append(this.get(r,i)?e:t)}n.append(r)}return n.toString()}clone(){return new y(this.width,this.height,this.rowSize,this.bits.slice())}}class D extends o{static getNotFoundInstance(){return new D}}D.kind="NotFoundException";
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class O extends u{constructor(e){super(e);this.luminances=O.EMPTY;this.buckets=new Int32Array(O.LUMINANCE_BUCKETS)}getBlackRow(e,t){const r=this.getLuminanceSource();const n=r.getWidth();if(t===undefined||t===null||t.getSize()<n){t=new C(n)}else{t.clear()}this.initArrays(n);const i=r.getRow(e,this.luminances);const s=this.buckets;for(let e=0;e<n;e++){s[(i[e]&255)>>O.LUMINANCE_SHIFT]++}const o=O.estimateBlackPoint(s);if(n<3){for(let e=0;e<n;e++){if((i[e]&255)<o){t.set(e)}}}else{let e=i[0]&255;let r=i[1]&255;for(let s=1;s<n-1;s++){const n=i[s+1]&255;if((r*4-e-n)/2<o){t.set(s)}e=r;r=n}}return t}getBlackMatrix(){const e=this.getLuminanceSource();const t=e.getWidth();const r=e.getHeight();const n=new y(t,r);this.initArrays(t);const i=this.buckets;for(let n=1;n<5;n++){const s=Math.floor(r*n/5);const o=e.getRow(s,this.luminances);const a=Math.floor(t*4/5);for(let e=Math.floor(t/5);e<a;e++){const t=o[e]&255;i[t>>O.LUMINANCE_SHIFT]++}}const s=O.estimateBlackPoint(i);const o=e.getMatrix();for(let e=0;e<r;e++){const r=e*t;for(let i=0;i<t;i++){const t=o[r+i]&255;if(t<s){n.set(i,e)}}}return n}createBinarizer(e){return new O(e)}initArrays(e){if(this.luminances.length<e){this.luminances=new Uint8ClampedArray(e)}const t=this.buckets;for(let e=0;e<O.LUMINANCE_BUCKETS;e++){t[e]=0}}static estimateBlackPoint(e){const t=e.length;let r=0;let n=0;let i=0;for(let s=0;s<t;s++){if(e[s]>i){n=s;i=e[s]}if(e[s]>r){r=e[s]}}let s=0;let o=0;for(let r=0;r<t;r++){const t=r-n;const i=e[r]*t*t;if(i>o){s=r;o=i}}if(n>s){const e=n;n=s;s=e}if(s-n<=t/16){throw new D}let a=s-1;let l=-1;for(let t=s-1;t>n;t--){const i=t-n;const o=i*i*(s-t)*(r-e[t]);if(o>l){a=t;l=o}}return a<<O.LUMINANCE_SHIFT}}O.LUMINANCE_BITS=5;O.LUMINANCE_SHIFT=8-O.LUMINANCE_BITS;O.LUMINANCE_BUCKETS=1<<O.LUMINANCE_BITS;O.EMPTY=Uint8ClampedArray.from([0]);
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class M extends O{constructor(e){super(e);this.matrix=null}getBlackMatrix(){if(this.matrix!==null){return this.matrix}const e=this.getLuminanceSource();const t=e.getWidth();const r=e.getHeight();if(t>=M.MINIMUM_DIMENSION&&r>=M.MINIMUM_DIMENSION){const n=e.getMatrix();let i=t>>M.BLOCK_SIZE_POWER;if((t&M.BLOCK_SIZE_MASK)!==0){i++}let s=r>>M.BLOCK_SIZE_POWER;if((r&M.BLOCK_SIZE_MASK)!==0){s++}const o=M.calculateBlackPoints(n,i,s,t,r);const a=new y(t,r);M.calculateThresholdForBlock(n,i,s,t,r,o,a);this.matrix=a}else{this.matrix=super.getBlackMatrix()}return this.matrix}createBinarizer(e){return new M(e)}static calculateThresholdForBlock(e,t,r,n,i,s,o){const a=i-M.BLOCK_SIZE;const l=n-M.BLOCK_SIZE;for(let i=0;i<r;i++){let h=i<<M.BLOCK_SIZE_POWER;if(h>a){h=a}const c=M.cap(i,2,r-3);for(let r=0;r<t;r++){let i=r<<M.BLOCK_SIZE_POWER;if(i>l){i=l}const a=M.cap(r,2,t-3);let u=0;for(let e=-2;e<=2;e++){const t=s[c+e];u+=t[a-2]+t[a-1]+t[a]+t[a+1]+t[a+2]}const d=u/25;M.thresholdBlock(e,i,h,d,n,o)}}}static cap(e,t,r){return e<t?t:e>r?r:e}static thresholdBlock(e,t,r,n,i,s){for(let o=0,a=r*i+t;o<M.BLOCK_SIZE;o++,a+=i){for(let i=0;i<M.BLOCK_SIZE;i++){if((e[a+i]&255)<=n){s.set(t+i,r+o)}}}}static calculateBlackPoints(e,t,r,n,i){const s=i-M.BLOCK_SIZE;const o=n-M.BLOCK_SIZE;const a=new Array(r);for(let i=0;i<r;i++){a[i]=new Int32Array(t);let r=i<<M.BLOCK_SIZE_POWER;if(r>s){r=s}for(let s=0;s<t;s++){let t=s<<M.BLOCK_SIZE_POWER;if(t>o){t=o}let l=0;let h=255;let c=0;for(let i=0,s=r*n+t;i<M.BLOCK_SIZE;i++,s+=n){for(let t=0;t<M.BLOCK_SIZE;t++){const r=e[s+t]&255;l+=r;if(r<h){h=r}if(r>c){c=r}}if(c-h>M.MIN_DYNAMIC_RANGE){for(i++,s+=n;i<M.BLOCK_SIZE;i++,s+=n){for(let t=0;t<M.BLOCK_SIZE;t++){l+=e[s+t]&255}}}}let u=l>>M.BLOCK_SIZE_POWER*2;if(c-h<=M.MIN_DYNAMIC_RANGE){u=h/2;if(i>0&&s>0){const e=(a[i-1][s]+2*a[i][s-1]+a[i-1][s-1])/4;if(h<e){u=e}}}a[i][s]=u}}return a}}M.BLOCK_SIZE_POWER=3;M.BLOCK_SIZE=1<<M.BLOCK_SIZE_POWER;M.BLOCK_SIZE_MASK=M.BLOCK_SIZE-1;M.MINIMUM_DIMENSION=M.BLOCK_SIZE*5;M.MIN_DYNAMIC_RANGE=24;
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class b{constructor(e,t){this.width=e;this.height=t}getWidth(){return this.width}getHeight(){return this.height}isCropSupported(){return false}crop(e,t,r,n){throw new p("This luminance source does not support cropping.")}isRotateSupported(){return false}rotateCounterClockwise(){throw new p("This luminance source does not support rotation by 90 degrees.")}rotateCounterClockwise45(){throw new p("This luminance source does not support rotation by 45 degrees.")}toString(){const e=new Uint8ClampedArray(this.width);let t=new N;for(let r=0;r<this.height;r++){const n=this.getRow(r,e);for(let e=0;e<this.width;e++){const r=n[e]&255;let i;if(r<64){i="#"}else if(r<128){i="+"}else if(r<192){i="."}else{i=" "}t.append(i)}t.append("\n")}return t.toString()}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class B extends b{constructor(e){super(e.getWidth(),e.getHeight());this.delegate=e}getRow(e,t){const r=this.delegate.getRow(e,t);const n=this.getWidth();for(let e=0;e<n;e++){r[e]=255-(r[e]&255)}return r}getMatrix(){const e=this.delegate.getMatrix();const t=this.getWidth()*this.getHeight();const r=new Uint8ClampedArray(t);for(let n=0;n<t;n++){r[n]=255-(e[n]&255)}return r}isCropSupported(){return this.delegate.isCropSupported()}crop(e,t,r,n){return new B(this.delegate.crop(e,t,r,n))}isRotateSupported(){return this.delegate.isRotateSupported()}invert(){return this.delegate}rotateCounterClockwise(){return new B(this.delegate.rotateCounterClockwise())}rotateCounterClockwise45(){return new B(this.delegate.rotateCounterClockwise45())}}class P extends b{constructor(e){super(e.width,e.height);this.canvas=e;this.tempCanvasElement=null;this.buffer=P.makeBufferFromCanvasImageData(e)}static makeBufferFromCanvasImageData(e){const t=e.getContext("2d").getImageData(0,0,e.width,e.height);return P.toGrayscaleBuffer(t.data,e.width,e.height)}static toGrayscaleBuffer(e,t,r){const n=new Uint8ClampedArray(t*r);for(let t=0,r=0,i=e.length;t<i;t+=4,r++){let i;const s=e[t+3];if(s===0){i=255}else{const r=e[t];const n=e[t+1];const s=e[t+2];i=306*r+601*n+117*s+512>>10}n[r]=i}return n}getRow(e,t){if(e<0||e>=this.getHeight()){throw new l("Requested row is outside the image: "+e)}const r=this.getWidth();const n=e*r;if(t===null){t=this.buffer.slice(n,n+r)}else{if(t.length<r){t=new Uint8ClampedArray(r)}t.set(this.buffer.slice(n,n+r))}return t}getMatrix(){return this.buffer}isCropSupported(){return true}crop(e,t,r,n){super.crop(e,t,r,n);return this}isRotateSupported(){return true}rotateCounterClockwise(){this.rotate(-90);return this}rotateCounterClockwise45(){this.rotate(-45);return this}getTempCanvasElement(){if(null===this.tempCanvasElement){const e=this.canvas.ownerDocument.createElement("canvas");e.width=this.canvas.width;e.height=this.canvas.height;this.tempCanvasElement=e}return this.tempCanvasElement}rotate(e){const t=this.getTempCanvasElement();const r=t.getContext("2d");const n=e*P.DEGREE_TO_RADIANS;const i=this.canvas.width;const s=this.canvas.height;const o=Math.ceil(Math.abs(Math.cos(n))*i+Math.abs(Math.sin(n))*s);const a=Math.ceil(Math.abs(Math.sin(n))*i+Math.abs(Math.cos(n))*s);t.width=o;t.height=a;r.translate(o/2,a/2);r.rotate(n);r.drawImage(this.canvas,i/-2,s/-2);this.buffer=P.makeBufferFromCanvasImageData(t);return this}invert(){return new B(this)}}P.DEGREE_TO_RADIANS=Math.PI/180;class L{constructor(e,t,r){this.deviceId=e;this.label=t;this.kind="videoinput";this.groupId=r||undefined}toJSON(){return{kind:this.kind,groupId:this.groupId,deviceId:this.deviceId,label:this.label}}}var F=(globalThis||global||self||window||undefined)&&(globalThis||global||self||window||undefined).__awaiter||function(e,t,r,n){function i(e){return e instanceof r?e:new r(function(t){t(e)})}return new(r||(r=Promise))(function(r,s){function o(e){try{l(n.next(e))}catch(e){s(e)}}function a(e){try{l(n["throw"](e))}catch(e){s(e)}}function l(e){e.done?r(e.value):i(e.value).then(o,a)}l((n=n.apply(e,t||[])).next())})};class k{constructor(e,t=500,r){this.reader=e;this.timeBetweenScansMillis=t;this._hints=r;this._stopContinuousDecode=false;this._stopAsyncDecode=false;this._timeBetweenDecodingAttempts=0}get hasNavigator(){return typeof navigator!=="undefined"}get isMediaDevicesSuported(){return this.hasNavigator&&!!navigator.mediaDevices}get canEnumerateDevices(){return!!(this.isMediaDevicesSuported&&navigator.mediaDevices.enumerateDevices)}get timeBetweenDecodingAttempts(){return this._timeBetweenDecodingAttempts}set timeBetweenDecodingAttempts(e){this._timeBetweenDecodingAttempts=e<0?0:e}set hints(e){this._hints=e||null}get hints(){return this._hints}listVideoInputDevices(){return F(this,void 0,void 0,function*(){if(!this.hasNavigator){throw new Error("Can't enumerate devices, navigator is not present.")}if(!this.canEnumerateDevices){throw new Error("Can't enumerate devices, method not supported.")}const e=yield navigator.mediaDevices.enumerateDevices();const t=[];for(const r of e){const e=r.kind==="video"?"videoinput":r.kind;if(e!=="videoinput"){continue}const n=r.deviceId||r.id;const i=r.label||`Video device ${t.length+1}`;const s=r.groupId;const o={deviceId:n,label:i,kind:e,groupId:s};t.push(o)}return t})}getVideoInputDevices(){return F(this,void 0,void 0,function*(){const e=yield this.listVideoInputDevices();return e.map(e=>new L(e.deviceId,e.label))})}findDeviceById(e){return F(this,void 0,void 0,function*(){const t=yield this.listVideoInputDevices();if(!t){return null}return t.find(t=>t.deviceId===e)})}decodeFromInputVideoDevice(e,t){return F(this,void 0,void 0,function*(){return yield this.decodeOnceFromVideoDevice(e,t)})}decodeOnceFromVideoDevice(e,t){return F(this,void 0,void 0,function*(){this.reset();let r;if(!e){r={facingMode:"environment"}}else{r={deviceId:{exact:e}}}const n={video:r};return yield this.decodeOnceFromConstraints(n,t)})}decodeOnceFromConstraints(e,t){return F(this,void 0,void 0,function*(){const r=yield navigator.mediaDevices.getUserMedia(e);return yield this.decodeOnceFromStream(r,t)})}decodeOnceFromStream(e,t){return F(this,void 0,void 0,function*(){this.reset();const r=yield this.attachStreamToVideo(e,t);const n=yield this.decodeOnce(r);return n})}decodeFromInputVideoDeviceContinuously(e,t,r){return F(this,void 0,void 0,function*(){return yield this.decodeFromVideoDevice(e,t,r)})}decodeFromVideoDevice(e,t,r){return F(this,void 0,void 0,function*(){let n;if(!e){n={facingMode:"environment"}}else{n={deviceId:{exact:e}}}const i={video:n};return yield this.decodeFromConstraints(i,t,r)})}decodeFromConstraints(e,t,r){return F(this,void 0,void 0,function*(){const n=yield navigator.mediaDevices.getUserMedia(e);return yield this.decodeFromStream(n,t,r)})}decodeFromStream(e,t,r){return F(this,void 0,void 0,function*(){this.reset();const n=yield this.attachStreamToVideo(e,t);return yield this.decodeContinuously(n,r)})}stopAsyncDecode(){this._stopAsyncDecode=true}stopContinuousDecode(){this._stopContinuousDecode=true}attachStreamToVideo(e,t){return F(this,void 0,void 0,function*(){const r=this.prepareVideoElement(t);this.addVideoSource(r,e);this.videoElement=r;this.stream=e;yield this.playVideoOnLoadAsync(r);return r})}playVideoOnLoadAsync(e){return new Promise((t,r)=>this.playVideoOnLoad(e,()=>t()))}playVideoOnLoad(e,t){this.videoEndedListener=()=>this.stopStreams();this.videoCanPlayListener=()=>this.tryPlayVideo(e);e.addEventListener("ended",this.videoEndedListener);e.addEventListener("canplay",this.videoCanPlayListener);e.addEventListener("playing",t);this.tryPlayVideo(e)}isVideoPlaying(e){return e.currentTime>0&&!e.paused&&!e.ended&&e.readyState>2}tryPlayVideo(e){return F(this,void 0,void 0,function*(){if(this.isVideoPlaying(e)){console.warn("Trying to play video that is already playing.");return}try{yield e.play()}catch(e){console.warn("It was not possible to play the video.")}})}getMediaElement(e,t){const r=document.getElementById(e);if(!r){throw new a(`element with id '${e}' not found`)}if(r.nodeName.toLowerCase()!==t.toLowerCase()){throw new a(`element with id '${e}' must be an ${t} element`)}return r}decodeFromImage(e,t){if(!e&&!t){throw new a("either imageElement with a src set or an url must be provided")}if(t&&!e){return this.decodeFromImageUrl(t)}return this.decodeFromImageElement(e)}decodeFromVideo(e,t){if(!e&&!t){throw new a("Either an element with a src set or an URL must be provided")}if(t&&!e){return this.decodeFromVideoUrl(t)}return this.decodeFromVideoElement(e)}decodeFromVideoContinuously(e,t,r){if(undefined===e&&undefined===t){throw new a("Either an element with a src set or an URL must be provided")}if(t&&!e){return this.decodeFromVideoUrlContinuously(t,r)}return this.decodeFromVideoElementContinuously(e,r)}decodeFromImageElement(e){if(!e){throw new a("An image element must be provided.")}this.reset();const t=this.prepareImageElement(e);this.imageElement=t;let r;if(this.isImageLoaded(t)){r=this.decodeOnce(t,false,true)}else{r=this._decodeOnLoadImage(t)}return r}decodeFromVideoElement(e){const t=this._decodeFromVideoElementSetup(e);return this._decodeOnLoadVideo(t)}decodeFromVideoElementContinuously(e,t){const r=this._decodeFromVideoElementSetup(e);return this._decodeOnLoadVideoContinuously(r,t)}_decodeFromVideoElementSetup(e){if(!e){throw new a("A video element must be provided.")}this.reset();const t=this.prepareVideoElement(e);this.videoElement=t;return t}decodeFromImageUrl(e){if(!e){throw new a("An URL must be provided.")}this.reset();const t=this.prepareImageElement();this.imageElement=t;const r=this._decodeOnLoadImage(t);t.src=e;return r}decodeFromVideoUrl(e){if(!e){throw new a("An URL must be provided.")}this.reset();const t=this.prepareVideoElement();const r=this.decodeFromVideoElement(t);t.src=e;return r}decodeFromVideoUrlContinuously(e,t){if(!e){throw new a("An URL must be provided.")}this.reset();const r=this.prepareVideoElement();const n=this.decodeFromVideoElementContinuously(r,t);r.src=e;return n}_decodeOnLoadImage(e){return new Promise((t,r)=>{this.imageLoadedListener=()=>this.decodeOnce(e,false,true).then(t,r);e.addEventListener("load",this.imageLoadedListener)})}_decodeOnLoadVideo(e){return F(this,void 0,void 0,function*(){yield this.playVideoOnLoadAsync(e);return yield this.decodeOnce(e)})}_decodeOnLoadVideoContinuously(e,t){return F(this,void 0,void 0,function*(){yield this.playVideoOnLoadAsync(e);this.decodeContinuously(e,t)})}isImageLoaded(e){if(!e.complete){return false}if(e.naturalWidth===0){return false}return true}prepareImageElement(e){let t;if(typeof e==="undefined"){t=document.createElement("img");t.width=200;t.height=200}if(typeof e==="string"){t=this.getMediaElement(e,"img")}if(e instanceof HTMLImageElement){t=e}return t}prepareVideoElement(e){let t;if(!e&&typeof document!=="undefined"){t=document.createElement("video");t.width=200;t.height=200}if(typeof e==="string"){t=this.getMediaElement(e,"video")}if(e instanceof HTMLVideoElement){t=e}t.setAttribute("autoplay","true");t.setAttribute("muted","true");t.setAttribute("playsinline","true");return t}decodeOnce(e,t=true,r=true){this._stopAsyncDecode=false;const n=(i,s)=>{if(this._stopAsyncDecode){s(new D("Video stream has ended before any code could be detected."));this._stopAsyncDecode=undefined;return}try{const t=this.decode(e);i(t)}catch(e){const o=t&&e instanceof D;const a=e instanceof c||e instanceof _;const l=a&&r;if(o||l){return setTimeout(n,this._timeBetweenDecodingAttempts,i,s)}s(e)}};return new Promise((e,t)=>n(e,t))}decodeContinuously(e,t){this._stopContinuousDecode=false;const r=()=>{if(this._stopContinuousDecode){this._stopContinuousDecode=undefined;return}try{const n=this.decode(e);t(n,null);setTimeout(r,this.timeBetweenScansMillis)}catch(e){t(null,e);const n=e instanceof c||e instanceof _;const i=e instanceof D;if(n||i){setTimeout(r,this._timeBetweenDecodingAttempts)}}};r()}decode(e){const t=this.createBinaryBitmap(e);return this.decodeBitmap(t)}_isHTMLVideoElement(e){const t=e;return t.videoWidth!==0}createBinaryBitmap(e){const t=this.getCaptureCanvasContext(e);if(this._isHTMLVideoElement(e)){this.drawFrameOnCanvas(e)}else{this.drawImageOnCanvas(e)}const r=this.getCaptureCanvas(e);const n=new P(r);const i=new M(n);return new h(i)}getCaptureCanvasContext(e){if(!this.captureCanvasContext){const t=this.getCaptureCanvas(e);const r=t.getContext("2d");this.captureCanvasContext=r}return this.captureCanvasContext}getCaptureCanvas(e){if(!this.captureCanvas){const t=this.createCaptureCanvas(e);this.captureCanvas=t}return this.captureCanvas}drawFrameOnCanvas(e,t={sx:0,sy:0,sWidth:e.videoWidth,sHeight:e.videoHeight,dx:0,dy:0,dWidth:e.videoWidth,dHeight:e.videoHeight},r=this.captureCanvasContext){r.drawImage(e,t.sx,t.sy,t.sWidth,t.sHeight,t.dx,t.dy,t.dWidth,t.dHeight)}drawImageOnCanvas(e,t={sx:0,sy:0,sWidth:e.naturalWidth,sHeight:e.naturalHeight,dx:0,dy:0,dWidth:e.naturalWidth,dHeight:e.naturalHeight},r=this.captureCanvasContext){r.drawImage(e,t.sx,t.sy,t.sWidth,t.sHeight,t.dx,t.dy,t.dWidth,t.dHeight)}decodeBitmap(e){return this.reader.decode(e,this._hints)}createCaptureCanvas(e){if(typeof document==="undefined"){this._destroyCaptureCanvas();return null}const t=document.createElement("canvas");let r;let n;if(typeof e!=="undefined"){if(e instanceof HTMLVideoElement){r=e.videoWidth;n=e.videoHeight}else if(e instanceof HTMLImageElement){r=e.naturalWidth||e.width;n=e.naturalHeight||e.height}}t.style.width=r+"px";t.style.height=n+"px";t.width=r;t.height=n;return t}stopStreams(){if(this.stream){this.stream.getVideoTracks().forEach(e=>e.stop());this.stream=undefined}if(this._stopAsyncDecode===false){this.stopAsyncDecode()}if(this._stopContinuousDecode===false){this.stopContinuousDecode()}}reset(){this.stopStreams();this._destroyVideoElement();this._destroyImageElement();this._destroyCaptureCanvas()}_destroyVideoElement(){if(!this.videoElement){return}if(typeof this.videoEndedListener!=="undefined"){this.videoElement.removeEventListener("ended",this.videoEndedListener)}if(typeof this.videoPlayingEventListener!=="undefined"){this.videoElement.removeEventListener("playing",this.videoPlayingEventListener)}if(typeof this.videoCanPlayListener!=="undefined"){this.videoElement.removeEventListener("loadedmetadata",this.videoCanPlayListener)}this.cleanVideoSource(this.videoElement);this.videoElement=undefined}_destroyImageElement(){if(!this.imageElement){return}if(undefined!==this.imageLoadedListener){this.imageElement.removeEventListener("load",this.imageLoadedListener)}this.imageElement.src=undefined;this.imageElement.removeAttribute("src");this.imageElement=undefined}_destroyCaptureCanvas(){this.captureCanvasContext=undefined;this.captureCanvas=undefined}addVideoSource(e,t){try{e.srcObject=t}catch(r){e.src=URL.createObjectURL(t)}}cleanVideoSource(e){try{e.srcObject=null}catch(t){e.src=""}this.videoElement.removeAttribute("src")}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class v{constructor(e,t,r=(t==null?0:8*t.length),n,i,s=d.currentTimeMillis()){this.text=e;this.rawBytes=t;this.numBits=r;this.resultPoints=n;this.format=i;this.timestamp=s;this.text=e;this.rawBytes=t;if(undefined===r||null===r){this.numBits=t===null||t===undefined?0:8*t.length}else{this.numBits=r}this.resultPoints=n;this.format=i;this.resultMetadata=null;if(undefined===s||null===s){this.timestamp=d.currentTimeMillis()}else{this.timestamp=s}}getText(){return this.text}getRawBytes(){return this.rawBytes}getNumBits(){return this.numBits}getResultPoints(){return this.resultPoints}getBarcodeFormat(){return this.format}getResultMetadata(){return this.resultMetadata}putMetadata(e,t){if(this.resultMetadata===null){this.resultMetadata=new Map}this.resultMetadata.set(e,t)}putAllMetadata(e){if(e!==null){if(this.resultMetadata===null){this.resultMetadata=e}else{this.resultMetadata=new Map(e)}}}addResultPoints(e){const t=this.resultPoints;if(t===null){this.resultPoints=e}else if(e!==null&&e.length>0){const r=new Array(t.length+e.length);d.arraycopy(t,0,r,0,t.length);d.arraycopy(e,0,r,t.length,e.length);this.resultPoints=r}}getTimestamp(){return this.timestamp}toString(){return this.text}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var x;(function(e){e[e["AZTEC"]=0]="AZTEC";e[e["CODABAR"]=1]="CODABAR";e[e["CODE_39"]=2]="CODE_39";e[e["CODE_93"]=3]="CODE_93";e[e["CODE_128"]=4]="CODE_128";e[e["DATA_MATRIX"]=5]="DATA_MATRIX";e[e["EAN_8"]=6]="EAN_8";e[e["EAN_13"]=7]="EAN_13";e[e["ITF"]=8]="ITF";e[e["MAXICODE"]=9]="MAXICODE";e[e["PDF_417"]=10]="PDF_417";e[e["QR_CODE"]=11]="QR_CODE";e[e["RSS_14"]=12]="RSS_14";e[e["RSS_EXPANDED"]=13]="RSS_EXPANDED";e[e["UPC_A"]=14]="UPC_A";e[e["UPC_E"]=15]="UPC_E";e[e["UPC_EAN_EXTENSION"]=16]="UPC_EAN_EXTENSION"})(x||(x={}));var V=x;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var U;(function(e){e[e["OTHER"]=0]="OTHER";e[e["ORIENTATION"]=1]="ORIENTATION";e[e["BYTE_SEGMENTS"]=2]="BYTE_SEGMENTS";e[e["ERROR_CORRECTION_LEVEL"]=3]="ERROR_CORRECTION_LEVEL";e[e["ISSUE_NUMBER"]=4]="ISSUE_NUMBER";e[e["SUGGESTED_PRICE"]=5]="SUGGESTED_PRICE";e[e["POSSIBLE_COUNTRY"]=6]="POSSIBLE_COUNTRY";e[e["UPC_EAN_EXTENSION"]=7]="UPC_EAN_EXTENSION";e[e["PDF417_EXTRA_METADATA"]=8]="PDF417_EXTRA_METADATA";e[e["STRUCTURED_APPEND_SEQUENCE"]=9]="STRUCTURED_APPEND_SEQUENCE";e[e["STRUCTURED_APPEND_PARITY"]=10]="STRUCTURED_APPEND_PARITY"})(U||(U={}));var H=U;
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class G{constructor(e,t,r,n,i=-1,s=-1){this.rawBytes=e;this.text=t;this.byteSegments=r;this.ecLevel=n;this.structuredAppendSequenceNumber=i;this.structuredAppendParity=s;this.numBits=e===undefined||e===null?0:8*e.length}getRawBytes(){return this.rawBytes}getNumBits(){return this.numBits}setNumBits(e){this.numBits=e}getText(){return this.text}getByteSegments(){return this.byteSegments}getECLevel(){return this.ecLevel}getErrorsCorrected(){return this.errorsCorrected}setErrorsCorrected(e){this.errorsCorrected=e}getErasures(){return this.erasures}setErasures(e){this.erasures=e}getOther(){return this.other}setOther(e){this.other=e}hasStructuredAppend(){return this.structuredAppendParity>=0&&this.structuredAppendSequenceNumber>=0}getStructuredAppendParity(){return this.structuredAppendParity}getStructuredAppendSequenceNumber(){return this.structuredAppendSequenceNumber}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class X{exp(e){return this.expTable[e]}log(e){if(e===0){throw new l}return this.logTable[e]}static addOrSubtract(e,t){return e^t}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class W{constructor(e,t){if(t.length===0){throw new l}this.field=e;const r=t.length;if(r>1&&t[0]===0){let e=1;while(e<r&&t[e]===0){e++}if(e===r){this.coefficients=Int32Array.from([0])}else{this.coefficients=new Int32Array(r-e);d.arraycopy(t,e,this.coefficients,0,this.coefficients.length)}}else{this.coefficients=t}}getCoefficients(){return this.coefficients}getDegree(){return this.coefficients.length-1}isZero(){return this.coefficients[0]===0}getCoefficient(e){return this.coefficients[this.coefficients.length-1-e]}evaluateAt(e){if(e===0){return this.getCoefficient(0)}const t=this.coefficients;let r;if(e===1){r=0;for(let e=0,n=t.length;e!==n;e++){const n=t[e];r=X.addOrSubtract(r,n)}return r}r=t[0];const n=t.length;const i=this.field;for(let s=1;s<n;s++){r=X.addOrSubtract(i.multiply(e,r),t[s])}return r}addOrSubtract(e){if(!this.field.equals(e.field)){throw new l("GenericGFPolys do not have same GenericGF field")}if(this.isZero()){return e}if(e.isZero()){return this}let t=this.coefficients;let r=e.coefficients;if(t.length>r.length){const e=t;t=r;r=e}let n=new Int32Array(r.length);const i=r.length-t.length;d.arraycopy(r,0,n,0,i);for(let e=i;e<r.length;e++){n[e]=X.addOrSubtract(t[e-i],r[e])}return new W(this.field,n)}multiply(e){if(!this.field.equals(e.field)){throw new l("GenericGFPolys do not have same GenericGF field")}if(this.isZero()||e.isZero()){return this.field.getZero()}const t=this.coefficients;const r=t.length;const n=e.coefficients;const i=n.length;const s=new Int32Array(r+i-1);const o=this.field;for(let e=0;e<r;e++){const r=t[e];for(let t=0;t<i;t++){s[e+t]=X.addOrSubtract(s[e+t],o.multiply(r,n[t]))}}return new W(o,s)}multiplyScalar(e){if(e===0){return this.field.getZero()}if(e===1){return this}const t=this.coefficients.length;const r=this.field;const n=new Int32Array(t);const i=this.coefficients;for(let s=0;s<t;s++){n[s]=r.multiply(i[s],e)}return new W(r,n)}multiplyByMonomial(e,t){if(e<0){throw new l}if(t===0){return this.field.getZero()}const r=this.coefficients;const n=r.length;const i=new Int32Array(n+e);const s=this.field;for(let e=0;e<n;e++){i[e]=s.multiply(r[e],t)}return new W(s,i)}divide(e){if(!this.field.equals(e.field)){throw new l("GenericGFPolys do not have same GenericGF field")}if(e.isZero()){throw new l("Divide by 0")}const t=this.field;let r=t.getZero();let n=this;const i=e.getCoefficient(e.getDegree());const s=t.inverse(i);while(n.getDegree()>=e.getDegree()&&!n.isZero()){const i=n.getDegree()-e.getDegree();const o=t.multiply(n.getCoefficient(n.getDegree()),s);const a=e.multiplyByMonomial(i,o);const l=t.buildMonomial(i,o);r=r.addOrSubtract(l);n=n.addOrSubtract(a)}return[r,n]}toString(){let e="";for(let t=this.getDegree();t>=0;t--){let r=this.getCoefficient(t);if(r!==0){if(r<0){e+=" - ";r=-r}else{if(e.length>0){e+=" + "}}if(t===0||r!==1){const t=this.field.log(r);if(t===0){e+="1"}else if(t===1){e+="a"}else{e+="a^";e+=t}}if(t!==0){if(t===1){e+="x"}else{e+="x^";e+=t}}}}return e}}class z extends o{}z.kind="ArithmeticException";
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Y extends X{constructor(e,t,r){super();this.primitive=e;this.size=t;this.generatorBase=r;const n=new Int32Array(t);let i=1;for(let r=0;r<t;r++){n[r]=i;i*=2;if(i>=t){i^=e;i&=t-1}}this.expTable=n;const s=new Int32Array(t);for(let e=0;e<t-1;e++){s[n[e]]=e}this.logTable=s;this.zero=new W(this,Int32Array.from([0]));this.one=new W(this,Int32Array.from([1]))}getZero(){return this.zero}getOne(){return this.one}buildMonomial(e,t){if(e<0){throw new l}if(t===0){return this.zero}const r=new Int32Array(e+1);r[0]=t;return new W(this,r)}inverse(e){if(e===0){throw new z}return this.expTable[this.size-this.logTable[e]-1]}multiply(e,t){if(e===0||t===0){return 0}return this.expTable[(this.logTable[e]+this.logTable[t])%(this.size-1)]}getSize(){return this.size}getGeneratorBase(){return this.generatorBase}toString(){return"GF(0x"+A.toHexString(this.primitive)+","+this.size+")"}equals(e){return e===this}}Y.AZTEC_DATA_12=new Y(4201,4096,1);Y.AZTEC_DATA_10=new Y(1033,1024,1);Y.AZTEC_DATA_6=new Y(67,64,1);Y.AZTEC_PARAM=new Y(19,16,1);Y.QR_CODE_FIELD_256=new Y(285,256,0);Y.DATA_MATRIX_FIELD_256=new Y(301,256,1);Y.AZTEC_DATA_8=Y.DATA_MATRIX_FIELD_256;Y.MAXICODE_FIELD_64=Y.AZTEC_DATA_6;class Z extends o{}Z.kind="ReedSolomonException";class K extends o{}K.kind="IllegalStateException";
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class q{constructor(e){this.field=e}decode(e,t){const r=this.field;const n=new W(r,e);const i=new Int32Array(t);let s=true;for(let e=0;e<t;e++){const t=n.evaluateAt(r.exp(e+r.getGeneratorBase()));i[i.length-1-e]=t;if(t!==0){s=false}}if(s){return}const o=new W(r,i);const a=this.runEuclideanAlgorithm(r.buildMonomial(t,1),o,t);const l=a[0];const h=a[1];const c=this.findErrorLocations(l);const u=this.findErrorMagnitudes(h,c);for(let t=0;t<c.length;t++){const n=e.length-1-r.log(c[t]);if(n<0){throw new Z("Bad error location")}e[n]=Y.addOrSubtract(e[n],u[t])}}runEuclideanAlgorithm(e,t,r){if(e.getDegree()<t.getDegree()){const r=e;e=t;t=r}const n=this.field;let i=e;let s=t;let o=n.getZero();let a=n.getOne();while(s.getDegree()>=(r/2|0)){let e=i;let t=o;i=s;o=a;if(i.isZero()){throw new Z("r_{i-1} was zero")}s=e;let r=n.getZero();const l=i.getCoefficient(i.getDegree());const h=n.inverse(l);while(s.getDegree()>=i.getDegree()&&!s.isZero()){const e=s.getDegree()-i.getDegree();const t=n.multiply(s.getCoefficient(s.getDegree()),h);r=r.addOrSubtract(n.buildMonomial(e,t));s=s.addOrSubtract(i.multiplyByMonomial(e,t))}a=r.multiply(o).addOrSubtract(t);if(s.getDegree()>=i.getDegree()){throw new K("Division algorithm failed to reduce polynomial?")}}const l=a.getCoefficient(0);if(l===0){throw new Z("sigmaTilde(0) was zero")}const h=n.inverse(l);const c=a.multiplyScalar(h);const u=s.multiplyScalar(h);return[c,u]}findErrorLocations(e){const t=e.getDegree();if(t===1){return Int32Array.from([e.getCoefficient(1)])}const r=new Int32Array(t);let n=0;const i=this.field;for(let s=1;s<i.getSize()&&n<t;s++){if(e.evaluateAt(s)===0){r[n]=i.inverse(s);n++}}if(n!==t){throw new Z("Error locator degree does not match number of roots")}return r}findErrorMagnitudes(e,t){const r=t.length;const n=new Int32Array(r);const i=this.field;for(let s=0;s<r;s++){const o=i.inverse(t[s]);let a=1;for(let e=0;e<r;e++){if(s!==e){const r=i.multiply(t[e],o);const n=(r&1)===0?r|1:r&~1;a=i.multiply(a,n)}}n[s]=i.multiply(e.evaluateAt(o),i.inverse(a));if(i.getGeneratorBase()!==0){n[s]=i.multiply(n[s],o)}}return n}}
/*
     * Copyright 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var Q;(function(e){e[e["UPPER"]=0]="UPPER";e[e["LOWER"]=1]="LOWER";e[e["MIXED"]=2]="MIXED";e[e["DIGIT"]=3]="DIGIT";e[e["PUNCT"]=4]="PUNCT";e[e["BINARY"]=5]="BINARY"})(Q||(Q={}));class j{decode(e){this.ddata=e;let t=e.getBits();let r=this.extractBits(t);let n=this.correctBits(r);let i=j.convertBoolArrayToByteArray(n);let s=j.getEncodedData(n);let o=new G(i,s,null,null);o.setNumBits(n.length);return o}static highLevelDecode(e){return this.getEncodedData(e)}static getEncodedData(e){let t=e.length;let r=Q.UPPER;let n=Q.UPPER;let i="";let s=0;while(s<t){if(n===Q.BINARY){if(t-s<5){break}let o=j.readCode(e,s,5);s+=5;if(o===0){if(t-s<11){break}o=j.readCode(e,s,11)+31;s+=11}for(let r=0;r<o;r++){if(t-s<8){s=t;break}const r=j.readCode(e,s,8);i+=R.castAsNonUtf8Char(r);s+=8}n=r}else{let o=n===Q.DIGIT?4:5;if(t-s<o){break}let a=j.readCode(e,s,o);s+=o;let l=j.getCharacter(n,a);if(l.startsWith("CTRL_")){r=n;n=j.getTable(l.charAt(5));if(l.charAt(6)==="L"){r=n}}else{i+=l;n=r}}}return i}static getTable(e){switch(e){case"L":return Q.LOWER;case"P":return Q.PUNCT;case"M":return Q.MIXED;case"D":return Q.DIGIT;case"B":return Q.BINARY;case"U":default:return Q.UPPER}}static getCharacter(e,t){switch(e){case Q.UPPER:return j.UPPER_TABLE[t];case Q.LOWER:return j.LOWER_TABLE[t];case Q.MIXED:return j.MIXED_TABLE[t];case Q.PUNCT:return j.PUNCT_TABLE[t];case Q.DIGIT:return j.DIGIT_TABLE[t];default:throw new K("Bad table")}}correctBits(e){let t;let r;if(this.ddata.getNbLayers()<=2){r=6;t=Y.AZTEC_DATA_6}else if(this.ddata.getNbLayers()<=8){r=8;t=Y.AZTEC_DATA_8}else if(this.ddata.getNbLayers()<=22){r=10;t=Y.AZTEC_DATA_10}else{r=12;t=Y.AZTEC_DATA_12}let n=this.ddata.getNbDatablocks();let i=e.length/r;if(i<n){throw new _}let s=e.length%r;let o=new Int32Array(i);for(let t=0;t<i;t++,s+=r){o[t]=j.readCode(e,s,r)}try{let e=new q(t);e.decode(o,i-n)}catch(e){throw new _(e)}let a=(1<<r)-1;let l=0;for(let e=0;e<n;e++){let t=o[e];if(t===0||t===a){throw new _}else if(t===1||t===a-1){l++}}let h=new Array(n*r-l);let c=0;for(let e=0;e<n;e++){let t=o[e];if(t===1||t===a-1){h.fill(t>1,c,c+r-1);c+=r-1}else{for(let e=r-1;e>=0;--e){h[c++]=(t&1<<e)!==0}}}return h}extractBits(e){let t=this.ddata.isCompact();let r=this.ddata.getNbLayers();let n=(t?11:14)+r*4;let i=new Int32Array(n);let s=new Array(this.totalBitsInLayer(r,t));if(t){for(let e=0;e<i.length;e++){i[e]=e}}else{let e=n+1+2*A.truncDivision(A.truncDivision(n,2)-1,15);let t=n/2;let r=A.truncDivision(e,2);for(let e=0;e<t;e++){let n=e+A.truncDivision(e,15);i[t-e-1]=r-n-1;i[t+e]=r+n+1}}for(let o=0,a=0;o<r;o++){let l=(r-o)*4+(t?9:12);let h=o*2;let c=n-1-h;for(let t=0;t<l;t++){let r=t*2;for(let n=0;n<2;n++){s[a+r+n]=e.get(i[h+n],i[h+t]);s[a+2*l+r+n]=e.get(i[h+t],i[c-n]);s[a+4*l+r+n]=e.get(i[c-n],i[c-t]);s[a+6*l+r+n]=e.get(i[c-t],i[h+n])}}a+=l*8}return s}static readCode(e,t,r){let n=0;for(let i=t;i<t+r;i++){n<<=1;if(e[i]){n|=1}}return n}static readByte(e,t){let r=e.length-t;if(r>=8){return j.readCode(e,t,8)}return j.readCode(e,t,r)<<8-r}static convertBoolArrayToByteArray(e){let t=new Uint8Array((e.length+7)/8);for(let r=0;r<t.length;r++){t[r]=j.readByte(e,8*r)}return t}totalBitsInLayer(e,t){return((t?88:112)+16*e)*e}}j.UPPER_TABLE=["CTRL_PS"," ","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","CTRL_LL","CTRL_ML","CTRL_DL","CTRL_BS"];j.LOWER_TABLE=["CTRL_PS"," ","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","CTRL_US","CTRL_ML","CTRL_DL","CTRL_BS"];j.MIXED_TABLE=["CTRL_PS"," ","\\1","\\2","\\3","\\4","\\5","\\6","\\7","\b","\t","\n","\\13","\f","\r","\\33","\\34","\\35","\\36","\\37","@","\\","^","_","`","|","~","\\177","CTRL_LL","CTRL_UL","CTRL_PL","CTRL_BS"];j.PUNCT_TABLE=["","\r","\r\n",". ",", ",": ","!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","[","]","{","}","CTRL_UL"];j.DIGIT_TABLE=["CTRL_PS"," ","0","1","2","3","4","5","6","7","8","9",",",".","CTRL_UL","CTRL_US"];
/*
     * Copyright 2012 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class J{constructor(){}static round(e){if(NaN===e)return 0;if(e<=Number.MIN_SAFE_INTEGER)return Number.MIN_SAFE_INTEGER;if(e>=Number.MAX_SAFE_INTEGER)return Number.MAX_SAFE_INTEGER;return e+(e<0?-.5:.5)|0}static distance(e,t,r,n){const i=e-r;const s=t-n;return Math.sqrt(i*i+s*s)}static sum(e){let t=0;for(let r=0,n=e.length;r!==n;r++){const n=e[r];t+=n}return t}}class ${static floatToIntBits(e){return e}}$.MAX_VALUE=Number.MAX_SAFE_INTEGER;
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ee{constructor(e,t){this.x=e;this.y=t}getX(){return this.x}getY(){return this.y}equals(e){if(e instanceof ee){const t=e;return this.x===t.x&&this.y===t.y}return false}hashCode(){return 31*$.floatToIntBits(this.x)+$.floatToIntBits(this.y)}toString(){return"("+this.x+","+this.y+")"}static orderBestPatterns(e){const t=this.distance(e[0],e[1]);const r=this.distance(e[1],e[2]);const n=this.distance(e[0],e[2]);let i;let s;let o;if(r>=t&&r>=n){s=e[0];i=e[1];o=e[2]}else if(n>=r&&n>=t){s=e[1];i=e[0];o=e[2]}else{s=e[2];i=e[0];o=e[1]}if(this.crossProductZ(i,s,o)<0){const e=i;i=o;o=e}e[0]=i;e[1]=s;e[2]=o}static distance(e,t){return J.distance(e.x,e.y,t.x,t.y)}static crossProductZ(e,t,r){const n=t.x;const i=t.y;return(r.x-n)*(e.y-i)-(r.y-i)*(e.x-n)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class te{constructor(e,t){this.bits=e;this.points=t}getBits(){return this.bits}getPoints(){return this.points}}
/*
     * Copyright 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class re extends te{constructor(e,t,r,n,i){super(e,t);this.compact=r;this.nbDatablocks=n;this.nbLayers=i}getNbLayers(){return this.nbLayers}getNbDatablocks(){return this.nbDatablocks}isCompact(){return this.compact}}
/*
     * Copyright 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ne{constructor(e,t,r,n){this.image=e;this.height=e.getHeight();this.width=e.getWidth();if(undefined===t||null===t){t=ne.INIT_SIZE}if(undefined===r||null===r){r=e.getWidth()/2|0}if(undefined===n||null===n){n=e.getHeight()/2|0}const i=t/2|0;this.leftInit=r-i;this.rightInit=r+i;this.upInit=n-i;this.downInit=n+i;if(this.upInit<0||this.leftInit<0||this.downInit>=this.height||this.rightInit>=this.width){throw new D}}detect(){let e=this.leftInit;let t=this.rightInit;let r=this.upInit;let n=this.downInit;let i=false;let s=true;let o=false;let a=false;let l=false;let h=false;let c=false;const u=this.width;const d=this.height;while(s){s=false;let f=true;while((f||!a)&&t<u){f=this.containsBlackPoint(r,n,t,false);if(f){t++;s=true;a=true}else if(!a){t++}}if(t>=u){i=true;break}let g=true;while((g||!l)&&n<d){g=this.containsBlackPoint(e,t,n,true);if(g){n++;s=true;l=true}else if(!l){n++}}if(n>=d){i=true;break}let w=true;while((w||!h)&&e>=0){w=this.containsBlackPoint(r,n,e,false);if(w){e--;s=true;h=true}else if(!h){e--}}if(e<0){i=true;break}let A=true;while((A||!c)&&r>=0){A=this.containsBlackPoint(e,t,r,true);if(A){r--;s=true;c=true}else if(!c){r--}}if(r<0){i=true;break}if(s){o=true}}if(!i&&o){const i=t-e;let s=null;for(let t=1;s===null&&t<i;t++){s=this.getBlackPointOnSegment(e,n-t,e+t,n)}if(s==null){throw new D}let o=null;for(let t=1;o===null&&t<i;t++){o=this.getBlackPointOnSegment(e,r+t,e+t,r)}if(o==null){throw new D}let a=null;for(let e=1;a===null&&e<i;e++){a=this.getBlackPointOnSegment(t,r+e,t-e,r)}if(a==null){throw new D}let l=null;for(let e=1;l===null&&e<i;e++){l=this.getBlackPointOnSegment(t,n-e,t-e,n)}if(l==null){throw new D}return this.centerEdges(l,s,a,o)}else{throw new D}}getBlackPointOnSegment(e,t,r,n){const i=J.round(J.distance(e,t,r,n));const s=(r-e)/i;const o=(n-t)/i;const a=this.image;for(let r=0;r<i;r++){const n=J.round(e+r*s);const i=J.round(t+r*o);if(a.get(n,i)){return new ee(n,i)}}return null}centerEdges(e,t,r,n){const i=e.getX();const s=e.getY();const o=t.getX();const a=t.getY();const l=r.getX();const h=r.getY();const c=n.getX();const u=n.getY();const d=ne.CORR;if(i<this.width/2){return[new ee(c-d,u+d),new ee(o+d,a+d),new ee(l-d,h-d),new ee(i+d,s-d)]}else{return[new ee(c+d,u+d),new ee(o+d,a-d),new ee(l-d,h+d),new ee(i-d,s-d)]}}containsBlackPoint(e,t,r,n){const i=this.image;if(n){for(let n=e;n<=t;n++){if(i.get(n,r)){return true}}}else{for(let n=e;n<=t;n++){if(i.get(r,n)){return true}}}return false}}ne.INIT_SIZE=10;ne.CORR=1;
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ie{static checkAndNudgePoints(e,t){const r=e.getWidth();const n=e.getHeight();let i=true;for(let e=0;e<t.length&&i;e+=2){const s=Math.floor(t[e]);const o=Math.floor(t[e+1]);if(s<-1||s>r||o<-1||o>n){throw new D}i=false;if(s===-1){t[e]=0;i=true}else if(s===r){t[e]=r-1;i=true}if(o===-1){t[e+1]=0;i=true}else if(o===n){t[e+1]=n-1;i=true}}i=true;for(let e=t.length-2;e>=0&&i;e-=2){const s=Math.floor(t[e]);const o=Math.floor(t[e+1]);if(s<-1||s>r||o<-1||o>n){throw new D}i=false;if(s===-1){t[e]=0;i=true}else if(s===r){t[e]=r-1;i=true}if(o===-1){t[e+1]=0;i=true}else if(o===n){t[e+1]=n-1;i=true}}}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class se{constructor(e,t,r,n,i,s,o,a,l){this.a11=e;this.a21=t;this.a31=r;this.a12=n;this.a22=i;this.a32=s;this.a13=o;this.a23=a;this.a33=l}static quadrilateralToQuadrilateral(e,t,r,n,i,s,o,a,l,h,c,u,d,f,g,w){const A=se.quadrilateralToSquare(e,t,r,n,i,s,o,a);const C=se.squareToQuadrilateral(l,h,c,u,d,f,g,w);return C.times(A)}transformPoints(e){const t=e.length;const r=this.a11;const n=this.a12;const i=this.a13;const s=this.a21;const o=this.a22;const a=this.a23;const l=this.a31;const h=this.a32;const c=this.a33;for(let u=0;u<t;u+=2){const t=e[u];const d=e[u+1];const f=i*t+a*d+c;e[u]=(r*t+s*d+l)/f;e[u+1]=(n*t+o*d+h)/f}}transformPointsWithValues(e,t){const r=this.a11;const n=this.a12;const i=this.a13;const s=this.a21;const o=this.a22;const a=this.a23;const l=this.a31;const h=this.a32;const c=this.a33;const u=e.length;for(let d=0;d<u;d++){const u=e[d];const f=t[d];const g=i*u+a*f+c;e[d]=(r*u+s*f+l)/g;t[d]=(n*u+o*f+h)/g}}static squareToQuadrilateral(e,t,r,n,i,s,o,a){const l=e-r+i-o;const h=t-n+s-a;if(l===0&&h===0){return new se(r-e,i-r,e,n-t,s-n,t,0,0,1)}else{const c=r-i;const u=o-i;const d=n-s;const f=a-s;const g=c*f-u*d;const w=(l*f-u*h)/g;const A=(c*h-l*d)/g;return new se(r-e+w*r,o-e+A*o,e,n-t+w*n,a-t+A*a,t,w,A,1)}}static quadrilateralToSquare(e,t,r,n,i,s,o,a){return se.squareToQuadrilateral(e,t,r,n,i,s,o,a).buildAdjoint()}buildAdjoint(){return new se(this.a22*this.a33-this.a23*this.a32,this.a23*this.a31-this.a21*this.a33,this.a21*this.a32-this.a22*this.a31,this.a13*this.a32-this.a12*this.a33,this.a11*this.a33-this.a13*this.a31,this.a12*this.a31-this.a11*this.a32,this.a12*this.a23-this.a13*this.a22,this.a13*this.a21-this.a11*this.a23,this.a11*this.a22-this.a12*this.a21)}times(e){return new se(this.a11*e.a11+this.a21*e.a12+this.a31*e.a13,this.a11*e.a21+this.a21*e.a22+this.a31*e.a23,this.a11*e.a31+this.a21*e.a32+this.a31*e.a33,this.a12*e.a11+this.a22*e.a12+this.a32*e.a13,this.a12*e.a21+this.a22*e.a22+this.a32*e.a23,this.a12*e.a31+this.a22*e.a32+this.a32*e.a33,this.a13*e.a11+this.a23*e.a12+this.a33*e.a13,this.a13*e.a21+this.a23*e.a22+this.a33*e.a23,this.a13*e.a31+this.a23*e.a32+this.a33*e.a33)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class oe extends ie{sampleGrid(e,t,r,n,i,s,o,a,l,h,c,u,d,f,g,w,A,C,E){const m=se.quadrilateralToQuadrilateral(n,i,s,o,a,l,h,c,u,d,f,g,w,A,C,E);return this.sampleGridWithTransform(e,t,r,m)}sampleGridWithTransform(e,t,r,n){if(t<=0||r<=0){throw new D}const i=new y(t,r);const s=new Float32Array(2*t);for(let t=0;t<r;t++){const r=s.length;const o=t+.5;for(let e=0;e<r;e+=2){s[e]=e/2+.5;s[e+1]=o}n.transformPoints(s);ie.checkAndNudgePoints(e,s);try{for(let n=0;n<r;n+=2){if(e.get(Math.floor(s[n]),Math.floor(s[n+1]))){i.set(n/2,t)}}}catch(e){throw new D}}return i}}class ae{static setGridSampler(e){ae.gridSampler=e}static getInstance(){return ae.gridSampler}}ae.gridSampler=new oe;
/*
     * Copyright 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class le{constructor(e,t){this.x=e;this.y=t}toResultPoint(){return new ee(this.getX(),this.getY())}getX(){return this.x}getY(){return this.y}}class he{constructor(e){this.EXPECTED_CORNER_BITS=new Int32Array([3808,476,2107,1799]);this.image=e}detect(){return this.detectMirror(false)}detectMirror(e){let t=this.getMatrixCenter();let r=this.getBullsEyeCorners(t);if(e){let e=r[0];r[0]=r[2];r[2]=e}this.extractParameters(r);let n=this.sampleGrid(this.image,r[this.shift%4],r[(this.shift+1)%4],r[(this.shift+2)%4],r[(this.shift+3)%4]);let i=this.getMatrixCornerPoints(r);return new re(n,i,this.compact,this.nbDataBlocks,this.nbLayers)}extractParameters(e){if(!this.isValidPoint(e[0])||!this.isValidPoint(e[1])||!this.isValidPoint(e[2])||!this.isValidPoint(e[3])){throw new D}let t=2*this.nbCenterLayers;let r=new Int32Array([this.sampleLine(e[0],e[1],t),this.sampleLine(e[1],e[2],t),this.sampleLine(e[2],e[3],t),this.sampleLine(e[3],e[0],t)]);this.shift=this.getRotation(r,t);let n=0;for(let e=0;e<4;e++){let t=r[(this.shift+e)%4];if(this.compact){n<<=7;n+=t>>1&127}else{n<<=10;n+=(t>>2&31<<5)+(t>>1&31)}}let i=this.getCorrectedParameterData(n,this.compact);if(this.compact){this.nbLayers=(i>>6)+1;this.nbDataBlocks=(i&63)+1}else{this.nbLayers=(i>>11)+1;this.nbDataBlocks=(i&2047)+1}}getRotation(e,t){let r=0;e.forEach((e,n,i)=>{let s=(e>>t-2<<1)+(e&1);r=(r<<3)+s});r=((r&1)<<11)+(r>>1);for(let e=0;e<4;e++){if(A.bitCount(r^this.EXPECTED_CORNER_BITS[e])<=2){return e}}throw new D}getCorrectedParameterData(e,t){let r;let n;if(t){r=7;n=2}else{r=10;n=4}let i=r-n;let s=new Int32Array(r);for(let t=r-1;t>=0;--t){s[t]=e&15;e>>=4}try{let e=new q(Y.AZTEC_PARAM);e.decode(s,i)}catch(e){throw new D}let o=0;for(let e=0;e<n;e++){o=(o<<4)+s[e]}return o}getBullsEyeCorners(e){let t=e;let r=e;let n=e;let i=e;let s=true;for(this.nbCenterLayers=1;this.nbCenterLayers<9;this.nbCenterLayers++){let e=this.getFirstDifferent(t,s,1,-1);let o=this.getFirstDifferent(r,s,1,1);let a=this.getFirstDifferent(n,s,-1,1);let l=this.getFirstDifferent(i,s,-1,-1);if(this.nbCenterLayers>2){let r=this.distancePoint(l,e)*this.nbCenterLayers/(this.distancePoint(i,t)*(this.nbCenterLayers+2));if(r<.75||r>1.25||!this.isWhiteOrBlackRectangle(e,o,a,l)){break}}t=e;r=o;n=a;i=l;s=!s}if(this.nbCenterLayers!==5&&this.nbCenterLayers!==7){throw new D}this.compact=this.nbCenterLayers===5;let o=new ee(t.getX()+.5,t.getY()-.5);let a=new ee(r.getX()+.5,r.getY()+.5);let l=new ee(n.getX()-.5,n.getY()+.5);let h=new ee(i.getX()-.5,i.getY()-.5);return this.expandSquare([o,a,l,h],2*this.nbCenterLayers-3,2*this.nbCenterLayers)}getMatrixCenter(){let e;let t;let r;let n;try{let i=new ne(this.image).detect();e=i[0];t=i[1];r=i[2];n=i[3]}catch(i){let s=this.image.getWidth()/2;let o=this.image.getHeight()/2;e=this.getFirstDifferent(new le(s+7,o-7),false,1,-1).toResultPoint();t=this.getFirstDifferent(new le(s+7,o+7),false,1,1).toResultPoint();r=this.getFirstDifferent(new le(s-7,o+7),false,-1,1).toResultPoint();n=this.getFirstDifferent(new le(s-7,o-7),false,-1,-1).toResultPoint()}let i=J.round((e.getX()+n.getX()+t.getX()+r.getX())/4);let s=J.round((e.getY()+n.getY()+t.getY()+r.getY())/4);try{let o=new ne(this.image,15,i,s).detect();e=o[0];t=o[1];r=o[2];n=o[3]}catch(o){e=this.getFirstDifferent(new le(i+7,s-7),false,1,-1).toResultPoint();t=this.getFirstDifferent(new le(i+7,s+7),false,1,1).toResultPoint();r=this.getFirstDifferent(new le(i-7,s+7),false,-1,1).toResultPoint();n=this.getFirstDifferent(new le(i-7,s-7),false,-1,-1).toResultPoint()}i=J.round((e.getX()+n.getX()+t.getX()+r.getX())/4);s=J.round((e.getY()+n.getY()+t.getY()+r.getY())/4);return new le(i,s)}getMatrixCornerPoints(e){return this.expandSquare(e,2*this.nbCenterLayers,this.getDimension())}sampleGrid(e,t,r,n,i){let s=ae.getInstance();let o=this.getDimension();let a=o/2-this.nbCenterLayers;let l=o/2+this.nbCenterLayers;return s.sampleGrid(e,o,o,a,a,l,a,l,l,a,l,t.getX(),t.getY(),r.getX(),r.getY(),n.getX(),n.getY(),i.getX(),i.getY())}sampleLine(e,t,r){let n=0;let i=this.distanceResultPoint(e,t);let s=i/r;let o=e.getX();let a=e.getY();let l=s*(t.getX()-e.getX())/i;let h=s*(t.getY()-e.getY())/i;for(let e=0;e<r;e++){if(this.image.get(J.round(o+e*l),J.round(a+e*h))){n|=1<<r-e-1}}return n}isWhiteOrBlackRectangle(e,t,r,n){let i=3;e=new le(e.getX()-i,e.getY()+i);t=new le(t.getX()-i,t.getY()-i);r=new le(r.getX()+i,r.getY()-i);n=new le(n.getX()+i,n.getY()+i);let s=this.getColor(n,e);if(s===0){return false}let o=this.getColor(e,t);if(o!==s){return false}o=this.getColor(t,r);if(o!==s){return false}o=this.getColor(r,n);return o===s}getColor(e,t){let r=this.distancePoint(e,t);let n=(t.getX()-e.getX())/r;let i=(t.getY()-e.getY())/r;let s=0;let o=e.getX();let a=e.getY();let l=this.image.get(e.getX(),e.getY());let h=Math.ceil(r);for(let e=0;e<h;e++){o+=n;a+=i;if(this.image.get(J.round(o),J.round(a))!==l){s++}}let c=s/r;if(c>.1&&c<.9){return 0}return c<=.1===l?1:-1}getFirstDifferent(e,t,r,n){let i=e.getX()+r;let s=e.getY()+n;while(this.isValid(i,s)&&this.image.get(i,s)===t){i+=r;s+=n}i-=r;s-=n;while(this.isValid(i,s)&&this.image.get(i,s)===t){i+=r}i-=r;while(this.isValid(i,s)&&this.image.get(i,s)===t){s+=n}s-=n;return new le(i,s)}expandSquare(e,t,r){let n=r/(2*t);let i=e[0].getX()-e[2].getX();let s=e[0].getY()-e[2].getY();let o=(e[0].getX()+e[2].getX())/2;let a=(e[0].getY()+e[2].getY())/2;let l=new ee(o+n*i,a+n*s);let h=new ee(o-n*i,a-n*s);i=e[1].getX()-e[3].getX();s=e[1].getY()-e[3].getY();o=(e[1].getX()+e[3].getX())/2;a=(e[1].getY()+e[3].getY())/2;let c=new ee(o+n*i,a+n*s);let u=new ee(o-n*i,a-n*s);let d=[l,c,h,u];return d}isValid(e,t){return e>=0&&e<this.image.getWidth()&&t>0&&t<this.image.getHeight()}isValidPoint(e){let t=J.round(e.getX());let r=J.round(e.getY());return this.isValid(t,r)}distancePoint(e,t){return J.distance(e.getX(),e.getY(),t.getX(),t.getY())}distanceResultPoint(e,t){return J.distance(e.getX(),e.getY(),t.getX(),t.getY())}getDimension(){if(this.compact){return 4*this.nbLayers+11}if(this.nbLayers<=4){return 4*this.nbLayers+15}return 4*this.nbLayers+2*(A.truncDivision(this.nbLayers-4,8)+1)+15}}
/*
     * Copyright 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ce{decode(e,t=null){let r=null;let n=new he(e.getBlackMatrix());let i=null;let s=null;try{let e=n.detectMirror(false);i=e.getPoints();this.reportFoundResultPoints(t,i);s=(new j).decode(e)}catch(e){r=e}if(s==null){try{let e=n.detectMirror(true);i=e.getPoints();this.reportFoundResultPoints(t,i);s=(new j).decode(e)}catch(e){if(r!=null){throw r}throw e}}let o=new v(s.getText(),s.getRawBytes(),s.getNumBits(),i,V.AZTEC,d.currentTimeMillis());let a=s.getByteSegments();if(a!=null){o.putMetadata(H.BYTE_SEGMENTS,a)}let l=s.getECLevel();if(l!=null){o.putMetadata(H.ERROR_CORRECTION_LEVEL,l)}return o}reportFoundResultPoints(e,t){if(e!=null){let r=e.get(m.NEED_RESULT_POINT_CALLBACK);if(r!=null){t.forEach((e,t,n)=>{r.foundPossibleResultPoint(e)})}}}reset(){}}class ue extends k{constructor(e=500){super(new ce,e)}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class de{decode(e,t){try{return this.doDecode(e,t)}catch(r){const n=t&&t.get(m.TRY_HARDER)===true;if(n&&e.isRotateSupported()){const r=e.rotateCounterClockwise();const n=this.doDecode(r,t);const i=n.getResultMetadata();let s=270;if(i!==null&&i.get(H.ORIENTATION)===true){s=s+i.get(H.ORIENTATION)%360}n.putMetadata(H.ORIENTATION,s);const o=n.getResultPoints();if(o!==null){const e=r.getHeight();for(let t=0;t<o.length;t++){o[t]=new ee(e-o[t].getY()-1,o[t].getX())}}return n}else{throw new D}}}reset(){}doDecode(e,t){const r=e.getWidth();const n=e.getHeight();let i=new C(r);const s=t&&t.get(m.TRY_HARDER)===true;const o=Math.max(1,n>>(s?8:5));let a;if(s){a=n}else{a=15}const l=Math.trunc(n/2);for(let s=0;s<a;s++){const a=Math.trunc((s+1)/2);const h=(s&1)===0;const c=l+o*(h?a:-a);if(c<0||c>=n){break}try{i=e.getBlackRow(c,i)}catch(e){continue}for(let e=0;e<2;e++){if(e===1){i.reverse();if(t&&t.get(m.NEED_RESULT_POINT_CALLBACK)===true){const e=new Map;t.forEach((t,r)=>e.set(r,t));e.delete(m.NEED_RESULT_POINT_CALLBACK);t=e}}try{const n=this.decodeRow(c,i,t);if(e===1){n.putMetadata(H.ORIENTATION,180);const e=n.getResultPoints();if(e!==null){e[0]=new ee(r-e[0].getX()-1,e[0].getY());e[1]=new ee(r-e[1].getX()-1,e[1].getY())}}return n}catch(e){}}}throw new D}static recordPattern(e,t,r){const n=r.length;for(let e=0;e<n;e++)r[e]=0;const i=e.getSize();if(t>=i){throw new D}let s=!e.get(t);let o=0;let a=t;while(a<i){if(e.get(a)!==s){r[o]++}else{if(++o===n){break}else{r[o]=1;s=!s}}a++}if(!(o===n||o===n-1&&a===i)){throw new D}}static recordPatternInReverse(e,t,r){let n=r.length;let i=e.get(t);while(t>0&&n>=0){if(e.get(--t)!==i){n--;i=!i}}if(n>=0){throw new D}de.recordPattern(e,t+1,r)}static patternMatchVariance(e,t,r){const n=e.length;let i=0;let s=0;for(let r=0;r<n;r++){i+=e[r];s+=t[r]}if(i<s){return Number.POSITIVE_INFINITY}const o=i/s;r*=o;let a=0;for(let i=0;i<n;i++){const n=e[i];const s=t[i]*o;const l=n>s?n-s:s-n;if(l>r){return Number.POSITIVE_INFINITY}a+=l}return a/i}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class fe extends de{static findStartPattern(e){const t=e.getSize();const r=e.getNextSet(0);let n=0;let i=Int32Array.from([0,0,0,0,0,0]);let s=r;let o=false;const a=6;for(let l=r;l<t;l++){if(e.get(l)!==o){i[n]++}else{if(n===a-1){let t=fe.MAX_AVG_VARIANCE;let r=-1;for(let e=fe.CODE_START_A;e<=fe.CODE_START_C;e++){const n=de.patternMatchVariance(i,fe.CODE_PATTERNS[e],fe.MAX_INDIVIDUAL_VARIANCE);if(n<t){t=n;r=e}}if(r>=0&&e.isRange(Math.max(0,s-(l-s)/2),s,false)){return Int32Array.from([s,l,r])}s+=i[0]+i[1];i=i.slice(2,i.length-1);i[n-1]=0;i[n]=0;n--}else{n++}i[n]=1;o=!o}}throw new D}static decodeCode(e,t,r){de.recordPattern(e,r,t);let n=fe.MAX_AVG_VARIANCE;let i=-1;for(let e=0;e<fe.CODE_PATTERNS.length;e++){const r=fe.CODE_PATTERNS[e];const s=this.patternMatchVariance(t,r,fe.MAX_INDIVIDUAL_VARIANCE);if(s<n){n=s;i=e}}if(i>=0){return i}else{throw new D}}decodeRow(e,t,r){const n=r&&r.get(m.ASSUME_GS1)===true;const i=fe.findStartPattern(t);const s=i[2];let o=0;const a=new Uint8Array(20);a[o++]=s;let l;switch(s){case fe.CODE_START_A:l=fe.CODE_CODE_A;break;case fe.CODE_START_B:l=fe.CODE_CODE_B;break;case fe.CODE_START_C:l=fe.CODE_CODE_C;break;default:throw new _}let h=false;let u=false;let d="";let f=i[0];let g=i[1];const w=Int32Array.from([0,0,0,0,0,0]);let A=0;let C=0;let E=s;let I=0;let S=true;let p=false;let T=false;while(!h){const e=u;u=false;A=C;C=fe.decodeCode(t,w,g);a[o++]=C;if(C!==fe.CODE_STOP){S=true}if(C!==fe.CODE_STOP){I++;E+=I*C}f=g;g+=w.reduce((e,t)=>e+t,0);switch(C){case fe.CODE_START_A:case fe.CODE_START_B:case fe.CODE_START_C:throw new _}switch(l){case fe.CODE_CODE_A:if(C<64){if(T===p){d+=String.fromCharCode(" ".charCodeAt(0)+C)}else{d+=String.fromCharCode(" ".charCodeAt(0)+C+128)}T=false}else if(C<96){if(T===p){d+=String.fromCharCode(C-64)}else{d+=String.fromCharCode(C+64)}T=false}else{if(C!==fe.CODE_STOP){S=false}switch(C){case fe.CODE_FNC_1:if(n){if(d.length===0){d+="]C1"}else{d+=String.fromCharCode(29)}}break;case fe.CODE_FNC_2:case fe.CODE_FNC_3:break;case fe.CODE_FNC_4_A:if(!p&&T){p=true;T=false}else if(p&&T){p=false;T=false}else{T=true}break;case fe.CODE_SHIFT:u=true;l=fe.CODE_CODE_B;break;case fe.CODE_CODE_B:l=fe.CODE_CODE_B;break;case fe.CODE_CODE_C:l=fe.CODE_CODE_C;break;case fe.CODE_STOP:h=true;break}}break;case fe.CODE_CODE_B:if(C<96){if(T===p){d+=String.fromCharCode(" ".charCodeAt(0)+C)}else{d+=String.fromCharCode(" ".charCodeAt(0)+C+128)}T=false}else{if(C!==fe.CODE_STOP){S=false}switch(C){case fe.CODE_FNC_1:if(n){if(d.length===0){d+="]C1"}else{d+=String.fromCharCode(29)}}break;case fe.CODE_FNC_2:case fe.CODE_FNC_3:break;case fe.CODE_FNC_4_B:if(!p&&T){p=true;T=false}else if(p&&T){p=false;T=false}else{T=true}break;case fe.CODE_SHIFT:u=true;l=fe.CODE_CODE_A;break;case fe.CODE_CODE_A:l=fe.CODE_CODE_A;break;case fe.CODE_CODE_C:l=fe.CODE_CODE_C;break;case fe.CODE_STOP:h=true;break}}break;case fe.CODE_CODE_C:if(C<100){if(C<10){d+="0"}d+=C}else{if(C!==fe.CODE_STOP){S=false}switch(C){case fe.CODE_FNC_1:if(n){if(d.length===0){d+="]C1"}else{d+=String.fromCharCode(29)}}break;case fe.CODE_CODE_A:l=fe.CODE_CODE_A;break;case fe.CODE_CODE_B:l=fe.CODE_CODE_B;break;case fe.CODE_STOP:h=true;break}}break}if(e){l=l===fe.CODE_CODE_A?fe.CODE_CODE_B:fe.CODE_CODE_A}}const R=g-f;g=t.getNextUnset(g);if(!t.isRange(g,Math.min(t.getSize(),g+(g-f)/2),false)){throw new D}E-=I*A;if(E%103!==A){throw new c}const N=d.length;if(N===0){throw new D}if(N>0&&S){if(l===fe.CODE_CODE_C){d=d.substring(0,N-2)}else{d=d.substring(0,N-1)}}const y=(i[1]+i[0])/2;const O=f+R/2;const M=a.length;const b=new Uint8Array(M);for(let e=0;e<M;e++){b[e]=a[e]}const B=[new ee(y,e),new ee(O,e)];return new v(d,b,0,B,V.CODE_128,(new Date).getTime())}}fe.CODE_PATTERNS=[Int32Array.from([2,1,2,2,2,2]),Int32Array.from([2,2,2,1,2,2]),Int32Array.from([2,2,2,2,2,1]),Int32Array.from([1,2,1,2,2,3]),Int32Array.from([1,2,1,3,2,2]),Int32Array.from([1,3,1,2,2,2]),Int32Array.from([1,2,2,2,1,3]),Int32Array.from([1,2,2,3,1,2]),Int32Array.from([1,3,2,2,1,2]),Int32Array.from([2,2,1,2,1,3]),Int32Array.from([2,2,1,3,1,2]),Int32Array.from([2,3,1,2,1,2]),Int32Array.from([1,1,2,2,3,2]),Int32Array.from([1,2,2,1,3,2]),Int32Array.from([1,2,2,2,3,1]),Int32Array.from([1,1,3,2,2,2]),Int32Array.from([1,2,3,1,2,2]),Int32Array.from([1,2,3,2,2,1]),Int32Array.from([2,2,3,2,1,1]),Int32Array.from([2,2,1,1,3,2]),Int32Array.from([2,2,1,2,3,1]),Int32Array.from([2,1,3,2,1,2]),Int32Array.from([2,2,3,1,1,2]),Int32Array.from([3,1,2,1,3,1]),Int32Array.from([3,1,1,2,2,2]),Int32Array.from([3,2,1,1,2,2]),Int32Array.from([3,2,1,2,2,1]),Int32Array.from([3,1,2,2,1,2]),Int32Array.from([3,2,2,1,1,2]),Int32Array.from([3,2,2,2,1,1]),Int32Array.from([2,1,2,1,2,3]),Int32Array.from([2,1,2,3,2,1]),Int32Array.from([2,3,2,1,2,1]),Int32Array.from([1,1,1,3,2,3]),Int32Array.from([1,3,1,1,2,3]),Int32Array.from([1,3,1,3,2,1]),Int32Array.from([1,1,2,3,1,3]),Int32Array.from([1,3,2,1,1,3]),Int32Array.from([1,3,2,3,1,1]),Int32Array.from([2,1,1,3,1,3]),Int32Array.from([2,3,1,1,1,3]),Int32Array.from([2,3,1,3,1,1]),Int32Array.from([1,1,2,1,3,3]),Int32Array.from([1,1,2,3,3,1]),Int32Array.from([1,3,2,1,3,1]),Int32Array.from([1,1,3,1,2,3]),Int32Array.from([1,1,3,3,2,1]),Int32Array.from([1,3,3,1,2,1]),Int32Array.from([3,1,3,1,2,1]),Int32Array.from([2,1,1,3,3,1]),Int32Array.from([2,3,1,1,3,1]),Int32Array.from([2,1,3,1,1,3]),Int32Array.from([2,1,3,3,1,1]),Int32Array.from([2,1,3,1,3,1]),Int32Array.from([3,1,1,1,2,3]),Int32Array.from([3,1,1,3,2,1]),Int32Array.from([3,3,1,1,2,1]),Int32Array.from([3,1,2,1,1,3]),Int32Array.from([3,1,2,3,1,1]),Int32Array.from([3,3,2,1,1,1]),Int32Array.from([3,1,4,1,1,1]),Int32Array.from([2,2,1,4,1,1]),Int32Array.from([4,3,1,1,1,1]),Int32Array.from([1,1,1,2,2,4]),Int32Array.from([1,1,1,4,2,2]),Int32Array.from([1,2,1,1,2,4]),Int32Array.from([1,2,1,4,2,1]),Int32Array.from([1,4,1,1,2,2]),Int32Array.from([1,4,1,2,2,1]),Int32Array.from([1,1,2,2,1,4]),Int32Array.from([1,1,2,4,1,2]),Int32Array.from([1,2,2,1,1,4]),Int32Array.from([1,2,2,4,1,1]),Int32Array.from([1,4,2,1,1,2]),Int32Array.from([1,4,2,2,1,1]),Int32Array.from([2,4,1,2,1,1]),Int32Array.from([2,2,1,1,1,4]),Int32Array.from([4,1,3,1,1,1]),Int32Array.from([2,4,1,1,1,2]),Int32Array.from([1,3,4,1,1,1]),Int32Array.from([1,1,1,2,4,2]),Int32Array.from([1,2,1,1,4,2]),Int32Array.from([1,2,1,2,4,1]),Int32Array.from([1,1,4,2,1,2]),Int32Array.from([1,2,4,1,1,2]),Int32Array.from([1,2,4,2,1,1]),Int32Array.from([4,1,1,2,1,2]),Int32Array.from([4,2,1,1,1,2]),Int32Array.from([4,2,1,2,1,1]),Int32Array.from([2,1,2,1,4,1]),Int32Array.from([2,1,4,1,2,1]),Int32Array.from([4,1,2,1,2,1]),Int32Array.from([1,1,1,1,4,3]),Int32Array.from([1,1,1,3,4,1]),Int32Array.from([1,3,1,1,4,1]),Int32Array.from([1,1,4,1,1,3]),Int32Array.from([1,1,4,3,1,1]),Int32Array.from([4,1,1,1,1,3]),Int32Array.from([4,1,1,3,1,1]),Int32Array.from([1,1,3,1,4,1]),Int32Array.from([1,1,4,1,3,1]),Int32Array.from([3,1,1,1,4,1]),Int32Array.from([4,1,1,1,3,1]),Int32Array.from([2,1,1,4,1,2]),Int32Array.from([2,1,1,2,1,4]),Int32Array.from([2,1,1,2,3,2]),Int32Array.from([2,3,3,1,1,1,2])];fe.MAX_AVG_VARIANCE=.25;fe.MAX_INDIVIDUAL_VARIANCE=.7;fe.CODE_SHIFT=98;fe.CODE_CODE_C=99;fe.CODE_CODE_B=100;fe.CODE_CODE_A=101;fe.CODE_FNC_1=102;fe.CODE_FNC_2=97;fe.CODE_FNC_3=96;fe.CODE_FNC_4_A=101;fe.CODE_FNC_4_B=100;fe.CODE_START_A=103;fe.CODE_START_B=104;fe.CODE_START_C=105;fe.CODE_STOP=106;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ge extends de{constructor(e=false,t=false){super();this.usingCheckDigit=e;this.extendedMode=t;this.decodeRowResult="";this.counters=new Int32Array(9)}decodeRow(e,t,r){let n=this.counters;n.fill(0);this.decodeRowResult="";let i=ge.findAsteriskPattern(t,n);let s=t.getNextSet(i[1]);let o=t.getSize();let a;let l;do{ge.recordPattern(t,s,n);let e=ge.toNarrowWidePattern(n);if(e<0){throw new D}a=ge.patternToChar(e);this.decodeRowResult+=a;l=s;for(let e of n){s+=e}s=t.getNextSet(s)}while(a!=="*");this.decodeRowResult=this.decodeRowResult.substring(0,this.decodeRowResult.length-1);let h=0;for(let e of n){h+=e}let u=s-l-h;if(s!==o&&u*2<h){throw new D}if(this.usingCheckDigit){let e=this.decodeRowResult.length-1;let t=0;for(let r=0;r<e;r++){t+=ge.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(r))}if(this.decodeRowResult.charAt(e)!==ge.ALPHABET_STRING.charAt(t%43)){throw new c}this.decodeRowResult=this.decodeRowResult.substring(0,e)}if(this.decodeRowResult.length===0){throw new D}let d;if(this.extendedMode){d=ge.decodeExtended(this.decodeRowResult)}else{d=this.decodeRowResult}let f=(i[1]+i[0])/2;let g=l+h/2;return new v(d,null,0,[new ee(f,e),new ee(g,e)],V.CODE_39,(new Date).getTime())}static findAsteriskPattern(e,t){let r=e.getSize();let n=e.getNextSet(0);let i=0;let s=n;let o=false;let a=t.length;for(let l=n;l<r;l++){if(e.get(l)!==o){t[i]++}else{if(i===a-1){if(this.toNarrowWidePattern(t)===ge.ASTERISK_ENCODING&&e.isRange(Math.max(0,s-Math.floor((l-s)/2)),s,false)){return[s,l]}s+=t[0]+t[1];t.copyWithin(0,2,2+i-1);t[i-1]=0;t[i]=0;i--}else{i++}t[i]=1;o=!o}}throw new D}static toNarrowWidePattern(e){let t=e.length;let r=0;let n;do{let i=2147483647;for(let t of e){if(t<i&&t>r){i=t}}r=i;n=0;let s=0;let o=0;for(let i=0;i<t;i++){let a=e[i];if(a>r){o|=1<<t-1-i;n++;s+=a}}if(n===3){for(let i=0;i<t&&n>0;i++){let t=e[i];if(t>r){n--;if(t*2>=s){return-1}}}return o}}while(n>3);return-1}static patternToChar(e){for(let t=0;t<ge.CHARACTER_ENCODINGS.length;t++){if(ge.CHARACTER_ENCODINGS[t]===e){return ge.ALPHABET_STRING.charAt(t)}}if(e===ge.ASTERISK_ENCODING){return"*"}throw new D}static decodeExtended(e){let t=e.length;let r="";for(let n=0;n<t;n++){let t=e.charAt(n);if(t==="+"||t==="$"||t==="%"||t==="/"){let i=e.charAt(n+1);let s="\0";switch(t){case"+":if(i>="A"&&i<="Z"){s=String.fromCharCode(i.charCodeAt(0)+32)}else{throw new _}break;case"$":if(i>="A"&&i<="Z"){s=String.fromCharCode(i.charCodeAt(0)-64)}else{throw new _}break;case"%":if(i>="A"&&i<="E"){s=String.fromCharCode(i.charCodeAt(0)-38)}else if(i>="F"&&i<="J"){s=String.fromCharCode(i.charCodeAt(0)-11)}else if(i>="K"&&i<="O"){s=String.fromCharCode(i.charCodeAt(0)+16)}else if(i>="P"&&i<="T"){s=String.fromCharCode(i.charCodeAt(0)+43)}else if(i==="U"){s="\0"}else if(i==="V"){s="@"}else if(i==="W"){s="`"}else if(i==="X"||i==="Y"||i==="Z"){s=""}else{throw new _}break;case"/":if(i>="A"&&i<="O"){s=String.fromCharCode(i.charCodeAt(0)-32)}else if(i==="Z"){s=":"}else{throw new _}break}r+=s;n++}else{r+=t}}return r}}ge.ALPHABET_STRING="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%";ge.CHARACTER_ENCODINGS=[52,289,97,352,49,304,112,37,292,100,265,73,328,25,280,88,13,268,76,28,259,67,322,19,274,82,7,262,70,22,385,193,448,145,400,208,133,388,196,168,162,138,42];ge.ASTERISK_ENCODING=148;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class we extends de{constructor(){super(...arguments);this.narrowLineWidth=-1}decodeRow(e,t,r){let n=this.decodeStart(t);let i=this.decodeEnd(t);let s=new N;we.decodeMiddle(t,n[1],i[0],s);let o=s.toString();let a=null;if(r!=null){a=r.get(m.ALLOWED_LENGTHS)}if(a==null){a=we.DEFAULT_ALLOWED_LENGTHS}let l=o.length;let h=false;let c=0;for(let e of a){if(l===e){h=true;break}if(e>c){c=e}}if(!h&&l>c){h=true}if(!h){throw new _}const u=[new ee(n[1],e),new ee(i[0],e)];let d=new v(o,null,0,u,V.ITF,(new Date).getTime());return d}static decodeMiddle(e,t,r,n){let i=new Int32Array(10);let s=new Int32Array(5);let o=new Int32Array(5);i.fill(0);s.fill(0);o.fill(0);while(t<r){de.recordPattern(e,t,i);for(let e=0;e<5;e++){let t=2*e;s[e]=i[t];o[e]=i[t+1]}let r=we.decodeDigit(s);n.append(r.toString());r=this.decodeDigit(o);n.append(r.toString());i.forEach(function(e){t+=e})}}decodeStart(e){let t=we.skipWhiteSpace(e);let r=we.findGuardPattern(e,t,we.START_PATTERN);this.narrowLineWidth=(r[1]-r[0])/4;this.validateQuietZone(e,r[0]);return r}validateQuietZone(e,t){let r=this.narrowLineWidth*10;r=r<t?r:t;for(let n=t-1;r>0&&n>=0;n--){if(e.get(n)){break}r--}if(r!==0){throw new D}}static skipWhiteSpace(e){const t=e.getSize();const r=e.getNextSet(0);if(r===t){throw new D}return r}decodeEnd(e){e.reverse();try{let t=we.skipWhiteSpace(e);let r;try{r=we.findGuardPattern(e,t,we.END_PATTERN_REVERSED[0])}catch(n){if(n instanceof D){r=we.findGuardPattern(e,t,we.END_PATTERN_REVERSED[1])}}this.validateQuietZone(e,r[0]);let n=r[0];r[0]=e.getSize()-r[1];r[1]=e.getSize()-n;return r}finally{e.reverse()}}static findGuardPattern(e,t,r){let n=r.length;let i=new Int32Array(n);let s=e.getSize();let o=false;let a=0;let l=t;i.fill(0);for(let h=t;h<s;h++){if(e.get(h)!==o){i[a]++}else{if(a===n-1){if(de.patternMatchVariance(i,r,we.MAX_INDIVIDUAL_VARIANCE)<we.MAX_AVG_VARIANCE){return[l,h]}l+=i[0]+i[1];d.arraycopy(i,2,i,0,a-1);i[a-1]=0;i[a]=0;a--}else{a++}i[a]=1;o=!o}}throw new D}static decodeDigit(e){let t=we.MAX_AVG_VARIANCE;let r=-1;let n=we.PATTERNS.length;for(let i=0;i<n;i++){let n=we.PATTERNS[i];let s=de.patternMatchVariance(e,n,we.MAX_INDIVIDUAL_VARIANCE);if(s<t){t=s;r=i}else if(s===t){r=-1}}if(r>=0){return r%10}else{throw new D}}}we.PATTERNS=[Int32Array.from([1,1,2,2,1]),Int32Array.from([2,1,1,1,2]),Int32Array.from([1,2,1,1,2]),Int32Array.from([2,2,1,1,1]),Int32Array.from([1,1,2,1,2]),Int32Array.from([2,1,2,1,1]),Int32Array.from([1,2,2,1,1]),Int32Array.from([1,1,1,2,2]),Int32Array.from([2,1,1,2,1]),Int32Array.from([1,2,1,2,1]),Int32Array.from([1,1,3,3,1]),Int32Array.from([3,1,1,1,3]),Int32Array.from([1,3,1,1,3]),Int32Array.from([3,3,1,1,1]),Int32Array.from([1,1,3,1,3]),Int32Array.from([3,1,3,1,1]),Int32Array.from([1,3,3,1,1]),Int32Array.from([1,1,1,3,3]),Int32Array.from([3,1,1,3,1]),Int32Array.from([1,3,1,3,1])];we.MAX_AVG_VARIANCE=.38;we.MAX_INDIVIDUAL_VARIANCE=.5;we.DEFAULT_ALLOWED_LENGTHS=[6,8,10,12,14];we.START_PATTERN=Int32Array.from([1,1,1,1]);we.END_PATTERN_REVERSED=[Int32Array.from([1,1,2]),Int32Array.from([1,1,3])];
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ae extends de{constructor(){super(...arguments);this.decodeRowStringBuffer=""}static findStartGuardPattern(e){let t=false;let r;let n=0;let i=Int32Array.from([0,0,0]);while(!t){i=Int32Array.from([0,0,0]);r=Ae.findGuardPattern(e,n,false,this.START_END_PATTERN,i);let s=r[0];n=r[1];let o=s-(n-s);if(o>=0){t=e.isRange(o,s,false)}}return r}static checkChecksum(e){return Ae.checkStandardUPCEANChecksum(e)}static checkStandardUPCEANChecksum(e){let t=e.length;if(t===0)return false;let r=parseInt(e.charAt(t-1),10);return Ae.getStandardUPCEANChecksum(e.substring(0,t-1))===r}static getStandardUPCEANChecksum(e){let t=e.length;let r=0;for(let n=t-1;n>=0;n-=2){let t=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0);if(t<0||t>9){throw new _}r+=t}r*=3;for(let n=t-2;n>=0;n-=2){let t=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0);if(t<0||t>9){throw new _}r+=t}return(1e3-r)%10}static decodeEnd(e,t){return Ae.findGuardPattern(e,t,false,Ae.START_END_PATTERN,new Int32Array(Ae.START_END_PATTERN.length).fill(0))}static findGuardPatternWithoutCounters(e,t,r,n){return this.findGuardPattern(e,t,r,n,new Int32Array(n.length))}static findGuardPattern(e,t,r,n,i){let s=e.getSize();t=r?e.getNextUnset(t):e.getNextSet(t);let o=0;let a=t;let l=n.length;let h=r;for(let r=t;r<s;r++){if(e.get(r)!==h){i[o]++}else{if(o===l-1){if(de.patternMatchVariance(i,n,Ae.MAX_INDIVIDUAL_VARIANCE)<Ae.MAX_AVG_VARIANCE){return Int32Array.from([a,r])}a+=i[0]+i[1];let e=i.slice(2,i.length-1);for(let t=0;t<o-1;t++){i[t]=e[t]}i[o-1]=0;i[o]=0;o--}else{o++}i[o]=1;h=!h}}throw new D}static decodeDigit(e,t,r,n){this.recordPattern(e,r,t);let i=this.MAX_AVG_VARIANCE;let s=-1;let o=n.length;for(let e=0;e<o;e++){let r=n[e];let o=de.patternMatchVariance(t,r,Ae.MAX_INDIVIDUAL_VARIANCE);if(o<i){i=o;s=e}}if(s>=0){return s}else{throw new D}}}Ae.MAX_AVG_VARIANCE=.48;Ae.MAX_INDIVIDUAL_VARIANCE=.7;Ae.START_END_PATTERN=Int32Array.from([1,1,1]);Ae.MIDDLE_PATTERN=Int32Array.from([1,1,1,1,1]);Ae.END_PATTERN=Int32Array.from([1,1,1,1,1,1]);Ae.L_PATTERNS=[Int32Array.from([3,2,1,1]),Int32Array.from([2,2,2,1]),Int32Array.from([2,1,2,2]),Int32Array.from([1,4,1,1]),Int32Array.from([1,1,3,2]),Int32Array.from([1,2,3,1]),Int32Array.from([1,1,1,4]),Int32Array.from([1,3,1,2]),Int32Array.from([1,2,1,3]),Int32Array.from([3,1,1,2])];
/*
     * Copyright (C) 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ce{constructor(){this.CHECK_DIGIT_ENCODINGS=[24,20,18,17,12,6,3,10,9,5];this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);this.decodeRowStringBuffer=""}decodeRow(e,t,r){let n=this.decodeRowStringBuffer;let i=this.decodeMiddle(t,r,n);let s=n.toString();let o=Ce.parseExtensionString(s);let a=[new ee((r[0]+r[1])/2,e),new ee(i,e)];let l=new v(s,null,0,a,V.UPC_EAN_EXTENSION,(new Date).getTime());if(o!=null){l.putAllMetadata(o)}return l}decodeMiddle(e,t,r){let n=this.decodeMiddleCounters;n[0]=0;n[1]=0;n[2]=0;n[3]=0;let i=e.getSize();let s=t[1];let o=0;for(let t=0;t<5&&s<i;t++){let i=Ae.decodeDigit(e,n,s,Ae.L_AND_G_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+i%10);for(let e of n){s+=e}if(i>=10){o|=1<<4-t}if(t!==4){s=e.getNextSet(s);s=e.getNextUnset(s)}}if(r.length!==5){throw new D}let a=this.determineCheckDigit(o);if(Ce.extensionChecksum(r.toString())!==a){throw new D}return s}static extensionChecksum(e){let t=e.length;let r=0;for(let n=t-2;n>=0;n-=2){r+=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0)}r*=3;for(let n=t-1;n>=0;n-=2){r+=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0)}r*=3;return r%10}determineCheckDigit(e){for(let t=0;t<10;t++){if(e===this.CHECK_DIGIT_ENCODINGS[t]){return t}}throw new D}static parseExtensionString(e){if(e.length!==5){return null}let t=Ce.parseExtension5String(e);if(t==null){return null}return new Map([[H.SUGGESTED_PRICE,t]])}static parseExtension5String(e){let t;switch(e.charAt(0)){case"0":t="£";break;case"5":t="$";break;case"9":switch(e){case"90000":return null;case"99991":return"0.00";case"99990":return"Used"}t="";break;default:t="";break}let r=parseInt(e.substring(1));let n=(r/100).toString();let i=r%100;let s=i<10?"0"+i:i.toString();return t+n+"."+s}}
/*
     * Copyright (C) 2012 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ee{constructor(){this.decodeMiddleCounters=Int32Array.from([0,0,0,0]);this.decodeRowStringBuffer=""}decodeRow(e,t,r){let n=this.decodeRowStringBuffer;let i=this.decodeMiddle(t,r,n);let s=n.toString();let o=Ee.parseExtensionString(s);let a=[new ee((r[0]+r[1])/2,e),new ee(i,e)];let l=new v(s,null,0,a,V.UPC_EAN_EXTENSION,(new Date).getTime());if(o!=null){l.putAllMetadata(o)}return l}decodeMiddle(e,t,r){let n=this.decodeMiddleCounters;n[0]=0;n[1]=0;n[2]=0;n[3]=0;let i=e.getSize();let s=t[1];let o=0;for(let t=0;t<2&&s<i;t++){let i=Ae.decodeDigit(e,n,s,Ae.L_AND_G_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+i%10);for(let e of n){s+=e}if(i>=10){o|=1<<1-t}if(t!==1){s=e.getNextSet(s);s=e.getNextUnset(s)}}if(r.length!==2){throw new D}if(parseInt(r.toString())%4!==o){throw new D}return s}static parseExtensionString(e){if(e.length!==2){return null}return new Map([[H.ISSUE_NUMBER,parseInt(e)]])}}
/*
     * Copyright (C) 2010 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class me{static decodeRow(e,t,r){let n=Ae.findGuardPattern(t,r,false,this.EXTENSION_START_PATTERN,new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));try{let r=new Ce;return r.decodeRow(e,t,n)}catch(r){let i=new Ee;return i.decodeRow(e,t,n)}}}me.EXTENSION_START_PATTERN=Int32Array.from([1,1,2]);
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class _e extends Ae{constructor(){super();this.decodeRowStringBuffer="";_e.L_AND_G_PATTERNS=_e.L_PATTERNS.map(e=>Int32Array.from(e));for(let e=10;e<20;e++){let t=_e.L_PATTERNS[e-10];let r=new Int32Array(t.length);for(let e=0;e<t.length;e++){r[e]=t[t.length-e-1]}_e.L_AND_G_PATTERNS[e]=r}}decodeRow(e,t,r){let n=_e.findStartGuardPattern(t);let i=r==null?null:r.get(m.NEED_RESULT_POINT_CALLBACK);if(i!=null){const t=new ee((n[0]+n[1])/2,e);i.foundPossibleResultPoint(t)}let s=this.decodeMiddle(t,n,this.decodeRowStringBuffer);let o=s.rowOffset;let a=s.resultString;if(i!=null){const t=new ee(o,e);i.foundPossibleResultPoint(t)}let l=_e.decodeEnd(t,o);if(i!=null){const t=new ee((l[0]+l[1])/2,e);i.foundPossibleResultPoint(t)}let h=l[1];let u=h+(h-l[0]);if(u>=t.getSize()||!t.isRange(h,u,false)){throw new D}let d=a.toString();if(d.length<8){throw new _}if(!_e.checkChecksum(d)){throw new c}let f=(n[1]+n[0])/2;let g=(l[1]+l[0])/2;let w=this.getBarcodeFormat();let A=[new ee(f,e),new ee(g,e)];let C=new v(d,null,0,A,w,(new Date).getTime());let E=0;try{let r=me.decodeRow(e,t,l[1]);C.putMetadata(H.UPC_EAN_EXTENSION,r.getText());C.putAllMetadata(r.getResultMetadata());C.addResultPoints(r.getResultPoints());E=r.getText().length}catch(e){}let I=r==null?null:r.get(m.ALLOWED_EAN_EXTENSIONS);if(I!=null){let e=false;for(let t in I){if(E.toString()===t){e=true;break}}if(!e){throw new D}}if(w===V.EAN_13||w===V.UPC_A);return C}static checkChecksum(e){return _e.checkStandardUPCEANChecksum(e)}static checkStandardUPCEANChecksum(e){let t=e.length;if(t===0)return false;let r=parseInt(e.charAt(t-1),10);return _e.getStandardUPCEANChecksum(e.substring(0,t-1))===r}static getStandardUPCEANChecksum(e){let t=e.length;let r=0;for(let n=t-1;n>=0;n-=2){let t=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0);if(t<0||t>9){throw new _}r+=t}r*=3;for(let n=t-2;n>=0;n-=2){let t=e.charAt(n).charCodeAt(0)-"0".charCodeAt(0);if(t<0||t>9){throw new _}r+=t}return(1e3-r)%10}static decodeEnd(e,t){return _e.findGuardPattern(e,t,false,_e.START_END_PATTERN,new Int32Array(_e.START_END_PATTERN.length).fill(0))}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ie extends _e{constructor(){super();this.decodeMiddleCounters=Int32Array.from([0,0,0,0])}decodeMiddle(e,t,r){let n=this.decodeMiddleCounters;n[0]=0;n[1]=0;n[2]=0;n[3]=0;let i=e.getSize();let s=t[1];let o=0;for(let t=0;t<6&&s<i;t++){let i=_e.decodeDigit(e,n,s,_e.L_AND_G_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+i%10);for(let e of n){s+=e}if(i>=10){o|=1<<5-t}}r=Ie.determineFirstDigit(r,o);let a=_e.findGuardPattern(e,s,true,_e.MIDDLE_PATTERN,new Int32Array(_e.MIDDLE_PATTERN.length).fill(0));s=a[1];for(let t=0;t<6&&s<i;t++){let t=_e.decodeDigit(e,n,s,_e.L_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+t);for(let e of n){s+=e}}return{rowOffset:s,resultString:r}}getBarcodeFormat(){return V.EAN_13}static determineFirstDigit(e,t){for(let r=0;r<10;r++){if(t===this.FIRST_DIGIT_ENCODINGS[r]){e=String.fromCharCode("0".charCodeAt(0)+r)+e;return e}}throw new D}}Ie.FIRST_DIGIT_ENCODINGS=[0,11,13,14,19,25,28,21,22,26];
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Se extends _e{constructor(){super();this.decodeMiddleCounters=Int32Array.from([0,0,0,0])}decodeMiddle(e,t,r){const n=this.decodeMiddleCounters;n[0]=0;n[1]=0;n[2]=0;n[3]=0;let i=e.getSize();let s=t[1];for(let t=0;t<4&&s<i;t++){let t=_e.decodeDigit(e,n,s,_e.L_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+t);for(let e of n){s+=e}}let o=_e.findGuardPattern(e,s,true,_e.MIDDLE_PATTERN,new Int32Array(_e.MIDDLE_PATTERN.length).fill(0));s=o[1];for(let t=0;t<4&&s<i;t++){let t=_e.decodeDigit(e,n,s,_e.L_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+t);for(let e of n){s+=e}}return{rowOffset:s,resultString:r}}getBarcodeFormat(){return V.EAN_8}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class pe extends _e{constructor(){super(...arguments);this.ean13Reader=new Ie}getBarcodeFormat(){return V.UPC_A}decode(e,t){return this.maybeReturnResult(this.ean13Reader.decode(e))}decodeRow(e,t,r){return this.maybeReturnResult(this.ean13Reader.decodeRow(e,t,r))}decodeMiddle(e,t,r){return this.ean13Reader.decodeMiddle(e,t,r)}maybeReturnResult(e){let t=e.getText();if(t.charAt(0)==="0"){let r=new v(t.substring(1),null,null,e.getResultPoints(),V.UPC_A);if(e.getResultMetadata()!=null){r.putAllMetadata(e.getResultMetadata())}return r}else{throw new D}}reset(){this.ean13Reader.reset()}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Te extends _e{constructor(){super();this.decodeMiddleCounters=new Int32Array(4)}decodeMiddle(e,t,r){const n=this.decodeMiddleCounters.map(e=>e);n[0]=0;n[1]=0;n[2]=0;n[3]=0;const i=e.getSize();let s=t[1];let o=0;for(let t=0;t<6&&s<i;t++){const i=Te.decodeDigit(e,n,s,Te.L_AND_G_PATTERNS);r+=String.fromCharCode("0".charCodeAt(0)+i%10);for(let e of n){s+=e}if(i>=10){o|=1<<5-t}}Te.determineNumSysAndCheckDigit(new N(r),o);return s}decodeEnd(e,t){return Te.findGuardPatternWithoutCounters(e,t,true,Te.MIDDLE_END_PATTERN)}checkChecksum(e){return _e.checkChecksum(Te.convertUPCEtoUPCA(e))}static determineNumSysAndCheckDigit(e,t){for(let r=0;r<=1;r++){for(let n=0;n<10;n++){if(t===this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[r][n]){e.insert(0,"0"+r);e.append("0"+n);return}}}throw D.getNotFoundInstance()}getBarcodeFormat(){return V.UPC_E}static convertUPCEtoUPCA(e){const t=e.slice(1,7).split("").map(e=>e.charCodeAt(0));const r=new N;r.append(e.charAt(0));let n=t[5];switch(n){case 0:case 1:case 2:r.appendChars(t,0,2);r.append(n);r.append("0000");r.appendChars(t,2,3);break;case 3:r.appendChars(t,0,3);r.append("00000");r.appendChars(t,3,2);break;case 4:r.appendChars(t,0,4);r.append("00000");r.append(t[4]);break;default:r.appendChars(t,0,5);r.append("0000");r.append(n);break}if(e.length>=8){r.append(e.charAt(7))}return r.toString()}}Te.MIDDLE_END_PATTERN=Int32Array.from([1,1,1,1,1,1]);Te.NUMSYS_AND_CHECK_DIGIT_PATTERNS=[Int32Array.from([56,52,50,49,44,38,35,42,41,37]),Int32Array.from([7,11,13,14,19,25,28,21,22,1])];
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Re extends de{constructor(e){super();let t=e==null?null:e.get(m.POSSIBLE_FORMATS);let r=[];if(t!=null){if(t.indexOf(V.EAN_13)>-1){r.push(new Ie)}if(t.indexOf(V.UPC_A)>-1){r.push(new pe)}if(t.indexOf(V.EAN_8)>-1){r.push(new Se)}if(t.indexOf(V.UPC_E)>-1){r.push(new Te)}}if(r.length===0){r.push(new Ie);r.push(new pe);r.push(new Se);r.push(new Te)}this.readers=r}decodeRow(e,t,r){for(let n of this.readers){try{const i=n.decodeRow(e,t,r);const s=i.getBarcodeFormat()===V.EAN_13&&i.getText().charAt(0)==="0";const o=r==null?null:r.get(m.POSSIBLE_FORMATS);const a=o==null||o.includes(V.UPC_A);if(s&&a){const e=i.getRawBytes();const t=new v(i.getText().substring(1),e,e?e.length:null,i.getResultPoints(),V.UPC_A);t.putAllMetadata(i.getResultMetadata());return t}return i}catch(e){}}throw new D}reset(){for(let e of this.readers){e.reset()}}}class Ne extends de{constructor(){super();this.decodeFinderCounters=new Int32Array(4);this.dataCharacterCounters=new Int32Array(8);this.oddRoundingErrors=new Array(4);this.evenRoundingErrors=new Array(4);this.oddCounts=new Array(this.dataCharacterCounters.length/2);this.evenCounts=new Array(this.dataCharacterCounters.length/2)}getDecodeFinderCounters(){return this.decodeFinderCounters}getDataCharacterCounters(){return this.dataCharacterCounters}getOddRoundingErrors(){return this.oddRoundingErrors}getEvenRoundingErrors(){return this.evenRoundingErrors}getOddCounts(){return this.oddCounts}getEvenCounts(){return this.evenCounts}parseFinderValue(e,t){for(let r=0;r<t.length;r++){if(de.patternMatchVariance(e,t[r],Ne.MAX_INDIVIDUAL_VARIANCE)<Ne.MAX_AVG_VARIANCE){return r}}throw new D}static count(e){return J.sum(new Int32Array(e))}static increment(e,t){let r=0;let n=t[0];for(let i=1;i<e.length;i++){if(t[i]>n){n=t[i];r=i}}e[r]++}static decrement(e,t){let r=0;let n=t[0];for(let i=1;i<e.length;i++){if(t[i]<n){n=t[i];r=i}}e[r]--}static isFinderPattern(e){let t=e[0]+e[1];let r=t+e[2]+e[3];let n=t/r;if(n>=Ne.MIN_FINDER_PATTERN_RATIO&&n<=Ne.MAX_FINDER_PATTERN_RATIO){let t=Number.MAX_SAFE_INTEGER;let r=Number.MIN_SAFE_INTEGER;for(let n of e){if(n>r){r=n}if(n<t){t=n}}return r<10*t}return false}}Ne.MAX_AVG_VARIANCE=.2;Ne.MAX_INDIVIDUAL_VARIANCE=.45;Ne.MIN_FINDER_PATTERN_RATIO=9.5/12;Ne.MAX_FINDER_PATTERN_RATIO=12.5/14;class ye{constructor(e,t){this.value=e;this.checksumPortion=t}getValue(){return this.value}getChecksumPortion(){return this.checksumPortion}toString(){return this.value+"("+this.checksumPortion+")"}equals(e){if(!(e instanceof ye)){return false}const t=e;return this.value===t.value&&this.checksumPortion===t.checksumPortion}hashCode(){return this.value^this.checksumPortion}}class De{constructor(e,t,r,n,i){this.value=e;this.startEnd=t;this.value=e;this.startEnd=t;this.resultPoints=new Array;this.resultPoints.push(new ee(r,i));this.resultPoints.push(new ee(n,i))}getValue(){return this.value}getStartEnd(){return this.startEnd}getResultPoints(){return this.resultPoints}equals(e){if(!(e instanceof De)){return false}const t=e;return this.value===t.value}hashCode(){return this.value}}class Oe{constructor(){}static getRSSvalue(e,t,r){let n=0;for(let t of e){n+=t}let i=0;let s=0;let o=e.length;for(let a=0;a<o-1;a++){let l;for(l=1,s|=1<<a;l<e[a];l++,s&=~(1<<a)){let e=Oe.combins(n-l-1,o-a-2);if(r&&s===0&&n-l-(o-a-1)>=o-a-1){e-=Oe.combins(n-l-(o-a),o-a-2)}if(o-a-1>1){let r=0;for(let e=n-l-(o-a-2);e>t;e--){r+=Oe.combins(n-l-e-1,o-a-3)}e-=r*(o-1-a)}else if(n-l>t){e--}i+=e}n-=l}return i}static combins(e,t){let r;let n;if(e-t>t){n=t;r=e-t}else{n=e-t;r=t}let i=1;let s=1;for(let t=e;t>r;t--){i*=t;if(s<=n){i/=s;s++}}while(s<=n){i/=s;s++}return i}}class Me{static buildBitArray(e){let t=e.length*2-1;if(e[e.length-1].getRightChar()==null){t-=1}let r=12*t;let n=new C(r);let i=0;let s=e[0];let o=s.getRightChar().getValue();for(let e=11;e>=0;--e){if((o&1<<e)!=0){n.set(i)}i++}for(let t=1;t<e.length;++t){let r=e[t];let s=r.getLeftChar().getValue();for(let e=11;e>=0;--e){if((s&1<<e)!=0){n.set(i)}i++}if(r.getRightChar()!=null){let e=r.getRightChar().getValue();for(let t=11;t>=0;--t){if((e&1<<t)!=0){n.set(i)}i++}}}return n}}class be{constructor(e,t){if(t){this.decodedInformation=null}else{this.finished=e;this.decodedInformation=t}}getDecodedInformation(){return this.decodedInformation}isFinished(){return this.finished}}class Be{constructor(e){this.newPosition=e}getNewPosition(){return this.newPosition}}class Pe extends Be{constructor(e,t){super(e);this.value=t}getValue(){return this.value}isFNC1(){return this.value===Pe.FNC1}}Pe.FNC1="$";class Le extends Be{constructor(e,t,r){super(e);if(r){this.remaining=true;this.remainingValue=this.remainingValue}else{this.remaining=false;this.remainingValue=0}this.newString=t}getNewString(){return this.newString}isRemaining(){return this.remaining}getRemainingValue(){return this.remainingValue}}class Fe extends Be{constructor(e,t,r){super(e);if(t<0||t>10||r<0||r>10){throw new _}this.firstDigit=t;this.secondDigit=r}getFirstDigit(){return this.firstDigit}getSecondDigit(){return this.secondDigit}getValue(){return this.firstDigit*10+this.secondDigit}isFirstDigitFNC1(){return this.firstDigit===Fe.FNC1}isSecondDigitFNC1(){return this.secondDigit===Fe.FNC1}isAnyFNC1(){return this.firstDigit===Fe.FNC1||this.secondDigit===Fe.FNC1}}Fe.FNC1=10;class ke{constructor(){}static parseFieldsInGeneralPurpose(e){if(!e){return null}if(e.length<2){throw new D}let t=e.substring(0,2);for(let r of ke.TWO_DIGIT_DATA_LENGTH){if(r[0]===t){if(r[1]===ke.VARIABLE_LENGTH){return ke.processVariableAI(2,r[2],e)}return ke.processFixedAI(2,r[1],e)}}if(e.length<3){throw new D}let r=e.substring(0,3);for(let t of ke.THREE_DIGIT_DATA_LENGTH){if(t[0]===r){if(t[1]===ke.VARIABLE_LENGTH){return ke.processVariableAI(3,t[2],e)}return ke.processFixedAI(3,t[1],e)}}for(let t of ke.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH){if(t[0]===r){if(t[1]===ke.VARIABLE_LENGTH){return ke.processVariableAI(4,t[2],e)}return ke.processFixedAI(4,t[1],e)}}if(e.length<4){throw new D}let n=e.substring(0,4);for(let t of ke.FOUR_DIGIT_DATA_LENGTH){if(t[0]===n){if(t[1]===ke.VARIABLE_LENGTH){return ke.processVariableAI(4,t[2],e)}return ke.processFixedAI(4,t[1],e)}}throw new D}static processFixedAI(e,t,r){if(r.length<e){throw new D}let n=r.substring(0,e);if(r.length<e+t){throw new D}let i=r.substring(e,e+t);let s=r.substring(e+t);let o="("+n+")"+i;let a=ke.parseFieldsInGeneralPurpose(s);return a==null?o:o+a}static processVariableAI(e,t,r){let n=r.substring(0,e);let i;if(r.length<e+t){i=r.length}else{i=e+t}let s=r.substring(e,i);let o=r.substring(i);let a="("+n+")"+s;let l=ke.parseFieldsInGeneralPurpose(o);return l==null?a:a+l}}ke.VARIABLE_LENGTH=[];ke.TWO_DIGIT_DATA_LENGTH=[["00",18],["01",14],["02",14],["10",ke.VARIABLE_LENGTH,20],["11",6],["12",6],["13",6],["15",6],["17",6],["20",2],["21",ke.VARIABLE_LENGTH,20],["22",ke.VARIABLE_LENGTH,29],["30",ke.VARIABLE_LENGTH,8],["37",ke.VARIABLE_LENGTH,8],["90",ke.VARIABLE_LENGTH,30],["91",ke.VARIABLE_LENGTH,30],["92",ke.VARIABLE_LENGTH,30],["93",ke.VARIABLE_LENGTH,30],["94",ke.VARIABLE_LENGTH,30],["95",ke.VARIABLE_LENGTH,30],["96",ke.VARIABLE_LENGTH,30],["97",ke.VARIABLE_LENGTH,3],["98",ke.VARIABLE_LENGTH,30],["99",ke.VARIABLE_LENGTH,30]];ke.THREE_DIGIT_DATA_LENGTH=[["240",ke.VARIABLE_LENGTH,30],["241",ke.VARIABLE_LENGTH,30],["242",ke.VARIABLE_LENGTH,6],["250",ke.VARIABLE_LENGTH,30],["251",ke.VARIABLE_LENGTH,30],["253",ke.VARIABLE_LENGTH,17],["254",ke.VARIABLE_LENGTH,20],["400",ke.VARIABLE_LENGTH,30],["401",ke.VARIABLE_LENGTH,30],["402",17],["403",ke.VARIABLE_LENGTH,30],["410",13],["411",13],["412",13],["413",13],["414",13],["420",ke.VARIABLE_LENGTH,20],["421",ke.VARIABLE_LENGTH,15],["422",3],["423",ke.VARIABLE_LENGTH,15],["424",3],["425",3],["426",3]];ke.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH=[["310",6],["311",6],["312",6],["313",6],["314",6],["315",6],["316",6],["320",6],["321",6],["322",6],["323",6],["324",6],["325",6],["326",6],["327",6],["328",6],["329",6],["330",6],["331",6],["332",6],["333",6],["334",6],["335",6],["336",6],["340",6],["341",6],["342",6],["343",6],["344",6],["345",6],["346",6],["347",6],["348",6],["349",6],["350",6],["351",6],["352",6],["353",6],["354",6],["355",6],["356",6],["357",6],["360",6],["361",6],["362",6],["363",6],["364",6],["365",6],["366",6],["367",6],["368",6],["369",6],["390",ke.VARIABLE_LENGTH,15],["391",ke.VARIABLE_LENGTH,18],["392",ke.VARIABLE_LENGTH,15],["393",ke.VARIABLE_LENGTH,18],["703",ke.VARIABLE_LENGTH,30]];ke.FOUR_DIGIT_DATA_LENGTH=[["7001",13],["7002",ke.VARIABLE_LENGTH,30],["7003",10],["8001",14],["8002",ke.VARIABLE_LENGTH,20],["8003",ke.VARIABLE_LENGTH,30],["8004",ke.VARIABLE_LENGTH,30],["8005",6],["8006",18],["8007",ke.VARIABLE_LENGTH,30],["8008",ke.VARIABLE_LENGTH,12],["8018",18],["8020",ke.VARIABLE_LENGTH,25],["8100",6],["8101",10],["8102",2],["8110",ke.VARIABLE_LENGTH,70],["8200",ke.VARIABLE_LENGTH,70]];class ve{constructor(e){this.buffer=new N;this.information=e}decodeAllCodes(e,t){let r=t;let n=null;do{let t=this.decodeGeneralPurposeField(r,n);let i=ke.parseFieldsInGeneralPurpose(t.getNewString());if(i!=null){e.append(i)}if(t.isRemaining()){n=""+t.getRemainingValue()}else{n=null}if(r===t.getNewPosition()){break}r=t.getNewPosition()}while(true);return e.toString()}isStillNumeric(e){if(e+7>this.information.getSize()){return e+4<=this.information.getSize()}for(let t=e;t<e+3;++t){if(this.information.get(t)){return true}}return this.information.get(e+3)}decodeNumeric(e){if(e+7>this.information.getSize()){let t=this.extractNumericValueFromBitArray(e,4);if(t===0){return new Fe(this.information.getSize(),Fe.FNC1,Fe.FNC1)}return new Fe(this.information.getSize(),t-1,Fe.FNC1)}let t=this.extractNumericValueFromBitArray(e,7);let r=(t-8)/11;let n=(t-8)%11;return new Fe(e+7,r,n)}extractNumericValueFromBitArray(e,t){return ve.extractNumericValueFromBitArray(this.information,e,t)}static extractNumericValueFromBitArray(e,t,r){let n=0;for(let i=0;i<r;++i){if(e.get(t+i)){n|=1<<r-i-1}}return n}decodeGeneralPurposeField(e,t){this.buffer.setLengthToZero();if(t!=null){this.buffer.append(t)}this.current.setPosition(e);let r=this.parseBlocks();if(r!=null&&r.isRemaining()){return new Le(this.current.getPosition(),this.buffer.toString(),r.getRemainingValue())}return new Le(this.current.getPosition(),this.buffer.toString())}parseBlocks(){let e;let t;do{let r=this.current.getPosition();if(this.current.isAlpha()){t=this.parseAlphaBlock();e=t.isFinished()}else if(this.current.isIsoIec646()){t=this.parseIsoIec646Block();e=t.isFinished()}else{t=this.parseNumericBlock();e=t.isFinished()}let n=r!==this.current.getPosition();if(!n&&!e){break}}while(!e);return t.getDecodedInformation()}parseNumericBlock(){while(this.isStillNumeric(this.current.getPosition())){let e=this.decodeNumeric(this.current.getPosition());this.current.setPosition(e.getNewPosition());if(e.isFirstDigitFNC1()){let t;if(e.isSecondDigitFNC1()){t=new Le(this.current.getPosition(),this.buffer.toString())}else{t=new Le(this.current.getPosition(),this.buffer.toString(),e.getSecondDigit())}return new be(true,t)}this.buffer.append(e.getFirstDigit());if(e.isSecondDigitFNC1()){let e=new Le(this.current.getPosition(),this.buffer.toString());return new be(true,e)}this.buffer.append(e.getSecondDigit())}if(this.isNumericToAlphaNumericLatch(this.current.getPosition())){this.current.setAlpha();this.current.incrementPosition(4)}return new be(false)}parseIsoIec646Block(){while(this.isStillIsoIec646(this.current.getPosition())){let e=this.decodeIsoIec646(this.current.getPosition());this.current.setPosition(e.getNewPosition());if(e.isFNC1()){let e=new Le(this.current.getPosition(),this.buffer.toString());return new be(true,e)}this.buffer.append(e.getValue())}if(this.isAlphaOr646ToNumericLatch(this.current.getPosition())){this.current.incrementPosition(3);this.current.setNumeric()}else if(this.isAlphaTo646ToAlphaLatch(this.current.getPosition())){if(this.current.getPosition()+5<this.information.getSize()){this.current.incrementPosition(5)}else{this.current.setPosition(this.information.getSize())}this.current.setAlpha()}return new be(false)}parseAlphaBlock(){while(this.isStillAlpha(this.current.getPosition())){let e=this.decodeAlphanumeric(this.current.getPosition());this.current.setPosition(e.getNewPosition());if(e.isFNC1()){let e=new Le(this.current.getPosition(),this.buffer.toString());return new be(true,e)}this.buffer.append(e.getValue())}if(this.isAlphaOr646ToNumericLatch(this.current.getPosition())){this.current.incrementPosition(3);this.current.setNumeric()}else if(this.isAlphaTo646ToAlphaLatch(this.current.getPosition())){if(this.current.getPosition()+5<this.information.getSize()){this.current.incrementPosition(5)}else{this.current.setPosition(this.information.getSize())}this.current.setIsoIec646()}return new be(false)}isStillIsoIec646(e){if(e+5>this.information.getSize()){return false}let t=this.extractNumericValueFromBitArray(e,5);if(t>=5&&t<16){return true}if(e+7>this.information.getSize()){return false}let r=this.extractNumericValueFromBitArray(e,7);if(r>=64&&r<116){return true}if(e+8>this.information.getSize()){return false}let n=this.extractNumericValueFromBitArray(e,8);return n>=232&&n<253}decodeIsoIec646(e){let t=this.extractNumericValueFromBitArray(e,5);if(t===15){return new Pe(e+5,Pe.FNC1)}if(t>=5&&t<15){return new Pe(e+5,"0"+(t-5))}let r=this.extractNumericValueFromBitArray(e,7);if(r>=64&&r<90){return new Pe(e+7,""+(r+1))}if(r>=90&&r<116){return new Pe(e+7,""+(r+7))}let n=this.extractNumericValueFromBitArray(e,8);let i;switch(n){case 232:i="!";break;case 233:i='"';break;case 234:i="%";break;case 235:i="&";break;case 236:i="'";break;case 237:i="(";break;case 238:i=")";break;case 239:i="*";break;case 240:i="+";break;case 241:i=",";break;case 242:i="-";break;case 243:i=".";break;case 244:i="/";break;case 245:i=":";break;case 246:i=";";break;case 247:i="<";break;case 248:i="=";break;case 249:i=">";break;case 250:i="?";break;case 251:i="_";break;case 252:i=" ";break;default:throw new _}return new Pe(e+8,i)}isStillAlpha(e){if(e+5>this.information.getSize()){return false}let t=this.extractNumericValueFromBitArray(e,5);if(t>=5&&t<16){return true}if(e+6>this.information.getSize()){return false}let r=this.extractNumericValueFromBitArray(e,6);return r>=16&&r<63}decodeAlphanumeric(e){let t=this.extractNumericValueFromBitArray(e,5);if(t===15){return new Pe(e+5,Pe.FNC1)}if(t>=5&&t<15){return new Pe(e+5,"0"+(t-5))}let r=this.extractNumericValueFromBitArray(e,6);if(r>=32&&r<58){return new Pe(e+6,""+(r+33))}let n;switch(r){case 58:n="*";break;case 59:n=",";break;case 60:n="-";break;case 61:n=".";break;case 62:n="/";break;default:throw new K("Decoding invalid alphanumeric value: "+r)}return new Pe(e+6,n)}isAlphaTo646ToAlphaLatch(e){if(e+1>this.information.getSize()){return false}for(let t=0;t<5&&t+e<this.information.getSize();++t){if(t===2){if(!this.information.get(e+2)){return false}}else if(this.information.get(e+t)){return false}}return true}isAlphaOr646ToNumericLatch(e){if(e+3>this.information.getSize()){return false}for(let t=e;t<e+3;++t){if(this.information.get(t)){return false}}return true}isNumericToAlphaNumericLatch(e){if(e+1>this.information.getSize()){return false}for(let t=0;t<4&&t+e<this.information.getSize();++t){if(this.information.get(e+t)){return false}}return true}}class xe{constructor(e){this.information=e;this.generalDecoder=new ve(e)}getInformation(){return this.information}getGeneralDecoder(){return this.generalDecoder}}class Ve extends xe{constructor(e){super(e)}encodeCompressedGtin(e,t){e.append("(01)");let r=e.length();e.append("9");this.encodeCompressedGtinWithoutAI(e,t,r)}encodeCompressedGtinWithoutAI(e,t,r){for(let r=0;r<4;++r){let n=this.getGeneralDecoder().extractNumericValueFromBitArray(t+10*r,10);if(n/100===0){e.append("0")}if(n/10===0){e.append("0")}e.append(n)}Ve.appendCheckDigit(e,r)}static appendCheckDigit(e,t){let r=0;for(let n=0;n<13;n++){let i=e.charAt(n+t).charCodeAt(0)-"0".charCodeAt(0);r+=(n&1)===0?3*i:i}r=10-r%10;if(r===10){r=0}e.append(r)}}Ve.GTIN_SIZE=40;class Ue extends Ve{constructor(e){super(e)}parseInformation(){let e=new N;e.append("(01)");let t=e.length();let r=this.getGeneralDecoder().extractNumericValueFromBitArray(Ue.HEADER_SIZE,4);e.append(r);this.encodeCompressedGtinWithoutAI(e,Ue.HEADER_SIZE+4,t);return this.getGeneralDecoder().decodeAllCodes(e,Ue.HEADER_SIZE+44)}}Ue.HEADER_SIZE=1+1+2;class He extends xe{constructor(e){super(e)}parseInformation(){let e=new N;return this.getGeneralDecoder().decodeAllCodes(e,He.HEADER_SIZE)}}He.HEADER_SIZE=2+1+2;class Ge extends Ve{constructor(e){super(e)}encodeCompressedWeight(e,t,r){let n=this.getGeneralDecoder().extractNumericValueFromBitArray(t,r);this.addWeightCode(e,n);let i=this.checkWeight(n);let s=1e5;for(let t=0;t<5;++t){if(i/s===0){e.append("0")}s/=10}e.append(i)}}class Xe extends Ge{constructor(e){super(e)}parseInformation(){if(this.getInformation().getSize()!=Xe.HEADER_SIZE+Ge.GTIN_SIZE+Xe.WEIGHT_SIZE){throw new D}let e=new N;this.encodeCompressedGtin(e,Xe.HEADER_SIZE);this.encodeCompressedWeight(e,Xe.HEADER_SIZE+Ge.GTIN_SIZE,Xe.WEIGHT_SIZE);return e.toString()}}Xe.HEADER_SIZE=4+1;Xe.WEIGHT_SIZE=15;class We extends Xe{constructor(e){super(e)}addWeightCode(e,t){e.append("(3103)")}checkWeight(e){return e}}class ze extends Xe{constructor(e){super(e)}addWeightCode(e,t){if(t<1e4){e.append("(3202)")}else{e.append("(3203)")}}checkWeight(e){if(e<1e4){return e}return e-1e4}}class Ye extends Ve{constructor(e){super(e)}parseInformation(){if(this.getInformation().getSize()<Ye.HEADER_SIZE+Ve.GTIN_SIZE){throw new D}let e=new N;this.encodeCompressedGtin(e,Ye.HEADER_SIZE);let t=this.getGeneralDecoder().extractNumericValueFromBitArray(Ye.HEADER_SIZE+Ve.GTIN_SIZE,Ye.LAST_DIGIT_SIZE);e.append("(392");e.append(t);e.append(")");let r=this.getGeneralDecoder().decodeGeneralPurposeField(Ye.HEADER_SIZE+Ve.GTIN_SIZE+Ye.LAST_DIGIT_SIZE,null);e.append(r.getNewString());return e.toString()}}Ye.HEADER_SIZE=5+1+2;Ye.LAST_DIGIT_SIZE=2;class Ze extends Ve{constructor(e){super(e)}parseInformation(){if(this.getInformation().getSize()<Ze.HEADER_SIZE+Ve.GTIN_SIZE){throw new D}let e=new N;this.encodeCompressedGtin(e,Ze.HEADER_SIZE);let t=this.getGeneralDecoder().extractNumericValueFromBitArray(Ze.HEADER_SIZE+Ve.GTIN_SIZE,Ze.LAST_DIGIT_SIZE);e.append("(393");e.append(t);e.append(")");let r=this.getGeneralDecoder().extractNumericValueFromBitArray(Ze.HEADER_SIZE+Ve.GTIN_SIZE+Ze.LAST_DIGIT_SIZE,Ze.FIRST_THREE_DIGITS_SIZE);if(r/100==0){e.append("0")}if(r/10==0){e.append("0")}e.append(r);let n=this.getGeneralDecoder().decodeGeneralPurposeField(Ze.HEADER_SIZE+Ve.GTIN_SIZE+Ze.LAST_DIGIT_SIZE+Ze.FIRST_THREE_DIGITS_SIZE,null);e.append(n.getNewString());return e.toString()}}Ze.HEADER_SIZE=5+1+2;Ze.LAST_DIGIT_SIZE=2;Ze.FIRST_THREE_DIGITS_SIZE=10;class Ke extends Ge{constructor(e,t,r){super(e);this.dateCode=r;this.firstAIdigits=t}parseInformation(){if(this.getInformation().getSize()!=Ke.HEADER_SIZE+Ke.GTIN_SIZE+Ke.WEIGHT_SIZE+Ke.DATE_SIZE){throw new D}let e=new N;this.encodeCompressedGtin(e,Ke.HEADER_SIZE);this.encodeCompressedWeight(e,Ke.HEADER_SIZE+Ke.GTIN_SIZE,Ke.WEIGHT_SIZE);this.encodeCompressedDate(e,Ke.HEADER_SIZE+Ke.GTIN_SIZE+Ke.WEIGHT_SIZE);return e.toString()}encodeCompressedDate(e,t){let r=this.getGeneralDecoder().extractNumericValueFromBitArray(t,Ke.DATE_SIZE);if(r==38400){return}e.append("(");e.append(this.dateCode);e.append(")");let n=r%32;r/=32;let i=r%12+1;r/=12;let s=r;if(s/10==0){e.append("0")}e.append(s);if(i/10==0){e.append("0")}e.append(i);if(n/10==0){e.append("0")}e.append(n)}addWeightCode(e,t){e.append("(");e.append(this.firstAIdigits);e.append(t/1e5);e.append(")")}checkWeight(e){return e%1e5}}Ke.HEADER_SIZE=7+1;Ke.WEIGHT_SIZE=20;Ke.DATE_SIZE=16;function qe(e){try{if(e.get(1)){return new Ue(e)}if(!e.get(2)){return new He(e)}let t=ve.extractNumericValueFromBitArray(e,1,4);switch(t){case 4:return new We(e);case 5:return new ze(e)}let r=ve.extractNumericValueFromBitArray(e,1,5);switch(r){case 12:return new Ye(e);case 13:return new Ze(e)}let n=ve.extractNumericValueFromBitArray(e,1,7);switch(n){case 56:return new Ke(e,"310","11");case 57:return new Ke(e,"320","11");case 58:return new Ke(e,"310","13");case 59:return new Ke(e,"320","13");case 60:return new Ke(e,"310","15");case 61:return new Ke(e,"320","15");case 62:return new Ke(e,"310","17");case 63:return new Ke(e,"320","17")}}catch(t){console.log(t);throw new K("unknown decoder: "+e)}}class Qe{constructor(e,t,r,n){this.leftchar=e;this.rightchar=t;this.finderpattern=r;this.maybeLast=n}mayBeLast(){return this.maybeLast}getLeftChar(){return this.leftchar}getRightChar(){return this.rightchar}getFinderPattern(){return this.finderpattern}mustBeLast(){return this.rightchar==null}toString(){return"[ "+this.leftchar+", "+this.rightchar+" : "+(this.finderpattern==null?"null":this.finderpattern.getValue())+" ]"}static equals(e,t){if(!(e instanceof Qe)){return false}return Qe.equalsOrNull(e.leftchar,t.leftchar)&&Qe.equalsOrNull(e.rightchar,t.rightchar)&&Qe.equalsOrNull(e.finderpattern,t.finderpattern)}static equalsOrNull(e,t){return e===null?t===null:Qe.equals(e,t)}hashCode(){let e=this.leftchar.getValue()^this.rightchar.getValue()^this.finderpattern.getValue();return e}}class je{constructor(e,t,r){this.pairs=e;this.rowNumber=t;this.wasReversed=r}getPairs(){return this.pairs}getRowNumber(){return this.rowNumber}isReversed(){return this.wasReversed}isEquivalent(e){return this.checkEqualitity(this,e)}toString(){return"{ "+this.pairs+" }"}equals(e,t){if(!(e instanceof je)){return false}return this.checkEqualitity(e,t)&&e.wasReversed===t.wasReversed}checkEqualitity(e,t){if(!e||!t)return;let r;e.forEach((e,n)=>{t.forEach(t=>{if(e.getLeftChar().getValue()===t.getLeftChar().getValue()&&e.getRightChar().getValue()===t.getRightChar().getValue()&&e.getFinderPatter().getValue()===t.getFinderPatter().getValue()){r=true}})});return r}}class Je extends Ne{constructor(){super(...arguments);this.pairs=new Array(Je.MAX_PAIRS);this.rows=new Array;this.startEnd=[2]}decodeRow(e,t,r){this.pairs.length=0;this.startFromEven=false;try{return Je.constructResult(this.decodeRow2pairs(e,t))}catch(e){}this.pairs.length=0;this.startFromEven=true;return Je.constructResult(this.decodeRow2pairs(e,t))}reset(){this.pairs.length=0;this.rows.length=0}decodeRow2pairs(e,t){let r=false;while(!r){try{this.pairs.push(this.retrieveNextPair(t,this.pairs,e))}catch(e){if(e instanceof D){if(!this.pairs.length){throw new D}r=true}}}if(this.checkChecksum()){return this.pairs}let n;if(this.rows.length){n=true}else{n=false}this.storeRow(e,false);if(n){let e=this.checkRowsBoolean(false);if(e!=null){return e}e=this.checkRowsBoolean(true);if(e!=null){return e}}throw new D}checkRowsBoolean(e){if(this.rows.length>25){this.rows.length=0;return null}this.pairs.length=0;if(e){this.rows=this.rows.reverse()}let t=null;try{t=this.checkRows(new Array,0)}catch(e){console.log(e)}if(e){this.rows=this.rows.reverse()}return t}checkRows(e,t){for(let r=t;r<this.rows.length;r++){let t=this.rows[r];this.pairs.length=0;for(let t of e){this.pairs.push(t.getPairs())}this.pairs.push(t.getPairs());if(!Je.isValidSequence(this.pairs)){continue}if(this.checkChecksum()){return this.pairs}let n=new Array(e);n.push(t);try{return this.checkRows(n,r+1)}catch(e){console.log(e)}}throw new D}static isValidSequence(e){for(let t of Je.FINDER_PATTERN_SEQUENCES){if(e.length>t.length){continue}let r=true;for(let n=0;n<e.length;n++){if(e[n].getFinderPattern().getValue()!=t[n]){r=false;break}}if(r){return true}}return false}storeRow(e,t){let r=0;let n=false;let i=false;while(r<this.rows.length){let t=this.rows[r];if(t.getRowNumber()>e){i=t.isEquivalent(this.pairs);break}n=t.isEquivalent(this.pairs);r++}if(i||n){return}if(Je.isPartialRow(this.pairs,this.rows)){return}this.rows.push(r,new je(this.pairs,e,t));this.removePartialRows(this.pairs,this.rows)}removePartialRows(e,t){for(let r of t){if(r.getPairs().length===e.length){continue}for(let t of r.getPairs()){for(let r of e){if(Qe.equals(t,r)){break}}}}}static isPartialRow(e,t){for(let r of t){let t=true;for(let n of e){let e=false;for(let t of r.getPairs()){if(n.equals(t)){e=true;break}}if(!e){t=false;break}}if(t){return true}}return false}getRows(){return this.rows}static constructResult(e){let t=Me.buildBitArray(e);let r=qe(t);let n=r.parseInformation();let i=e[0].getFinderPattern().getResultPoints();let s=e[e.length-1].getFinderPattern().getResultPoints();let o=[i[0],i[1],s[0],s[1]];return new v(n,null,null,o,V.RSS_EXPANDED,null)}checkChecksum(){let e=this.pairs.get(0);let t=e.getLeftChar();let r=e.getRightChar();if(r==null){return false}let n=r.getChecksumPortion();let i=2;for(let e=1;e<this.pairs.size();++e){let t=this.pairs.get(e);n+=t.getLeftChar().getChecksumPortion();i++;let r=t.getRightChar();if(r!=null){n+=r.getChecksumPortion();i++}}n%=211;let s=211*(i-4)+n;return s==t.getValue()}static getNextSecondBar(e,t){let r;if(e.get(t)){r=e.getNextUnset(t);r=e.getNextSet(r)}else{r=e.getNextSet(t);r=e.getNextUnset(r)}return r}retrieveNextPair(e,t,r){let n=t.length%2==0;if(this.startFromEven){n=!n}let i;let s=true;let o=-1;do{this.findNextPair(e,t,o);i=this.parseFoundFinderPattern(e,r,n);if(i==null){o=Je.getNextSecondBar(e,this.startEnd[0])}else{s=false}}while(s);let a=this.decodeDataCharacter(e,i,n,true);if(!this.isEmptyPair(t)&&t[t.length-1].mustBeLast()){throw new D}let l;try{l=this.decodeDataCharacter(e,i,n,false)}catch(e){l=null;console.log(e)}return new Qe(a,l,i,true)}isEmptyPair(e){if(e.length===0){return true}return false}findNextPair(e,t,r){let n=this.getDecodeFinderCounters();n[0]=0;n[1]=0;n[2]=0;n[3]=0;let i=e.getSize();let s;if(r>=0){s=r}else if(this.isEmptyPair(t)){s=0}else{let e=t[t.length-1];s=e.getFinderPattern().getStartEnd()[1]}let o=t.length%2!=0;if(this.startFromEven){o=!o}let a=false;while(s<i){a=!e.get(s);if(!a){break}s++}let l=0;let h=s;for(let t=s;t<i;t++){if(e.get(t)!=a){n[l]++}else{if(l==3){if(o){Je.reverseCounters(n)}if(Je.isFinderPattern(n)){this.startEnd[0]=h;this.startEnd[1]=t;return}if(o){Je.reverseCounters(n)}h+=n[0]+n[1];n[0]=n[2];n[1]=n[3];n[2]=0;n[3]=0;l--}else{l++}n[l]=1;a=!a}}throw new D}static reverseCounters(e){let t=e.length;for(let r=0;r<t/2;++r){let n=e[r];e[r]=e[t-r-1];e[t-r-1]=n}}parseFoundFinderPattern(e,t,r){let n;let i;let s;if(r){let t=this.startEnd[0]-1;while(t>=0&&!e.get(t)){t--}t++;n=this.startEnd[0]-t;i=t;s=this.startEnd[1]}else{i=this.startEnd[0];s=e.getNextUnset(this.startEnd[1]+1);n=s-this.startEnd[1]}let o=this.getDecodeFinderCounters();d.arraycopy(o,0,o,1,o.length-1);o[0]=n;let a;try{a=this.parseFinderValue(o,Je.FINDER_PATTERNS)}catch(e){return null}return new De(a,[i,s],i,s,t)}decodeDataCharacter(e,t,r,n){let i=this.getDataCharacterCounters();for(let e=0;e<i.length;e++){i[e]=0}if(n){Je.recordPatternInReverse(e,t.getStartEnd()[0],i)}else{Je.recordPattern(e,t.getStartEnd()[1],i);for(let e=0,t=i.length-1;e<t;e++,t--){let r=i[e];i[e]=i[t];i[t]=r}}let s=17;let o=J.sum(new Int32Array(i))/s;let a=(t.getStartEnd()[1]-t.getStartEnd()[0])/15;if(Math.abs(o-a)/a>.3){throw new D}let l=this.getOddCounts();let h=this.getEvenCounts();let c=this.getOddRoundingErrors();let u=this.getEvenRoundingErrors();for(let e=0;e<i.length;e++){let t=1*i[e]/o;let r=t+.5;if(r<1){if(t<.3){throw new D}r=1}else if(r>8){if(t>8.7){throw new D}r=8}let n=e/2;if((e&1)==0){l[n]=r;c[n]=t-r}else{h[n]=r;u[n]=t-r}}this.adjustOddEvenCounts(s);let d=4*t.getValue()+(r?0:2)+(n?0:1)-1;let f=0;let g=0;for(let e=l.length-1;e>=0;e--){if(Je.isNotA1left(t,r,n)){let t=Je.WEIGHTS[d][2*e];g+=l[e]*t}f+=l[e]}let w=0;for(let e=h.length-1;e>=0;e--){if(Je.isNotA1left(t,r,n)){let t=Je.WEIGHTS[d][2*e+1];w+=h[e]*t}}let A=g+w;if((f&1)!=0||f>13||f<4){throw new D}let C=(13-f)/2;let E=Je.SYMBOL_WIDEST[C];let m=9-E;let _=Oe.getRSSvalue(l,E,true);let I=Oe.getRSSvalue(h,m,false);let S=Je.EVEN_TOTAL_SUBSET[C];let p=Je.GSUM[C];let T=_*S+I+p;return new ye(T,A)}static isNotA1left(e,t,r){return!(e.getValue()==0&&t&&r)}adjustOddEvenCounts(e){let t=J.sum(new Int32Array(this.getOddCounts()));let r=J.sum(new Int32Array(this.getEvenCounts()));let n=false;let i=false;if(t>13){i=true}else if(t<4){n=true}let s=false;let o=false;if(r>13){o=true}else if(r<4){s=true}let a=t+r-e;let l=(t&1)==1;let h=(r&1)==0;if(a==1){if(l){if(h){throw new D}i=true}else{if(!h){throw new D}o=true}}else if(a==-1){if(l){if(h){throw new D}n=true}else{if(!h){throw new D}s=true}}else if(a==0){if(l){if(!h){throw new D}if(t<r){n=true;o=true}else{i=true;s=true}}else{if(h){throw new D}}}else{throw new D}if(n){if(i){throw new D}Je.increment(this.getOddCounts(),this.getOddRoundingErrors())}if(i){Je.decrement(this.getOddCounts(),this.getOddRoundingErrors())}if(s){if(o){throw new D}Je.increment(this.getEvenCounts(),this.getOddRoundingErrors())}if(o){Je.decrement(this.getEvenCounts(),this.getEvenRoundingErrors())}}}Je.SYMBOL_WIDEST=[7,5,4,3,1];Je.EVEN_TOTAL_SUBSET=[4,20,52,104,204];Je.GSUM=[0,348,1388,2948,3988];Je.FINDER_PATTERNS=[Int32Array.from([1,8,4,1]),Int32Array.from([3,6,4,1]),Int32Array.from([3,4,6,1]),Int32Array.from([3,2,8,1]),Int32Array.from([2,6,5,1]),Int32Array.from([2,2,9,1])];Je.WEIGHTS=[[1,3,9,27,81,32,96,77],[20,60,180,118,143,7,21,63],[189,145,13,39,117,140,209,205],[193,157,49,147,19,57,171,91],[62,186,136,197,169,85,44,132],[185,133,188,142,4,12,36,108],[113,128,173,97,80,29,87,50],[150,28,84,41,123,158,52,156],[46,138,203,187,139,206,196,166],[76,17,51,153,37,111,122,155],[43,129,176,106,107,110,119,146],[16,48,144,10,30,90,59,177],[109,116,137,200,178,112,125,164],[70,210,208,202,184,130,179,115],[134,191,151,31,93,68,204,190],[148,22,66,198,172,94,71,2],[6,18,54,162,64,192,154,40],[120,149,25,75,14,42,126,167],[79,26,78,23,69,207,199,175],[103,98,83,38,114,131,182,124],[161,61,183,127,170,88,53,159],[55,165,73,8,24,72,5,15],[45,135,194,160,58,174,100,89]];Je.FINDER_PAT_A=0;Je.FINDER_PAT_B=1;Je.FINDER_PAT_C=2;Je.FINDER_PAT_D=3;Je.FINDER_PAT_E=4;Je.FINDER_PAT_F=5;Je.FINDER_PATTERN_SEQUENCES=[[Je.FINDER_PAT_A,Je.FINDER_PAT_A],[Je.FINDER_PAT_A,Je.FINDER_PAT_B,Je.FINDER_PAT_B],[Je.FINDER_PAT_A,Je.FINDER_PAT_C,Je.FINDER_PAT_B,Je.FINDER_PAT_D],[Je.FINDER_PAT_A,Je.FINDER_PAT_E,Je.FINDER_PAT_B,Je.FINDER_PAT_D,Je.FINDER_PAT_C],[Je.FINDER_PAT_A,Je.FINDER_PAT_E,Je.FINDER_PAT_B,Je.FINDER_PAT_D,Je.FINDER_PAT_D,Je.FINDER_PAT_F],[Je.FINDER_PAT_A,Je.FINDER_PAT_E,Je.FINDER_PAT_B,Je.FINDER_PAT_D,Je.FINDER_PAT_E,Je.FINDER_PAT_F,Je.FINDER_PAT_F],[Je.FINDER_PAT_A,Je.FINDER_PAT_A,Je.FINDER_PAT_B,Je.FINDER_PAT_B,Je.FINDER_PAT_C,Je.FINDER_PAT_C,Je.FINDER_PAT_D,Je.FINDER_PAT_D],[Je.FINDER_PAT_A,Je.FINDER_PAT_A,Je.FINDER_PAT_B,Je.FINDER_PAT_B,Je.FINDER_PAT_C,Je.FINDER_PAT_C,Je.FINDER_PAT_D,Je.FINDER_PAT_E,Je.FINDER_PAT_E],[Je.FINDER_PAT_A,Je.FINDER_PAT_A,Je.FINDER_PAT_B,Je.FINDER_PAT_B,Je.FINDER_PAT_C,Je.FINDER_PAT_C,Je.FINDER_PAT_D,Je.FINDER_PAT_E,Je.FINDER_PAT_F,Je.FINDER_PAT_F],[Je.FINDER_PAT_A,Je.FINDER_PAT_A,Je.FINDER_PAT_B,Je.FINDER_PAT_B,Je.FINDER_PAT_C,Je.FINDER_PAT_D,Je.FINDER_PAT_D,Je.FINDER_PAT_E,Je.FINDER_PAT_E,Je.FINDER_PAT_F,Je.FINDER_PAT_F]];Je.MAX_PAIRS=11;class $e extends ye{constructor(e,t,r){super(e,t);this.count=0;this.finderPattern=r}getFinderPattern(){return this.finderPattern}getCount(){return this.count}incrementCount(){this.count++}}class et extends Ne{constructor(){super(...arguments);this.possibleLeftPairs=[];this.possibleRightPairs=[]}decodeRow(e,t,r){const n=this.decodePair(t,false,e,r);et.addOrTally(this.possibleLeftPairs,n);t.reverse();let i=this.decodePair(t,true,e,r);et.addOrTally(this.possibleRightPairs,i);t.reverse();for(let e of this.possibleLeftPairs){if(e.getCount()>1){for(let t of this.possibleRightPairs){if(t.getCount()>1&&et.checkChecksum(e,t)){return et.constructResult(e,t)}}}}throw new D}static addOrTally(e,t){if(t==null){return}let r=false;for(let n of e){if(n.getValue()===t.getValue()){n.incrementCount();r=true;break}}if(!r){e.push(t)}}reset(){this.possibleLeftPairs.length=0;this.possibleRightPairs.length=0}static constructResult(e,t){let r=4537077*e.getValue()+t.getValue();let n=new String(r).toString();let i=new N;for(let e=13-n.length;e>0;e--){i.append("0")}i.append(n);let s=0;for(let e=0;e<13;e++){let t=i.charAt(e).charCodeAt(0)-"0".charCodeAt(0);s+=(e&1)===0?3*t:t}s=10-s%10;if(s===10){s=0}i.append(s.toString());let o=e.getFinderPattern().getResultPoints();let a=t.getFinderPattern().getResultPoints();return new v(i.toString(),null,0,[o[0],o[1],a[0],a[1]],V.RSS_14,(new Date).getTime())}static checkChecksum(e,t){let r=(e.getChecksumPortion()+16*t.getChecksumPortion())%79;let n=9*e.getFinderPattern().getValue()+t.getFinderPattern().getValue();if(n>72){n--}if(n>8){n--}return r===n}decodePair(e,t,r,n){try{let i=this.findFinderPattern(e,t);let s=this.parseFoundFinderPattern(e,r,t,i);let o=n==null?null:n.get(m.NEED_RESULT_POINT_CALLBACK);if(o!=null){let n=(i[0]+i[1])/2;if(t){n=e.getSize()-1-n}o.foundPossibleResultPoint(new ee(n,r))}let a=this.decodeDataCharacter(e,s,true);let l=this.decodeDataCharacter(e,s,false);return new $e(1597*a.getValue()+l.getValue(),a.getChecksumPortion()+4*l.getChecksumPortion(),s)}catch(e){return null}}decodeDataCharacter(e,t,r){let n=this.getDataCharacterCounters();for(let e=0;e<n.length;e++){n[e]=0}if(r){de.recordPatternInReverse(e,t.getStartEnd()[0],n)}else{de.recordPattern(e,t.getStartEnd()[1]+1,n);for(let e=0,t=n.length-1;e<t;e++,t--){let r=n[e];n[e]=n[t];n[t]=r}}let i=r?16:15;let s=J.sum(new Int32Array(n))/i;let o=this.getOddCounts();let a=this.getEvenCounts();let l=this.getOddRoundingErrors();let h=this.getEvenRoundingErrors();for(let e=0;e<n.length;e++){let t=n[e]/s;let r=Math.floor(t+.5);if(r<1){r=1}else if(r>8){r=8}let i=Math.floor(e/2);if((e&1)===0){o[i]=r;l[i]=t-r}else{a[i]=r;h[i]=t-r}}this.adjustOddEvenCounts(r,i);let c=0;let u=0;for(let e=o.length-1;e>=0;e--){u*=9;u+=o[e];c+=o[e]}let d=0;let f=0;for(let e=a.length-1;e>=0;e--){d*=9;d+=a[e];f+=a[e]}let g=u+3*d;if(r){if((c&1)!==0||c>12||c<4){throw new D}let e=(12-c)/2;let t=et.OUTSIDE_ODD_WIDEST[e];let r=9-t;let n=Oe.getRSSvalue(o,t,false);let i=Oe.getRSSvalue(a,r,true);let s=et.OUTSIDE_EVEN_TOTAL_SUBSET[e];let l=et.OUTSIDE_GSUM[e];return new ye(n*s+i+l,g)}else{if((f&1)!==0||f>10||f<4){throw new D}let e=(10-f)/2;let t=et.INSIDE_ODD_WIDEST[e];let r=9-t;let n=Oe.getRSSvalue(o,t,true);let i=Oe.getRSSvalue(a,r,false);let s=et.INSIDE_ODD_TOTAL_SUBSET[e];let l=et.INSIDE_GSUM[e];return new ye(i*s+n+l,g)}}findFinderPattern(e,t){let r=this.getDecodeFinderCounters();r[0]=0;r[1]=0;r[2]=0;r[3]=0;let n=e.getSize();let i=false;let s=0;while(s<n){i=!e.get(s);if(t===i){break}s++}let o=0;let a=s;for(let t=s;t<n;t++){if(e.get(t)!==i){r[o]++}else{if(o===3){if(Ne.isFinderPattern(r)){return[a,t]}a+=r[0]+r[1];r[0]=r[2];r[1]=r[3];r[2]=0;r[3]=0;o--}else{o++}r[o]=1;i=!i}}throw new D}parseFoundFinderPattern(e,t,r,n){let i=e.get(n[0]);let s=n[0]-1;while(s>=0&&i!==e.get(s)){s--}s++;const o=n[0]-s;const a=this.getDecodeFinderCounters();const l=new Int32Array(a.length);d.arraycopy(a,0,l,1,a.length-1);l[0]=o;const h=this.parseFinderValue(l,et.FINDER_PATTERNS);let c=s;let u=n[1];if(r){c=e.getSize()-1-c;u=e.getSize()-1-u}return new De(h,[s,n[1]],c,u,t)}adjustOddEvenCounts(e,t){let r=J.sum(new Int32Array(this.getOddCounts()));let n=J.sum(new Int32Array(this.getEvenCounts()));let i=false;let s=false;let o=false;let a=false;if(e){if(r>12){s=true}else if(r<4){i=true}if(n>12){a=true}else if(n<4){o=true}}else{if(r>11){s=true}else if(r<5){i=true}if(n>10){a=true}else if(n<4){o=true}}let l=r+n-t;let h=(r&1)===(e?1:0);let c=(n&1)===1;if(l===1){if(h){if(c){throw new D}s=true}else{if(!c){throw new D}a=true}}else if(l===-1){if(h){if(c){throw new D}i=true}else{if(!c){throw new D}o=true}}else if(l===0){if(h){if(!c){throw new D}if(r<n){i=true;a=true}else{s=true;o=true}}else{if(c){throw new D}}}else{throw new D}if(i){if(s){throw new D}Ne.increment(this.getOddCounts(),this.getOddRoundingErrors())}if(s){Ne.decrement(this.getOddCounts(),this.getOddRoundingErrors())}if(o){if(a){throw new D}Ne.increment(this.getEvenCounts(),this.getOddRoundingErrors())}if(a){Ne.decrement(this.getEvenCounts(),this.getEvenRoundingErrors())}}}et.OUTSIDE_EVEN_TOTAL_SUBSET=[1,10,34,70,126];et.INSIDE_ODD_TOTAL_SUBSET=[4,20,48,81];et.OUTSIDE_GSUM=[0,161,961,2015,2715];et.INSIDE_GSUM=[0,336,1036,1516];et.OUTSIDE_ODD_WIDEST=[8,6,4,3,1];et.INSIDE_ODD_WIDEST=[2,4,6,8];et.FINDER_PATTERNS=[Int32Array.from([3,8,2,1]),Int32Array.from([3,5,5,1]),Int32Array.from([3,3,7,1]),Int32Array.from([3,1,9,1]),Int32Array.from([2,7,4,1]),Int32Array.from([2,5,6,1]),Int32Array.from([2,3,8,1]),Int32Array.from([1,5,7,1]),Int32Array.from([1,3,9,1])];
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class tt extends de{constructor(e){super();this.readers=[];const t=!e?null:e.get(m.POSSIBLE_FORMATS);const r=e&&e.get(m.ASSUME_CODE_39_CHECK_DIGIT)!==undefined;if(t){if(t.includes(V.EAN_13)||t.includes(V.UPC_A)||t.includes(V.EAN_8)||t.includes(V.UPC_E)){this.readers.push(new Re(e))}if(t.includes(V.CODE_39)){this.readers.push(new ge(r))}if(t.includes(V.CODE_128)){this.readers.push(new fe)}if(t.includes(V.ITF)){this.readers.push(new we)}if(t.includes(V.RSS_14)){this.readers.push(new et)}if(t.includes(V.RSS_EXPANDED)){console.warn("RSS Expanded reader IS NOT ready for production yet! use at your own risk.");this.readers.push(new Je)}}if(this.readers.length===0){this.readers.push(new Re(e));this.readers.push(new ge);this.readers.push(new Re(e));this.readers.push(new fe);this.readers.push(new we);this.readers.push(new et)}}decodeRow(e,t,r){for(let n=0;n<this.readers.length;n++){try{return this.readers[n].decodeRow(e,t,r)}catch(e){}}throw new D}reset(){this.readers.forEach(e=>e.reset())}}class rt extends k{constructor(e=500,t){super(new tt(t),e,t)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class nt{constructor(e,t,r){this.ecCodewords=e;this.ecBlocks=[t];r&&this.ecBlocks.push(r)}getECCodewords(){return this.ecCodewords}getECBlocks(){return this.ecBlocks}}class it{constructor(e,t){this.count=e;this.dataCodewords=t}getCount(){return this.count}getDataCodewords(){return this.dataCodewords}}class st{constructor(e,t,r,n,i,s){this.versionNumber=e;this.symbolSizeRows=t;this.symbolSizeColumns=r;this.dataRegionSizeRows=n;this.dataRegionSizeColumns=i;this.ecBlocks=s;let o=0;const a=s.getECCodewords();const l=s.getECBlocks();for(let e of l){o+=e.getCount()*(e.getDataCodewords()+a)}this.totalCodewords=o}getVersionNumber(){return this.versionNumber}getSymbolSizeRows(){return this.symbolSizeRows}getSymbolSizeColumns(){return this.symbolSizeColumns}getDataRegionSizeRows(){return this.dataRegionSizeRows}getDataRegionSizeColumns(){return this.dataRegionSizeColumns}getTotalCodewords(){return this.totalCodewords}getECBlocks(){return this.ecBlocks}static getVersionForDimensions(e,t){if((e&1)!==0||(t&1)!==0){throw new _}for(let r of st.VERSIONS){if(r.symbolSizeRows===e&&r.symbolSizeColumns===t){return r}}throw new _}toString(){return""+this.versionNumber}static buildVersions(){return[new st(1,10,10,8,8,new nt(5,new it(1,3))),new st(2,12,12,10,10,new nt(7,new it(1,5))),new st(3,14,14,12,12,new nt(10,new it(1,8))),new st(4,16,16,14,14,new nt(12,new it(1,12))),new st(5,18,18,16,16,new nt(14,new it(1,18))),new st(6,20,20,18,18,new nt(18,new it(1,22))),new st(7,22,22,20,20,new nt(20,new it(1,30))),new st(8,24,24,22,22,new nt(24,new it(1,36))),new st(9,26,26,24,24,new nt(28,new it(1,44))),new st(10,32,32,14,14,new nt(36,new it(1,62))),new st(11,36,36,16,16,new nt(42,new it(1,86))),new st(12,40,40,18,18,new nt(48,new it(1,114))),new st(13,44,44,20,20,new nt(56,new it(1,144))),new st(14,48,48,22,22,new nt(68,new it(1,174))),new st(15,52,52,24,24,new nt(42,new it(2,102))),new st(16,64,64,14,14,new nt(56,new it(2,140))),new st(17,72,72,16,16,new nt(36,new it(4,92))),new st(18,80,80,18,18,new nt(48,new it(4,114))),new st(19,88,88,20,20,new nt(56,new it(4,144))),new st(20,96,96,22,22,new nt(68,new it(4,174))),new st(21,104,104,24,24,new nt(56,new it(6,136))),new st(22,120,120,18,18,new nt(68,new it(6,175))),new st(23,132,132,20,20,new nt(62,new it(8,163))),new st(24,144,144,22,22,new nt(62,new it(8,156),new it(2,155))),new st(25,8,18,6,16,new nt(7,new it(1,5))),new st(26,8,32,6,14,new nt(11,new it(1,10))),new st(27,12,26,10,24,new nt(14,new it(1,16))),new st(28,12,36,10,16,new nt(18,new it(1,22))),new st(29,16,36,14,16,new nt(24,new it(1,32))),new st(30,16,48,14,22,new nt(28,new it(1,49)))]}}st.VERSIONS=st.buildVersions();
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ot{constructor(e){const t=e.getHeight();if(t<8||t>144||(t&1)!==0){throw new _}this.version=ot.readVersion(e);this.mappingBitMatrix=this.extractDataRegion(e);this.readMappingMatrix=new y(this.mappingBitMatrix.getWidth(),this.mappingBitMatrix.getHeight())}getVersion(){return this.version}static readVersion(e){const t=e.getHeight();const r=e.getWidth();return st.getVersionForDimensions(t,r)}readCodewords(){const e=new Int8Array(this.version.getTotalCodewords());let t=0;let r=4;let n=0;const i=this.mappingBitMatrix.getHeight();const s=this.mappingBitMatrix.getWidth();let o=false;let a=false;let l=false;let h=false;do{if(r===i&&n===0&&!o){e[t++]=this.readCorner1(i,s)&255;r-=2;n+=2;o=true}else if(r===i-2&&n===0&&(s&3)!==0&&!a){e[t++]=this.readCorner2(i,s)&255;r-=2;n+=2;a=true}else if(r===i+4&&n===2&&(s&7)===0&&!l){e[t++]=this.readCorner3(i,s)&255;r-=2;n+=2;l=true}else if(r===i-2&&n===0&&(s&7)===4&&!h){e[t++]=this.readCorner4(i,s)&255;r-=2;n+=2;h=true}else{do{if(r<i&&n>=0&&!this.readMappingMatrix.get(n,r)){e[t++]=this.readUtah(r,n,i,s)&255}r-=2;n+=2}while(r>=0&&n<s);r+=1;n+=3;do{if(r>=0&&n<s&&!this.readMappingMatrix.get(n,r)){e[t++]=this.readUtah(r,n,i,s)&255}r+=2;n-=2}while(r<i&&n>=0);r+=3;n+=1}}while(r<i||n<s);if(t!==this.version.getTotalCodewords()){throw new _}return e}readModule(e,t,r,n){if(e<0){e+=r;t+=4-(r+4&7)}if(t<0){t+=n;e+=4-(n+4&7)}this.readMappingMatrix.set(t,e);return this.mappingBitMatrix.get(t,e)}readUtah(e,t,r,n){let i=0;if(this.readModule(e-2,t-2,r,n)){i|=1}i<<=1;if(this.readModule(e-2,t-1,r,n)){i|=1}i<<=1;if(this.readModule(e-1,t-2,r,n)){i|=1}i<<=1;if(this.readModule(e-1,t-1,r,n)){i|=1}i<<=1;if(this.readModule(e-1,t,r,n)){i|=1}i<<=1;if(this.readModule(e,t-2,r,n)){i|=1}i<<=1;if(this.readModule(e,t-1,r,n)){i|=1}i<<=1;if(this.readModule(e,t,r,n)){i|=1}return i}readCorner1(e,t){let r=0;if(this.readModule(e-1,0,e,t)){r|=1}r<<=1;if(this.readModule(e-1,1,e,t)){r|=1}r<<=1;if(this.readModule(e-1,2,e,t)){r|=1}r<<=1;if(this.readModule(0,t-2,e,t)){r|=1}r<<=1;if(this.readModule(0,t-1,e,t)){r|=1}r<<=1;if(this.readModule(1,t-1,e,t)){r|=1}r<<=1;if(this.readModule(2,t-1,e,t)){r|=1}r<<=1;if(this.readModule(3,t-1,e,t)){r|=1}return r}readCorner2(e,t){let r=0;if(this.readModule(e-3,0,e,t)){r|=1}r<<=1;if(this.readModule(e-2,0,e,t)){r|=1}r<<=1;if(this.readModule(e-1,0,e,t)){r|=1}r<<=1;if(this.readModule(0,t-4,e,t)){r|=1}r<<=1;if(this.readModule(0,t-3,e,t)){r|=1}r<<=1;if(this.readModule(0,t-2,e,t)){r|=1}r<<=1;if(this.readModule(0,t-1,e,t)){r|=1}r<<=1;if(this.readModule(1,t-1,e,t)){r|=1}return r}readCorner3(e,t){let r=0;if(this.readModule(e-1,0,e,t)){r|=1}r<<=1;if(this.readModule(e-1,t-1,e,t)){r|=1}r<<=1;if(this.readModule(0,t-3,e,t)){r|=1}r<<=1;if(this.readModule(0,t-2,e,t)){r|=1}r<<=1;if(this.readModule(0,t-1,e,t)){r|=1}r<<=1;if(this.readModule(1,t-3,e,t)){r|=1}r<<=1;if(this.readModule(1,t-2,e,t)){r|=1}r<<=1;if(this.readModule(1,t-1,e,t)){r|=1}return r}readCorner4(e,t){let r=0;if(this.readModule(e-3,0,e,t)){r|=1}r<<=1;if(this.readModule(e-2,0,e,t)){r|=1}r<<=1;if(this.readModule(e-1,0,e,t)){r|=1}r<<=1;if(this.readModule(0,t-2,e,t)){r|=1}r<<=1;if(this.readModule(0,t-1,e,t)){r|=1}r<<=1;if(this.readModule(1,t-1,e,t)){r|=1}r<<=1;if(this.readModule(2,t-1,e,t)){r|=1}r<<=1;if(this.readModule(3,t-1,e,t)){r|=1}return r}extractDataRegion(e){const t=this.version.getSymbolSizeRows();const r=this.version.getSymbolSizeColumns();if(e.getHeight()!==t){throw new l("Dimension of bitMatrix must match the version size")}const n=this.version.getDataRegionSizeRows();const i=this.version.getDataRegionSizeColumns();const s=t/n|0;const o=r/i|0;const a=s*n;const h=o*i;const c=new y(h,a);for(let t=0;t<s;++t){const r=t*n;for(let s=0;s<o;++s){const o=s*i;for(let a=0;a<n;++a){const l=t*(n+2)+1+a;const h=r+a;for(let t=0;t<i;++t){const r=s*(i+2)+1+t;if(e.get(r,l)){const e=o+t;c.set(e,h)}}}}}return c}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class at{constructor(e,t){this.numDataCodewords=e;this.codewords=t}static getDataBlocks(e,t){const r=t.getECBlocks();let n=0;const i=r.getECBlocks();for(let e of i){n+=e.getCount()}const s=new Array(n);let o=0;for(let e of i){for(let t=0;t<e.getCount();t++){const t=e.getDataCodewords();const n=r.getECCodewords()+t;s[o++]=new at(t,new Uint8Array(n))}}const a=s[0].codewords.length;const h=a-r.getECCodewords();const c=h-1;let u=0;for(let t=0;t<c;t++){for(let r=0;r<o;r++){s[r].codewords[t]=e[u++]}}const d=t.getVersionNumber()===24;const f=d?8:o;for(let t=0;t<f;t++){s[t].codewords[h-1]=e[u++]}const g=s[0].codewords.length;for(let t=h;t<g;t++){for(let r=0;r<o;r++){const n=d?(r+8)%o:r;const i=d&&n>7?t-1:t;s[n].codewords[i]=e[u++]}}if(u!==e.length){throw new l}return s}getNumDataCodewords(){return this.numDataCodewords}getCodewords(){return this.codewords}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class lt{constructor(e){this.bytes=e;this.byteOffset=0;this.bitOffset=0}getBitOffset(){return this.bitOffset}getByteOffset(){return this.byteOffset}readBits(e){if(e<1||e>32||e>this.available()){throw new l(""+e)}let t=0;let r=this.bitOffset;let n=this.byteOffset;const i=this.bytes;if(r>0){const s=8-r;const o=e<s?e:s;const a=s-o;const l=255>>8-o<<a;t=(i[n]&l)>>a;e-=o;r+=o;if(r===8){r=0;n++}}if(e>0){while(e>=8){t=t<<8|i[n]&255;n++;e-=8}if(e>0){const s=8-e;const o=255>>s<<s;t=t<<e|(i[n]&o)>>s;r+=e}}this.bitOffset=r;this.byteOffset=n;return t}available(){return 8*(this.bytes.length-this.byteOffset)-this.bitOffset}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var ht;(function(e){e[e["PAD_ENCODE"]=0]="PAD_ENCODE";e[e["ASCII_ENCODE"]=1]="ASCII_ENCODE";e[e["C40_ENCODE"]=2]="C40_ENCODE";e[e["TEXT_ENCODE"]=3]="TEXT_ENCODE";e[e["ANSIX12_ENCODE"]=4]="ANSIX12_ENCODE";e[e["EDIFACT_ENCODE"]=5]="EDIFACT_ENCODE";e[e["BASE256_ENCODE"]=6]="BASE256_ENCODE"})(ht||(ht={}));class ct{static decode(e){const t=new lt(e);const r=new N;const n=new N;const i=new Array;let s=ht.ASCII_ENCODE;do{if(s===ht.ASCII_ENCODE){s=this.decodeAsciiSegment(t,r,n)}else{switch(s){case ht.C40_ENCODE:this.decodeC40Segment(t,r);break;case ht.TEXT_ENCODE:this.decodeTextSegment(t,r);break;case ht.ANSIX12_ENCODE:this.decodeAnsiX12Segment(t,r);break;case ht.EDIFACT_ENCODE:this.decodeEdifactSegment(t,r);break;case ht.BASE256_ENCODE:this.decodeBase256Segment(t,r,i);break;default:throw new _}s=ht.ASCII_ENCODE}}while(s!==ht.PAD_ENCODE&&t.available()>0);if(n.length()>0){r.append(n.toString())}return new G(e,r.toString(),i.length===0?null:i,null)}static decodeAsciiSegment(e,t,r){let n=false;do{let i=e.readBits(8);if(i===0){throw new _}else if(i<=128){if(n){i+=128}t.append(String.fromCharCode(i-1));return ht.ASCII_ENCODE}else if(i===129){return ht.PAD_ENCODE}else if(i<=229){const e=i-130;if(e<10){t.append("0")}t.append(""+e)}else{switch(i){case 230:return ht.C40_ENCODE;case 231:return ht.BASE256_ENCODE;case 232:t.append(String.fromCharCode(29));break;case 233:case 234:break;case 235:n=true;break;case 236:t.append("[)>05");r.insert(0,"");break;case 237:t.append("[)>06");r.insert(0,"");break;case 238:return ht.ANSIX12_ENCODE;case 239:return ht.TEXT_ENCODE;case 240:return ht.EDIFACT_ENCODE;case 241:break;default:if(i!==254||e.available()!==0){throw new _}break}}}while(e.available()>0);return ht.ASCII_ENCODE}static decodeC40Segment(e,t){let r=false;const n=[];let i=0;do{if(e.available()===8){return}const s=e.readBits(8);if(s===254){return}this.parseTwoBytes(s,e.readBits(8),n);for(let e=0;e<3;e++){const s=n[e];switch(i){case 0:if(s<3){i=s+1}else if(s<this.C40_BASIC_SET_CHARS.length){const e=this.C40_BASIC_SET_CHARS[s];if(r){t.append(String.fromCharCode(e.charCodeAt(0)+128));r=false}else{t.append(e)}}else{throw new _}break;case 1:if(r){t.append(String.fromCharCode(s+128));r=false}else{t.append(String.fromCharCode(s))}i=0;break;case 2:if(s<this.C40_SHIFT2_SET_CHARS.length){const e=this.C40_SHIFT2_SET_CHARS[s];if(r){t.append(String.fromCharCode(e.charCodeAt(0)+128));r=false}else{t.append(e)}}else{switch(s){case 27:t.append(String.fromCharCode(29));break;case 30:r=true;break;default:throw new _}}i=0;break;case 3:if(r){t.append(String.fromCharCode(s+224));r=false}else{t.append(String.fromCharCode(s+96))}i=0;break;default:throw new _}}}while(e.available()>0)}static decodeTextSegment(e,t){let r=false;let n=[];let i=0;do{if(e.available()===8){return}const s=e.readBits(8);if(s===254){return}this.parseTwoBytes(s,e.readBits(8),n);for(let e=0;e<3;e++){const s=n[e];switch(i){case 0:if(s<3){i=s+1}else if(s<this.TEXT_BASIC_SET_CHARS.length){const e=this.TEXT_BASIC_SET_CHARS[s];if(r){t.append(String.fromCharCode(e.charCodeAt(0)+128));r=false}else{t.append(e)}}else{throw new _}break;case 1:if(r){t.append(String.fromCharCode(s+128));r=false}else{t.append(String.fromCharCode(s))}i=0;break;case 2:if(s<this.TEXT_SHIFT2_SET_CHARS.length){const e=this.TEXT_SHIFT2_SET_CHARS[s];if(r){t.append(String.fromCharCode(e.charCodeAt(0)+128));r=false}else{t.append(e)}}else{switch(s){case 27:t.append(String.fromCharCode(29));break;case 30:r=true;break;default:throw new _}}i=0;break;case 3:if(s<this.TEXT_SHIFT3_SET_CHARS.length){const e=this.TEXT_SHIFT3_SET_CHARS[s];if(r){t.append(String.fromCharCode(e.charCodeAt(0)+128));r=false}else{t.append(e)}i=0}else{throw new _}break;default:throw new _}}}while(e.available()>0)}static decodeAnsiX12Segment(e,t){const r=[];do{if(e.available()===8){return}const n=e.readBits(8);if(n===254){return}this.parseTwoBytes(n,e.readBits(8),r);for(let e=0;e<3;e++){const n=r[e];switch(n){case 0:t.append("\r");break;case 1:t.append("*");break;case 2:t.append(">");break;case 3:t.append(" ");break;default:if(n<14){t.append(String.fromCharCode(n+44))}else if(n<40){t.append(String.fromCharCode(n+51))}else{throw new _}break}}}while(e.available()>0)}static parseTwoBytes(e,t,r){let n=(e<<8)+t-1;let i=Math.floor(n/1600);r[0]=i;n-=i*1600;i=Math.floor(n/40);r[1]=i;r[2]=n-i*40}static decodeEdifactSegment(e,t){do{if(e.available()<=16){return}for(let r=0;r<4;r++){let r=e.readBits(6);if(r===31){const t=8-e.getBitOffset();if(t!==8){e.readBits(t)}return}if((r&32)===0){r|=64}t.append(String.fromCharCode(r))}}while(e.available()>0)}static decodeBase256Segment(e,t,r){let n=1+e.getByteOffset();const i=this.unrandomize255State(e.readBits(8),n++);let s;if(i===0){s=e.available()/8|0}else if(i<250){s=i}else{s=250*(i-249)+this.unrandomize255State(e.readBits(8),n++)}if(s<0){throw new _}const o=new Uint8Array(s);for(let t=0;t<s;t++){if(e.available()<8){throw new _}o[t]=this.unrandomize255State(e.readBits(8),n++)}r.push(o);try{t.append(T.decode(o,R.ISO88591))}catch(e){throw new K("Platform does not support required encoding: "+e.message)}}static unrandomize255State(e,t){const r=149*t%255+1;const n=e-r;return n>=0?n:n+256}}ct.C40_BASIC_SET_CHARS=["*","*","*"," ","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];ct.C40_SHIFT2_SET_CHARS=["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_"];ct.TEXT_BASIC_SET_CHARS=["*","*","*"," ","0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];ct.TEXT_SHIFT2_SET_CHARS=ct.C40_SHIFT2_SET_CHARS;ct.TEXT_SHIFT3_SET_CHARS=["`","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","{","|","}","~",String.fromCharCode(127)];
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ut{constructor(){this.rsDecoder=new q(Y.DATA_MATRIX_FIELD_256)}decode(e){const t=new ot(e);const r=t.getVersion();const n=t.readCodewords();const i=at.getDataBlocks(n,r);let s=0;for(let e of i){s+=e.getNumDataCodewords()}const o=new Uint8Array(s);const a=i.length;for(let e=0;e<a;e++){const t=i[e];const r=t.getCodewords();const n=t.getNumDataCodewords();this.correctErrors(r,n);for(let t=0;t<n;t++){o[t*a+e]=r[t]}}return ct.decode(o)}correctErrors(e,t){const r=new Int32Array(e);try{this.rsDecoder.decode(r,e.length-t)}catch(e){throw new c}for(let n=0;n<t;n++){e[n]=r[n]}}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class dt{constructor(e){this.image=e;this.rectangleDetector=new ne(this.image)}detect(){const e=this.rectangleDetector.detect();let t=this.detectSolid1(e);t=this.detectSolid2(t);t[3]=this.correctTopRight(t);if(!t[3]){throw new D}t=this.shiftToModuleCenter(t);const r=t[0];const n=t[1];const i=t[2];const s=t[3];let o=this.transitionsBetween(r,s)+1;let a=this.transitionsBetween(i,s)+1;if((o&1)===1){o+=1}if((a&1)===1){a+=1}if(4*o<7*a&&4*a<7*o){o=a=Math.max(o,a)}let l=dt.sampleGrid(this.image,r,n,i,s,o,a);return new te(l,[r,n,i,s])}static shiftPoint(e,t,r){let n=(t.getX()-e.getX())/(r+1);let i=(t.getY()-e.getY())/(r+1);return new ee(e.getX()+n,e.getY()+i)}static moveAway(e,t,r){let n=e.getX();let i=e.getY();if(n<t){n-=1}else{n+=1}if(i<r){i-=1}else{i+=1}return new ee(n,i)}detectSolid1(e){let t=e[0];let r=e[1];let n=e[3];let i=e[2];let s=this.transitionsBetween(t,r);let o=this.transitionsBetween(r,n);let a=this.transitionsBetween(n,i);let l=this.transitionsBetween(i,t);let h=s;let c=[i,t,r,n];if(h>o){h=o;c[0]=t;c[1]=r;c[2]=n;c[3]=i}if(h>a){h=a;c[0]=r;c[1]=n;c[2]=i;c[3]=t}if(h>l){c[0]=n;c[1]=i;c[2]=t;c[3]=r}return c}detectSolid2(e){let t=e[0];let r=e[1];let n=e[2];let i=e[3];let s=this.transitionsBetween(t,i);let o=dt.shiftPoint(r,n,(s+1)*4);let a=dt.shiftPoint(n,r,(s+1)*4);let l=this.transitionsBetween(o,t);let h=this.transitionsBetween(a,i);if(l<h){e[0]=t;e[1]=r;e[2]=n;e[3]=i}else{e[0]=r;e[1]=n;e[2]=i;e[3]=t}return e}correctTopRight(e){let t=e[0];let r=e[1];let n=e[2];let i=e[3];let s=this.transitionsBetween(t,i);let o=this.transitionsBetween(r,i);let a=dt.shiftPoint(t,r,(o+1)*4);let l=dt.shiftPoint(n,r,(s+1)*4);s=this.transitionsBetween(a,i);o=this.transitionsBetween(l,i);let h=new ee(i.getX()+(n.getX()-r.getX())/(s+1),i.getY()+(n.getY()-r.getY())/(s+1));let c=new ee(i.getX()+(t.getX()-r.getX())/(o+1),i.getY()+(t.getY()-r.getY())/(o+1));if(!this.isValid(h)){if(this.isValid(c)){return c}return null}if(!this.isValid(c)){return h}let u=this.transitionsBetween(a,h)+this.transitionsBetween(l,h);let d=this.transitionsBetween(a,c)+this.transitionsBetween(l,c);if(u>d){return h}else{return c}}shiftToModuleCenter(e){let t=e[0];let r=e[1];let n=e[2];let i=e[3];let s=this.transitionsBetween(t,i)+1;let o=this.transitionsBetween(n,i)+1;let a=dt.shiftPoint(t,r,o*4);let l=dt.shiftPoint(n,r,s*4);s=this.transitionsBetween(a,i)+1;o=this.transitionsBetween(l,i)+1;if((s&1)===1){s+=1}if((o&1)===1){o+=1}let h=(t.getX()+r.getX()+n.getX()+i.getX())/4;let c=(t.getY()+r.getY()+n.getY()+i.getY())/4;t=dt.moveAway(t,h,c);r=dt.moveAway(r,h,c);n=dt.moveAway(n,h,c);i=dt.moveAway(i,h,c);let u;let d;a=dt.shiftPoint(t,r,o*4);a=dt.shiftPoint(a,i,s*4);u=dt.shiftPoint(r,t,o*4);u=dt.shiftPoint(u,n,s*4);l=dt.shiftPoint(n,i,o*4);l=dt.shiftPoint(l,r,s*4);d=dt.shiftPoint(i,n,o*4);d=dt.shiftPoint(d,t,s*4);return[a,u,l,d]}isValid(e){return e.getX()>=0&&e.getX()<this.image.getWidth()&&e.getY()>0&&e.getY()<this.image.getHeight()}static sampleGrid(e,t,r,n,i,s,o){const a=ae.getInstance();return a.sampleGrid(e,s,o,.5,.5,s-.5,.5,s-.5,o-.5,.5,o-.5,t.getX(),t.getY(),i.getX(),i.getY(),n.getX(),n.getY(),r.getX(),r.getY())}transitionsBetween(e,t){let r=Math.trunc(e.getX());let n=Math.trunc(e.getY());let i=Math.trunc(t.getX());let s=Math.trunc(t.getY());let o=Math.abs(s-n)>Math.abs(i-r);if(o){let e=r;r=n;n=e;e=i;i=s;s=e}let a=Math.abs(i-r);let l=Math.abs(s-n);let h=-a/2;let c=n<s?1:-1;let u=r<i?1:-1;let d=0;let f=this.image.get(o?n:r,o?r:n);for(let e=r,t=n;e!==i;e+=u){let r=this.image.get(o?t:e,o?e:t);if(r!==f){d++;f=r}h+=l;if(h>0){if(t===s){break}t+=c;h-=a}}return d}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class ft{constructor(){this.decoder=new ut}decode(e,t=null){let r;let n;if(t!=null&&t.has(m.PURE_BARCODE)){const t=ft.extractPureBits(e.getBlackMatrix());r=this.decoder.decode(t);n=ft.NO_POINTS}else{const t=new dt(e.getBlackMatrix()).detect();r=this.decoder.decode(t.getBits());n=t.getPoints()}const i=r.getRawBytes();const s=new v(r.getText(),i,8*i.length,n,V.DATA_MATRIX,d.currentTimeMillis());const o=r.getByteSegments();if(o!=null){s.putMetadata(H.BYTE_SEGMENTS,o)}const a=r.getECLevel();if(a!=null){s.putMetadata(H.ERROR_CORRECTION_LEVEL,a)}return s}reset(){}static extractPureBits(e){const t=e.getTopLeftOnBit();const r=e.getBottomRightOnBit();if(t==null||r==null){throw new D}const n=this.moduleSize(t,e);let i=t[1];const s=r[1];let o=t[0];const a=r[0];const l=(a-o+1)/n;const h=(s-i+1)/n;if(l<=0||h<=0){throw new D}const c=n/2;i+=c;o+=c;const u=new y(l,h);for(let t=0;t<h;t++){const r=i+t*n;for(let i=0;i<l;i++){if(e.get(o+i*n,r)){u.set(i,t)}}}return u}static moduleSize(e,t){const r=t.getWidth();let n=e[0];const i=e[1];while(n<r&&t.get(n,i)){n++}if(n===r){throw new D}const s=n-e[0];if(s===0){throw new D}return s}}ft.NO_POINTS=[];class gt extends k{constructor(e=500){super(new ft,e)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var wt;(function(e){e[e["L"]=0]="L";e[e["M"]=1]="M";e[e["Q"]=2]="Q";e[e["H"]=3]="H"})(wt||(wt={}));class At{constructor(e,t,r){this.value=e;this.stringValue=t;this.bits=r;At.FOR_BITS.set(r,this);At.FOR_VALUE.set(e,this)}getValue(){return this.value}getBits(){return this.bits}static fromString(e){switch(e){case"L":return At.L;case"M":return At.M;case"Q":return At.Q;case"H":return At.H;default:throw new a(e+"not available")}}toString(){return this.stringValue}equals(e){if(!(e instanceof At)){return false}const t=e;return this.value===t.value}static forBits(e){if(e<0||e>=At.FOR_BITS.size){throw new l}return At.FOR_BITS.get(e)}}At.FOR_BITS=new Map;At.FOR_VALUE=new Map;At.L=new At(wt.L,"L",1);At.M=new At(wt.M,"M",0);At.Q=new At(wt.Q,"Q",3);At.H=new At(wt.H,"H",2);
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ct{constructor(e){this.errorCorrectionLevel=At.forBits(e>>3&3);this.dataMask=e&7}static numBitsDiffering(e,t){return A.bitCount(e^t)}static decodeFormatInformation(e,t){const r=Ct.doDecodeFormatInformation(e,t);if(r!==null){return r}return Ct.doDecodeFormatInformation(e^Ct.FORMAT_INFO_MASK_QR,t^Ct.FORMAT_INFO_MASK_QR)}static doDecodeFormatInformation(e,t){let r=Number.MAX_SAFE_INTEGER;let n=0;for(const i of Ct.FORMAT_INFO_DECODE_LOOKUP){const s=i[0];if(s===e||s===t){return new Ct(i[1])}let o=Ct.numBitsDiffering(e,s);if(o<r){n=i[1];r=o}if(e!==t){o=Ct.numBitsDiffering(t,s);if(o<r){n=i[1];r=o}}}if(r<=3){return new Ct(n)}return null}getErrorCorrectionLevel(){return this.errorCorrectionLevel}getDataMask(){return this.dataMask}hashCode(){return this.errorCorrectionLevel.getBits()<<3|this.dataMask}equals(e){if(!(e instanceof Ct)){return false}const t=e;return this.errorCorrectionLevel===t.errorCorrectionLevel&&this.dataMask===t.dataMask}}Ct.FORMAT_INFO_MASK_QR=21522;Ct.FORMAT_INFO_DECODE_LOOKUP=[Int32Array.from([21522,0]),Int32Array.from([20773,1]),Int32Array.from([24188,2]),Int32Array.from([23371,3]),Int32Array.from([17913,4]),Int32Array.from([16590,5]),Int32Array.from([20375,6]),Int32Array.from([19104,7]),Int32Array.from([30660,8]),Int32Array.from([29427,9]),Int32Array.from([32170,10]),Int32Array.from([30877,11]),Int32Array.from([26159,12]),Int32Array.from([25368,13]),Int32Array.from([27713,14]),Int32Array.from([26998,15]),Int32Array.from([5769,16]),Int32Array.from([5054,17]),Int32Array.from([7399,18]),Int32Array.from([6608,19]),Int32Array.from([1890,20]),Int32Array.from([597,21]),Int32Array.from([3340,22]),Int32Array.from([2107,23]),Int32Array.from([13663,24]),Int32Array.from([12392,25]),Int32Array.from([16177,26]),Int32Array.from([14854,27]),Int32Array.from([9396,28]),Int32Array.from([8579,29]),Int32Array.from([11994,30]),Int32Array.from([11245,31])];class Et{constructor(e,...t){this.ecCodewordsPerBlock=e;this.ecBlocks=t}getECCodewordsPerBlock(){return this.ecCodewordsPerBlock}getNumBlocks(){let e=0;const t=this.ecBlocks;for(const r of t){e+=r.getCount()}return e}getTotalECCodewords(){return this.ecCodewordsPerBlock*this.getNumBlocks()}getECBlocks(){return this.ecBlocks}}class mt{constructor(e,t){this.count=e;this.dataCodewords=t}getCount(){return this.count}getDataCodewords(){return this.dataCodewords}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class _t{constructor(e,t,...r){this.versionNumber=e;this.alignmentPatternCenters=t;this.ecBlocks=r;let n=0;const i=r[0].getECCodewordsPerBlock();const s=r[0].getECBlocks();for(const e of s){n+=e.getCount()*(e.getDataCodewords()+i)}this.totalCodewords=n}getVersionNumber(){return this.versionNumber}getAlignmentPatternCenters(){return this.alignmentPatternCenters}getTotalCodewords(){return this.totalCodewords}getDimensionForVersion(){return 17+4*this.versionNumber}getECBlocksForLevel(e){return this.ecBlocks[e.getValue()]}static getProvisionalVersionForDimension(e){if(e%4!==1){throw new _}try{return this.getVersionForNumber((e-17)/4)}catch(e){throw new _}}static getVersionForNumber(e){if(e<1||e>40){throw new l}return _t.VERSIONS[e-1]}static decodeVersionInformation(e){let t=Number.MAX_SAFE_INTEGER;let r=0;for(let n=0;n<_t.VERSION_DECODE_INFO.length;n++){const i=_t.VERSION_DECODE_INFO[n];if(i===e){return _t.getVersionForNumber(n+7)}const s=Ct.numBitsDiffering(e,i);if(s<t){r=n+7;t=s}}if(t<=3){return _t.getVersionForNumber(r)}return null}buildFunctionPattern(){const e=this.getDimensionForVersion();const t=new y(e);t.setRegion(0,0,9,9);t.setRegion(e-8,0,8,9);t.setRegion(0,e-8,9,8);const r=this.alignmentPatternCenters.length;for(let e=0;e<r;e++){const n=this.alignmentPatternCenters[e]-2;for(let i=0;i<r;i++){if(e===0&&(i===0||i===r-1)||e===r-1&&i===0){continue}t.setRegion(this.alignmentPatternCenters[i]-2,n,5,5)}}t.setRegion(6,9,1,e-17);t.setRegion(9,6,e-17,1);if(this.versionNumber>6){t.setRegion(e-11,0,3,6);t.setRegion(0,e-11,6,3)}return t}toString(){return""+this.versionNumber}}_t.VERSION_DECODE_INFO=Int32Array.from([31892,34236,39577,42195,48118,51042,55367,58893,63784,68472,70749,76311,79154,84390,87683,92361,96236,102084,102881,110507,110734,117786,119615,126325,127568,133589,136944,141498,145311,150283,152622,158308,161089,167017]);_t.VERSIONS=[new _t(1,new Int32Array(0),new Et(7,new mt(1,19)),new Et(10,new mt(1,16)),new Et(13,new mt(1,13)),new Et(17,new mt(1,9))),new _t(2,Int32Array.from([6,18]),new Et(10,new mt(1,34)),new Et(16,new mt(1,28)),new Et(22,new mt(1,22)),new Et(28,new mt(1,16))),new _t(3,Int32Array.from([6,22]),new Et(15,new mt(1,55)),new Et(26,new mt(1,44)),new Et(18,new mt(2,17)),new Et(22,new mt(2,13))),new _t(4,Int32Array.from([6,26]),new Et(20,new mt(1,80)),new Et(18,new mt(2,32)),new Et(26,new mt(2,24)),new Et(16,new mt(4,9))),new _t(5,Int32Array.from([6,30]),new Et(26,new mt(1,108)),new Et(24,new mt(2,43)),new Et(18,new mt(2,15),new mt(2,16)),new Et(22,new mt(2,11),new mt(2,12))),new _t(6,Int32Array.from([6,34]),new Et(18,new mt(2,68)),new Et(16,new mt(4,27)),new Et(24,new mt(4,19)),new Et(28,new mt(4,15))),new _t(7,Int32Array.from([6,22,38]),new Et(20,new mt(2,78)),new Et(18,new mt(4,31)),new Et(18,new mt(2,14),new mt(4,15)),new Et(26,new mt(4,13),new mt(1,14))),new _t(8,Int32Array.from([6,24,42]),new Et(24,new mt(2,97)),new Et(22,new mt(2,38),new mt(2,39)),new Et(22,new mt(4,18),new mt(2,19)),new Et(26,new mt(4,14),new mt(2,15))),new _t(9,Int32Array.from([6,26,46]),new Et(30,new mt(2,116)),new Et(22,new mt(3,36),new mt(2,37)),new Et(20,new mt(4,16),new mt(4,17)),new Et(24,new mt(4,12),new mt(4,13))),new _t(10,Int32Array.from([6,28,50]),new Et(18,new mt(2,68),new mt(2,69)),new Et(26,new mt(4,43),new mt(1,44)),new Et(24,new mt(6,19),new mt(2,20)),new Et(28,new mt(6,15),new mt(2,16))),new _t(11,Int32Array.from([6,30,54]),new Et(20,new mt(4,81)),new Et(30,new mt(1,50),new mt(4,51)),new Et(28,new mt(4,22),new mt(4,23)),new Et(24,new mt(3,12),new mt(8,13))),new _t(12,Int32Array.from([6,32,58]),new Et(24,new mt(2,92),new mt(2,93)),new Et(22,new mt(6,36),new mt(2,37)),new Et(26,new mt(4,20),new mt(6,21)),new Et(28,new mt(7,14),new mt(4,15))),new _t(13,Int32Array.from([6,34,62]),new Et(26,new mt(4,107)),new Et(22,new mt(8,37),new mt(1,38)),new Et(24,new mt(8,20),new mt(4,21)),new Et(22,new mt(12,11),new mt(4,12))),new _t(14,Int32Array.from([6,26,46,66]),new Et(30,new mt(3,115),new mt(1,116)),new Et(24,new mt(4,40),new mt(5,41)),new Et(20,new mt(11,16),new mt(5,17)),new Et(24,new mt(11,12),new mt(5,13))),new _t(15,Int32Array.from([6,26,48,70]),new Et(22,new mt(5,87),new mt(1,88)),new Et(24,new mt(5,41),new mt(5,42)),new Et(30,new mt(5,24),new mt(7,25)),new Et(24,new mt(11,12),new mt(7,13))),new _t(16,Int32Array.from([6,26,50,74]),new Et(24,new mt(5,98),new mt(1,99)),new Et(28,new mt(7,45),new mt(3,46)),new Et(24,new mt(15,19),new mt(2,20)),new Et(30,new mt(3,15),new mt(13,16))),new _t(17,Int32Array.from([6,30,54,78]),new Et(28,new mt(1,107),new mt(5,108)),new Et(28,new mt(10,46),new mt(1,47)),new Et(28,new mt(1,22),new mt(15,23)),new Et(28,new mt(2,14),new mt(17,15))),new _t(18,Int32Array.from([6,30,56,82]),new Et(30,new mt(5,120),new mt(1,121)),new Et(26,new mt(9,43),new mt(4,44)),new Et(28,new mt(17,22),new mt(1,23)),new Et(28,new mt(2,14),new mt(19,15))),new _t(19,Int32Array.from([6,30,58,86]),new Et(28,new mt(3,113),new mt(4,114)),new Et(26,new mt(3,44),new mt(11,45)),new Et(26,new mt(17,21),new mt(4,22)),new Et(26,new mt(9,13),new mt(16,14))),new _t(20,Int32Array.from([6,34,62,90]),new Et(28,new mt(3,107),new mt(5,108)),new Et(26,new mt(3,41),new mt(13,42)),new Et(30,new mt(15,24),new mt(5,25)),new Et(28,new mt(15,15),new mt(10,16))),new _t(21,Int32Array.from([6,28,50,72,94]),new Et(28,new mt(4,116),new mt(4,117)),new Et(26,new mt(17,42)),new Et(28,new mt(17,22),new mt(6,23)),new Et(30,new mt(19,16),new mt(6,17))),new _t(22,Int32Array.from([6,26,50,74,98]),new Et(28,new mt(2,111),new mt(7,112)),new Et(28,new mt(17,46)),new Et(30,new mt(7,24),new mt(16,25)),new Et(24,new mt(34,13))),new _t(23,Int32Array.from([6,30,54,78,102]),new Et(30,new mt(4,121),new mt(5,122)),new Et(28,new mt(4,47),new mt(14,48)),new Et(30,new mt(11,24),new mt(14,25)),new Et(30,new mt(16,15),new mt(14,16))),new _t(24,Int32Array.from([6,28,54,80,106]),new Et(30,new mt(6,117),new mt(4,118)),new Et(28,new mt(6,45),new mt(14,46)),new Et(30,new mt(11,24),new mt(16,25)),new Et(30,new mt(30,16),new mt(2,17))),new _t(25,Int32Array.from([6,32,58,84,110]),new Et(26,new mt(8,106),new mt(4,107)),new Et(28,new mt(8,47),new mt(13,48)),new Et(30,new mt(7,24),new mt(22,25)),new Et(30,new mt(22,15),new mt(13,16))),new _t(26,Int32Array.from([6,30,58,86,114]),new Et(28,new mt(10,114),new mt(2,115)),new Et(28,new mt(19,46),new mt(4,47)),new Et(28,new mt(28,22),new mt(6,23)),new Et(30,new mt(33,16),new mt(4,17))),new _t(27,Int32Array.from([6,34,62,90,118]),new Et(30,new mt(8,122),new mt(4,123)),new Et(28,new mt(22,45),new mt(3,46)),new Et(30,new mt(8,23),new mt(26,24)),new Et(30,new mt(12,15),new mt(28,16))),new _t(28,Int32Array.from([6,26,50,74,98,122]),new Et(30,new mt(3,117),new mt(10,118)),new Et(28,new mt(3,45),new mt(23,46)),new Et(30,new mt(4,24),new mt(31,25)),new Et(30,new mt(11,15),new mt(31,16))),new _t(29,Int32Array.from([6,30,54,78,102,126]),new Et(30,new mt(7,116),new mt(7,117)),new Et(28,new mt(21,45),new mt(7,46)),new Et(30,new mt(1,23),new mt(37,24)),new Et(30,new mt(19,15),new mt(26,16))),new _t(30,Int32Array.from([6,26,52,78,104,130]),new Et(30,new mt(5,115),new mt(10,116)),new Et(28,new mt(19,47),new mt(10,48)),new Et(30,new mt(15,24),new mt(25,25)),new Et(30,new mt(23,15),new mt(25,16))),new _t(31,Int32Array.from([6,30,56,82,108,134]),new Et(30,new mt(13,115),new mt(3,116)),new Et(28,new mt(2,46),new mt(29,47)),new Et(30,new mt(42,24),new mt(1,25)),new Et(30,new mt(23,15),new mt(28,16))),new _t(32,Int32Array.from([6,34,60,86,112,138]),new Et(30,new mt(17,115)),new Et(28,new mt(10,46),new mt(23,47)),new Et(30,new mt(10,24),new mt(35,25)),new Et(30,new mt(19,15),new mt(35,16))),new _t(33,Int32Array.from([6,30,58,86,114,142]),new Et(30,new mt(17,115),new mt(1,116)),new Et(28,new mt(14,46),new mt(21,47)),new Et(30,new mt(29,24),new mt(19,25)),new Et(30,new mt(11,15),new mt(46,16))),new _t(34,Int32Array.from([6,34,62,90,118,146]),new Et(30,new mt(13,115),new mt(6,116)),new Et(28,new mt(14,46),new mt(23,47)),new Et(30,new mt(44,24),new mt(7,25)),new Et(30,new mt(59,16),new mt(1,17))),new _t(35,Int32Array.from([6,30,54,78,102,126,150]),new Et(30,new mt(12,121),new mt(7,122)),new Et(28,new mt(12,47),new mt(26,48)),new Et(30,new mt(39,24),new mt(14,25)),new Et(30,new mt(22,15),new mt(41,16))),new _t(36,Int32Array.from([6,24,50,76,102,128,154]),new Et(30,new mt(6,121),new mt(14,122)),new Et(28,new mt(6,47),new mt(34,48)),new Et(30,new mt(46,24),new mt(10,25)),new Et(30,new mt(2,15),new mt(64,16))),new _t(37,Int32Array.from([6,28,54,80,106,132,158]),new Et(30,new mt(17,122),new mt(4,123)),new Et(28,new mt(29,46),new mt(14,47)),new Et(30,new mt(49,24),new mt(10,25)),new Et(30,new mt(24,15),new mt(46,16))),new _t(38,Int32Array.from([6,32,58,84,110,136,162]),new Et(30,new mt(4,122),new mt(18,123)),new Et(28,new mt(13,46),new mt(32,47)),new Et(30,new mt(48,24),new mt(14,25)),new Et(30,new mt(42,15),new mt(32,16))),new _t(39,Int32Array.from([6,26,54,82,110,138,166]),new Et(30,new mt(20,117),new mt(4,118)),new Et(28,new mt(40,47),new mt(7,48)),new Et(30,new mt(43,24),new mt(22,25)),new Et(30,new mt(10,15),new mt(67,16))),new _t(40,Int32Array.from([6,30,58,86,114,142,170]),new Et(30,new mt(19,118),new mt(6,119)),new Et(28,new mt(18,47),new mt(31,48)),new Et(30,new mt(34,24),new mt(34,25)),new Et(30,new mt(20,15),new mt(61,16)))];
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var It;(function(e){e[e["DATA_MASK_000"]=0]="DATA_MASK_000";e[e["DATA_MASK_001"]=1]="DATA_MASK_001";e[e["DATA_MASK_010"]=2]="DATA_MASK_010";e[e["DATA_MASK_011"]=3]="DATA_MASK_011";e[e["DATA_MASK_100"]=4]="DATA_MASK_100";e[e["DATA_MASK_101"]=5]="DATA_MASK_101";e[e["DATA_MASK_110"]=6]="DATA_MASK_110";e[e["DATA_MASK_111"]=7]="DATA_MASK_111"})(It||(It={}));class St{constructor(e,t){this.value=e;this.isMasked=t}unmaskBitMatrix(e,t){for(let r=0;r<t;r++){for(let n=0;n<t;n++){if(this.isMasked(r,n)){e.flip(n,r)}}}}}St.values=new Map([[It.DATA_MASK_000,new St(It.DATA_MASK_000,(e,t)=>(e+t&1)===0)],[It.DATA_MASK_001,new St(It.DATA_MASK_001,(e,t)=>(e&1)===0)],[It.DATA_MASK_010,new St(It.DATA_MASK_010,(e,t)=>t%3===0)],[It.DATA_MASK_011,new St(It.DATA_MASK_011,(e,t)=>(e+t)%3===0)],[It.DATA_MASK_100,new St(It.DATA_MASK_100,(e,t)=>(Math.floor(e/2)+Math.floor(t/3)&1)===0)],[It.DATA_MASK_101,new St(It.DATA_MASK_101,(e,t)=>e*t%6===0)],[It.DATA_MASK_110,new St(It.DATA_MASK_110,(e,t)=>e*t%6<3)],[It.DATA_MASK_111,new St(It.DATA_MASK_111,(e,t)=>(e+t+e*t%3&1)===0)]]);
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class pt{constructor(e){const t=e.getHeight();if(t<21||(t&3)!==1){throw new _}this.bitMatrix=e}readFormatInformation(){if(this.parsedFormatInfo!==null&&this.parsedFormatInfo!==undefined){return this.parsedFormatInfo}let e=0;for(let t=0;t<6;t++){e=this.copyBit(t,8,e)}e=this.copyBit(7,8,e);e=this.copyBit(8,8,e);e=this.copyBit(8,7,e);for(let t=5;t>=0;t--){e=this.copyBit(8,t,e)}const t=this.bitMatrix.getHeight();let r=0;const n=t-7;for(let e=t-1;e>=n;e--){r=this.copyBit(8,e,r)}for(let e=t-8;e<t;e++){r=this.copyBit(e,8,r)}this.parsedFormatInfo=Ct.decodeFormatInformation(e,r);if(this.parsedFormatInfo!==null){return this.parsedFormatInfo}throw new _}readVersion(){if(this.parsedVersion!==null&&this.parsedVersion!==undefined){return this.parsedVersion}const e=this.bitMatrix.getHeight();const t=Math.floor((e-17)/4);if(t<=6){return _t.getVersionForNumber(t)}let r=0;const n=e-11;for(let t=5;t>=0;t--){for(let i=e-9;i>=n;i--){r=this.copyBit(i,t,r)}}let i=_t.decodeVersionInformation(r);if(i!==null&&i.getDimensionForVersion()===e){this.parsedVersion=i;return i}r=0;for(let t=5;t>=0;t--){for(let i=e-9;i>=n;i--){r=this.copyBit(t,i,r)}}i=_t.decodeVersionInformation(r);if(i!==null&&i.getDimensionForVersion()===e){this.parsedVersion=i;return i}throw new _}copyBit(e,t,r){const n=this.isMirror?this.bitMatrix.get(t,e):this.bitMatrix.get(e,t);return n?r<<1|1:r<<1}readCodewords(){const e=this.readFormatInformation();const t=this.readVersion();const r=St.values.get(e.getDataMask());const n=this.bitMatrix.getHeight();r.unmaskBitMatrix(this.bitMatrix,n);const i=t.buildFunctionPattern();let s=true;const o=new Uint8Array(t.getTotalCodewords());let a=0;let l=0;let h=0;for(let e=n-1;e>0;e-=2){if(e===6){e--}for(let t=0;t<n;t++){const r=s?n-1-t:t;for(let t=0;t<2;t++){if(!i.get(e-t,r)){h++;l<<=1;if(this.bitMatrix.get(e-t,r)){l|=1}if(h===8){o[a++]=l;h=0;l=0}}}}s=!s}if(a!==t.getTotalCodewords()){throw new _}return o}remask(){if(this.parsedFormatInfo===null){return}const e=St.values[this.parsedFormatInfo.getDataMask()];const t=this.bitMatrix.getHeight();e.unmaskBitMatrix(this.bitMatrix,t)}setMirror(e){this.parsedVersion=null;this.parsedFormatInfo=null;this.isMirror=e}mirror(){const e=this.bitMatrix;for(let t=0,r=e.getWidth();t<r;t++){for(let r=t+1,n=e.getHeight();r<n;r++){if(e.get(t,r)!==e.get(r,t)){e.flip(r,t);e.flip(t,r)}}}}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Tt{constructor(e,t){this.numDataCodewords=e;this.codewords=t}static getDataBlocks(e,t,r){if(e.length!==t.getTotalCodewords()){throw new l}const n=t.getECBlocksForLevel(r);let i=0;const s=n.getECBlocks();for(const e of s){i+=e.getCount()}const o=new Array(i);let a=0;for(const e of s){for(let t=0;t<e.getCount();t++){const t=e.getDataCodewords();const r=n.getECCodewordsPerBlock()+t;o[a++]=new Tt(t,new Uint8Array(r))}}const h=o[0].codewords.length;let c=o.length-1;while(c>=0){const e=o[c].codewords.length;if(e===h){break}c--}c++;const u=h-n.getECCodewordsPerBlock();let d=0;for(let t=0;t<u;t++){for(let r=0;r<a;r++){o[r].codewords[t]=e[d++]}}for(let t=c;t<a;t++){o[t].codewords[u]=e[d++]}const f=o[0].codewords.length;for(let t=u;t<f;t++){for(let r=0;r<a;r++){const n=r<c?t:t+1;o[r].codewords[n]=e[d++]}}return o}getNumDataCodewords(){return this.numDataCodewords}getCodewords(){return this.codewords}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var Rt;(function(e){e[e["TERMINATOR"]=0]="TERMINATOR";e[e["NUMERIC"]=1]="NUMERIC";e[e["ALPHANUMERIC"]=2]="ALPHANUMERIC";e[e["STRUCTURED_APPEND"]=3]="STRUCTURED_APPEND";e[e["BYTE"]=4]="BYTE";e[e["ECI"]=5]="ECI";e[e["KANJI"]=6]="KANJI";e[e["FNC1_FIRST_POSITION"]=7]="FNC1_FIRST_POSITION";e[e["FNC1_SECOND_POSITION"]=8]="FNC1_SECOND_POSITION";e[e["HANZI"]=9]="HANZI"})(Rt||(Rt={}));class Nt{constructor(e,t,r,n){this.value=e;this.stringValue=t;this.characterCountBitsForVersions=r;this.bits=n;Nt.FOR_BITS.set(n,this);Nt.FOR_VALUE.set(e,this)}static forBits(e){const t=Nt.FOR_BITS.get(e);if(undefined===t){throw new l}return t}getCharacterCountBits(e){const t=e.getVersionNumber();let r;if(t<=9){r=0}else if(t<=26){r=1}else{r=2}return this.characterCountBitsForVersions[r]}getValue(){return this.value}getBits(){return this.bits}equals(e){if(!(e instanceof Nt)){return false}const t=e;return this.value===t.value}toString(){return this.stringValue}}Nt.FOR_BITS=new Map;Nt.FOR_VALUE=new Map;Nt.TERMINATOR=new Nt(Rt.TERMINATOR,"TERMINATOR",Int32Array.from([0,0,0]),0);Nt.NUMERIC=new Nt(Rt.NUMERIC,"NUMERIC",Int32Array.from([10,12,14]),1);Nt.ALPHANUMERIC=new Nt(Rt.ALPHANUMERIC,"ALPHANUMERIC",Int32Array.from([9,11,13]),2);Nt.STRUCTURED_APPEND=new Nt(Rt.STRUCTURED_APPEND,"STRUCTURED_APPEND",Int32Array.from([0,0,0]),3);Nt.BYTE=new Nt(Rt.BYTE,"BYTE",Int32Array.from([8,16,16]),4);Nt.ECI=new Nt(Rt.ECI,"ECI",Int32Array.from([0,0,0]),7);Nt.KANJI=new Nt(Rt.KANJI,"KANJI",Int32Array.from([8,10,12]),8);Nt.FNC1_FIRST_POSITION=new Nt(Rt.FNC1_FIRST_POSITION,"FNC1_FIRST_POSITION",Int32Array.from([0,0,0]),5);Nt.FNC1_SECOND_POSITION=new Nt(Rt.FNC1_SECOND_POSITION,"FNC1_SECOND_POSITION",Int32Array.from([0,0,0]),9);Nt.HANZI=new Nt(Rt.HANZI,"HANZI",Int32Array.from([8,10,12]),13);
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class yt{static decode(e,t,r,n){const i=new lt(e);let s=new N;const o=new Array;let a=-1;let l=-1;try{let e=null;let r=false;let h;do{if(i.available()<4){h=Nt.TERMINATOR}else{const e=i.readBits(4);h=Nt.forBits(e)}switch(h){case Nt.TERMINATOR:break;case Nt.FNC1_FIRST_POSITION:case Nt.FNC1_SECOND_POSITION:r=true;break;case Nt.STRUCTURED_APPEND:if(i.available()<16){throw new _}a=i.readBits(8);l=i.readBits(8);break;case Nt.ECI:const c=yt.parseECIValue(i);e=S.getCharacterSetECIByValue(c);if(e===null){throw new _}break;case Nt.HANZI:const u=i.readBits(4);const d=i.readBits(h.getCharacterCountBits(t));if(u===yt.GB2312_SUBSET){yt.decodeHanziSegment(i,s,d)}break;default:const f=i.readBits(h.getCharacterCountBits(t));switch(h){case Nt.NUMERIC:yt.decodeNumericSegment(i,s,f);break;case Nt.ALPHANUMERIC:yt.decodeAlphanumericSegment(i,s,f,r);break;case Nt.BYTE:yt.decodeByteSegment(i,s,f,e,o,n);break;case Nt.KANJI:yt.decodeKanjiSegment(i,s,f);break;default:throw new _}break}}while(h!==Nt.TERMINATOR)}catch(e){throw new _}return new G(e,s.toString(),o.length===0?null:o,r===null?null:r.toString(),a,l)}static decodeHanziSegment(e,t,r){if(r*13>e.available()){throw new _}const n=new Uint8Array(2*r);let i=0;while(r>0){const t=e.readBits(13);let s=t/96<<8&4294967295|t%96;if(s<959){s+=41377}else{s+=42657}n[i]=s>>8&255;n[i+1]=s&255;i+=2;r--}try{t.append(T.decode(n,R.GB2312))}catch(e){throw new _(e)}}static decodeKanjiSegment(e,t,r){if(r*13>e.available()){throw new _}const n=new Uint8Array(2*r);let i=0;while(r>0){const t=e.readBits(13);let s=t/192<<8&4294967295|t%192;if(s<7936){s+=33088}else{s+=49472}n[i]=s>>8;n[i+1]=s;i+=2;r--}try{t.append(T.decode(n,R.SHIFT_JIS))}catch(e){throw new _(e)}}static decodeByteSegment(e,t,r,n,i,s){if(8*r>e.available()){throw new _}const o=new Uint8Array(r);for(let t=0;t<r;t++){o[t]=e.readBits(8)}let a;if(n===null){a=R.guessEncoding(o,s)}else{a=n.getName()}try{t.append(T.decode(o,a))}catch(e){throw new _(e)}i.push(o)}static toAlphaNumericChar(e){if(e>=yt.ALPHANUMERIC_CHARS.length){throw new _}return yt.ALPHANUMERIC_CHARS[e]}static decodeAlphanumericSegment(e,t,r,n){const i=t.length();while(r>1){if(e.available()<11){throw new _}const n=e.readBits(11);t.append(yt.toAlphaNumericChar(Math.floor(n/45)));t.append(yt.toAlphaNumericChar(n%45));r-=2}if(r===1){if(e.available()<6){throw new _}t.append(yt.toAlphaNumericChar(e.readBits(6)))}if(n){for(let e=i;e<t.length();e++){if(t.charAt(e)==="%"){if(e<t.length()-1&&t.charAt(e+1)==="%"){t.deleteCharAt(e+1)}else{t.setCharAt(e,String.fromCharCode(29))}}}}}static decodeNumericSegment(e,t,r){while(r>=3){if(e.available()<10){throw new _}const n=e.readBits(10);if(n>=1e3){throw new _}t.append(yt.toAlphaNumericChar(Math.floor(n/100)));t.append(yt.toAlphaNumericChar(Math.floor(n/10)%10));t.append(yt.toAlphaNumericChar(n%10));r-=3}if(r===2){if(e.available()<7){throw new _}const r=e.readBits(7);if(r>=100){throw new _}t.append(yt.toAlphaNumericChar(Math.floor(r/10)));t.append(yt.toAlphaNumericChar(r%10))}else if(r===1){if(e.available()<4){throw new _}const r=e.readBits(4);if(r>=10){throw new _}t.append(yt.toAlphaNumericChar(r))}}static parseECIValue(e){const t=e.readBits(8);if((t&128)===0){return t&127}if((t&192)===128){const r=e.readBits(8);return(t&63)<<8&4294967295|r}if((t&224)===192){const r=e.readBits(16);return(t&31)<<16&4294967295|r}throw new _}}yt.ALPHANUMERIC_CHARS="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";yt.GB2312_SUBSET=1;
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Dt{constructor(e){this.mirrored=e}isMirrored(){return this.mirrored}applyMirroredCorrection(e){if(!this.mirrored||e===null||e.length<3){return}const t=e[0];e[0]=e[2];e[2]=t}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ot{constructor(){this.rsDecoder=new q(Y.QR_CODE_FIELD_256)}decodeBooleanArray(e,t){return this.decodeBitMatrix(y.parseFromBooleanArray(e),t)}decodeBitMatrix(e,t){const r=new pt(e);let n=null;try{return this.decodeBitMatrixParser(r,t)}catch(e){n=e}try{r.remask();r.setMirror(true);r.readVersion();r.readFormatInformation();r.mirror();const e=this.decodeBitMatrixParser(r,t);e.setOther(new Dt(true));return e}catch(e){if(n!==null){throw n}throw e}}decodeBitMatrixParser(e,t){const r=e.readVersion();const n=e.readFormatInformation().getErrorCorrectionLevel();const i=e.readCodewords();const s=Tt.getDataBlocks(i,r,n);let o=0;for(const e of s){o+=e.getNumDataCodewords()}const a=new Uint8Array(o);let l=0;for(const e of s){const t=e.getCodewords();const r=e.getNumDataCodewords();this.correctErrors(t,r);for(let e=0;e<r;e++){a[l++]=t[e]}}return yt.decode(a,r,n,t)}correctErrors(e,t){const r=new Int32Array(e);try{this.rsDecoder.decode(r,e.length-t)}catch(e){throw new c}for(let n=0;n<t;n++){e[n]=r[n]}}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Mt extends ee{constructor(e,t,r){super(e,t);this.estimatedModuleSize=r}aboutEquals(e,t,r){if(Math.abs(t-this.getY())<=e&&Math.abs(r-this.getX())<=e){const t=Math.abs(e-this.estimatedModuleSize);return t<=1||t<=this.estimatedModuleSize}return false}combineEstimate(e,t,r){const n=(this.getX()+t)/2;const i=(this.getY()+e)/2;const s=(this.estimatedModuleSize+r)/2;return new Mt(n,i,s)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class bt{constructor(e,t,r,n,i,s,o){this.image=e;this.startX=t;this.startY=r;this.width=n;this.height=i;this.moduleSize=s;this.resultPointCallback=o;this.possibleCenters=[];this.crossCheckStateCount=new Int32Array(3)}find(){const e=this.startX;const t=this.height;const r=this.width;const n=e+r;const i=this.startY+t/2;const s=new Int32Array(3);const o=this.image;for(let r=0;r<t;r++){const t=i+((r&1)===0?Math.floor((r+1)/2):-Math.floor((r+1)/2));s[0]=0;s[1]=0;s[2]=0;let a=e;while(a<n&&!o.get(a,t)){a++}let l=0;while(a<n){if(o.get(a,t)){if(l===1){s[1]++}else{if(l===2){if(this.foundPatternCross(s)){const e=this.handlePossibleCenter(s,t,a);if(e!==null){return e}}s[0]=s[2];s[1]=1;s[2]=0;l=1}else{s[++l]++}}}else{if(l===1){l++}s[l]++}a++}if(this.foundPatternCross(s)){const e=this.handlePossibleCenter(s,t,n);if(e!==null){return e}}}if(this.possibleCenters.length!==0){return this.possibleCenters[0]}throw new D}static centerFromEnd(e,t){return t-e[2]-e[1]/2}foundPatternCross(e){const t=this.moduleSize;const r=t/2;for(let n=0;n<3;n++){if(Math.abs(t-e[n])>=r){return false}}return true}crossCheckVertical(e,t,r,n){const i=this.image;const s=i.getHeight();const o=this.crossCheckStateCount;o[0]=0;o[1]=0;o[2]=0;let a=e;while(a>=0&&i.get(t,a)&&o[1]<=r){o[1]++;a--}if(a<0||o[1]>r){return NaN}while(a>=0&&!i.get(t,a)&&o[0]<=r){o[0]++;a--}if(o[0]>r){return NaN}a=e+1;while(a<s&&i.get(t,a)&&o[1]<=r){o[1]++;a++}if(a===s||o[1]>r){return NaN}while(a<s&&!i.get(t,a)&&o[2]<=r){o[2]++;a++}if(o[2]>r){return NaN}const l=o[0]+o[1]+o[2];if(5*Math.abs(l-n)>=2*n){return NaN}return this.foundPatternCross(o)?bt.centerFromEnd(o,a):NaN}handlePossibleCenter(e,t,r){const n=e[0]+e[1]+e[2];const i=bt.centerFromEnd(e,r);const s=this.crossCheckVertical(t,i,2*e[1],n);if(!isNaN(s)){const t=(e[0]+e[1]+e[2])/3;for(const e of this.possibleCenters){if(e.aboutEquals(t,s,i)){return e.combineEstimate(s,i,t)}}const r=new Mt(i,s,t);this.possibleCenters.push(r);if(this.resultPointCallback!==null&&this.resultPointCallback!==undefined){this.resultPointCallback.foundPossibleResultPoint(r)}}return null}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Bt extends ee{constructor(e,t,r,n){super(e,t);this.estimatedModuleSize=r;this.count=n;if(undefined===n){this.count=1}}getEstimatedModuleSize(){return this.estimatedModuleSize}getCount(){return this.count}aboutEquals(e,t,r){if(Math.abs(t-this.getY())<=e&&Math.abs(r-this.getX())<=e){const t=Math.abs(e-this.estimatedModuleSize);return t<=1||t<=this.estimatedModuleSize}return false}combineEstimate(e,t,r){const n=this.count+1;const i=(this.count*this.getX()+t)/n;const s=(this.count*this.getY()+e)/n;const o=(this.count*this.estimatedModuleSize+r)/n;return new Bt(i,s,o,n)}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Pt{constructor(e){this.bottomLeft=e[0];this.topLeft=e[1];this.topRight=e[2]}getBottomLeft(){return this.bottomLeft}getTopLeft(){return this.topLeft}getTopRight(){return this.topRight}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Lt{constructor(e,t){this.image=e;this.resultPointCallback=t;this.possibleCenters=[];this.crossCheckStateCount=new Int32Array(5);this.resultPointCallback=t}getImage(){return this.image}getPossibleCenters(){return this.possibleCenters}find(e){const t=e!==null&&e!==undefined&&undefined!==e.get(m.TRY_HARDER);const r=e!==null&&e!==undefined&&undefined!==e.get(m.PURE_BARCODE);const n=this.image;const i=n.getHeight();const s=n.getWidth();let o=Math.floor(3*i/(4*Lt.MAX_MODULES));if(o<Lt.MIN_SKIP||t){o=Lt.MIN_SKIP}let a=false;const l=new Int32Array(5);for(let e=o-1;e<i&&!a;e+=o){l[0]=0;l[1]=0;l[2]=0;l[3]=0;l[4]=0;let t=0;for(let i=0;i<s;i++){if(n.get(i,e)){if((t&1)===1){t++}l[t]++}else{if((t&1)===0){if(t===4){if(Lt.foundPatternCross(l)){const n=this.handlePossibleCenter(l,e,i,r);if(n===true){o=2;if(this.hasSkipped===true){a=this.haveMultiplyConfirmedCenters()}else{const t=this.findRowSkip();if(t>l[2]){e+=t-l[2]-o;i=s-1}}}else{l[0]=l[2];l[1]=l[3];l[2]=l[4];l[3]=1;l[4]=0;t=3;continue}t=0;l[0]=0;l[1]=0;l[2]=0;l[3]=0;l[4]=0}else{l[0]=l[2];l[1]=l[3];l[2]=l[4];l[3]=1;l[4]=0;t=3}}else{l[++t]++}}else{l[t]++}}}if(Lt.foundPatternCross(l)){const t=this.handlePossibleCenter(l,e,s,r);if(t===true){o=l[0];if(this.hasSkipped){a=this.haveMultiplyConfirmedCenters()}}}}const h=this.selectBestPatterns();ee.orderBestPatterns(h);return new Pt(h)}static centerFromEnd(e,t){return t-e[4]-e[3]-e[2]/2}static foundPatternCross(e){let t=0;for(let r=0;r<5;r++){const n=e[r];if(n===0){return false}t+=n}if(t<7){return false}const r=t/7;const n=r/2;return Math.abs(r-e[0])<n&&Math.abs(r-e[1])<n&&Math.abs(3*r-e[2])<3*n&&Math.abs(r-e[3])<n&&Math.abs(r-e[4])<n}getCrossCheckStateCount(){const e=this.crossCheckStateCount;e[0]=0;e[1]=0;e[2]=0;e[3]=0;e[4]=0;return e}crossCheckDiagonal(e,t,r,n){const i=this.getCrossCheckStateCount();let s=0;const o=this.image;while(e>=s&&t>=s&&o.get(t-s,e-s)){i[2]++;s++}if(e<s||t<s){return false}while(e>=s&&t>=s&&!o.get(t-s,e-s)&&i[1]<=r){i[1]++;s++}if(e<s||t<s||i[1]>r){return false}while(e>=s&&t>=s&&o.get(t-s,e-s)&&i[0]<=r){i[0]++;s++}if(i[0]>r){return false}const a=o.getHeight();const l=o.getWidth();s=1;while(e+s<a&&t+s<l&&o.get(t+s,e+s)){i[2]++;s++}if(e+s>=a||t+s>=l){return false}while(e+s<a&&t+s<l&&!o.get(t+s,e+s)&&i[3]<r){i[3]++;s++}if(e+s>=a||t+s>=l||i[3]>=r){return false}while(e+s<a&&t+s<l&&o.get(t+s,e+s)&&i[4]<r){i[4]++;s++}if(i[4]>=r){return false}const h=i[0]+i[1]+i[2]+i[3]+i[4];return Math.abs(h-n)<2*n&&Lt.foundPatternCross(i)}crossCheckVertical(e,t,r,n){const i=this.image;const s=i.getHeight();const o=this.getCrossCheckStateCount();let a=e;while(a>=0&&i.get(t,a)){o[2]++;a--}if(a<0){return NaN}while(a>=0&&!i.get(t,a)&&o[1]<=r){o[1]++;a--}if(a<0||o[1]>r){return NaN}while(a>=0&&i.get(t,a)&&o[0]<=r){o[0]++;a--}if(o[0]>r){return NaN}a=e+1;while(a<s&&i.get(t,a)){o[2]++;a++}if(a===s){return NaN}while(a<s&&!i.get(t,a)&&o[3]<r){o[3]++;a++}if(a===s||o[3]>=r){return NaN}while(a<s&&i.get(t,a)&&o[4]<r){o[4]++;a++}if(o[4]>=r){return NaN}const l=o[0]+o[1]+o[2]+o[3]+o[4];if(5*Math.abs(l-n)>=2*n){return NaN}return Lt.foundPatternCross(o)?Lt.centerFromEnd(o,a):NaN}crossCheckHorizontal(e,t,r,n){const i=this.image;const s=i.getWidth();const o=this.getCrossCheckStateCount();let a=e;while(a>=0&&i.get(a,t)){o[2]++;a--}if(a<0){return NaN}while(a>=0&&!i.get(a,t)&&o[1]<=r){o[1]++;a--}if(a<0||o[1]>r){return NaN}while(a>=0&&i.get(a,t)&&o[0]<=r){o[0]++;a--}if(o[0]>r){return NaN}a=e+1;while(a<s&&i.get(a,t)){o[2]++;a++}if(a===s){return NaN}while(a<s&&!i.get(a,t)&&o[3]<r){o[3]++;a++}if(a===s||o[3]>=r){return NaN}while(a<s&&i.get(a,t)&&o[4]<r){o[4]++;a++}if(o[4]>=r){return NaN}const l=o[0]+o[1]+o[2]+o[3]+o[4];if(5*Math.abs(l-n)>=n){return NaN}return Lt.foundPatternCross(o)?Lt.centerFromEnd(o,a):NaN}handlePossibleCenter(e,t,r,n){const i=e[0]+e[1]+e[2]+e[3]+e[4];let s=Lt.centerFromEnd(e,r);let o=this.crossCheckVertical(t,Math.floor(s),e[2],i);if(!isNaN(o)){s=this.crossCheckHorizontal(Math.floor(s),Math.floor(o),e[2],i);if(!isNaN(s)&&(!n||this.crossCheckDiagonal(Math.floor(o),Math.floor(s),e[2],i))){const e=i/7;let t=false;const r=this.possibleCenters;for(let n=0,i=r.length;n<i;n++){const i=r[n];if(i.aboutEquals(e,o,s)){r[n]=i.combineEstimate(o,s,e);t=true;break}}if(!t){const t=new Bt(s,o,e);r.push(t);if(this.resultPointCallback!==null&&this.resultPointCallback!==undefined){this.resultPointCallback.foundPossibleResultPoint(t)}}return true}}return false}findRowSkip(){const e=this.possibleCenters.length;if(e<=1){return 0}let t=null;for(const e of this.possibleCenters){if(e.getCount()>=Lt.CENTER_QUORUM){if(t==null){t=e}else{this.hasSkipped=true;return Math.floor((Math.abs(t.getX()-e.getX())-Math.abs(t.getY()-e.getY()))/2)}}}return 0}haveMultiplyConfirmedCenters(){let e=0;let t=0;const r=this.possibleCenters.length;for(const r of this.possibleCenters){if(r.getCount()>=Lt.CENTER_QUORUM){e++;t+=r.getEstimatedModuleSize()}}if(e<3){return false}const n=t/r;let i=0;for(const e of this.possibleCenters){i+=Math.abs(e.getEstimatedModuleSize()-n)}return i<=.05*t}selectBestPatterns(){const e=this.possibleCenters.length;if(e<3){throw new D}const t=this.possibleCenters;let r;if(e>3){let n=0;let i=0;for(const e of this.possibleCenters){const t=e.getEstimatedModuleSize();n+=t;i+=t*t}r=n/e;let s=Math.sqrt(i/e-r*r);t.sort((e,t)=>{const n=Math.abs(t.getEstimatedModuleSize()-r);const i=Math.abs(e.getEstimatedModuleSize()-r);return n<i?-1:n>i?1:0});const o=Math.max(.2*r,s);for(let e=0;e<t.length&&t.length>3;e++){const n=t[e];if(Math.abs(n.getEstimatedModuleSize()-r)>o){t.splice(e,1);e--}}}if(t.length>3){let e=0;for(const r of t){e+=r.getEstimatedModuleSize()}r=e/t.length;t.sort((e,t)=>{if(t.getCount()===e.getCount()){const n=Math.abs(t.getEstimatedModuleSize()-r);const i=Math.abs(e.getEstimatedModuleSize()-r);return n<i?1:n>i?-1:0}else{return t.getCount()-e.getCount()}});t.splice(3)}return[t[0],t[1],t[2]]}}Lt.CENTER_QUORUM=2;Lt.MIN_SKIP=3;Lt.MAX_MODULES=57;
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ft{constructor(e){this.image=e}getImage(){return this.image}getResultPointCallback(){return this.resultPointCallback}detect(e){this.resultPointCallback=e===null||e===undefined?null:e.get(m.NEED_RESULT_POINT_CALLBACK);const t=new Lt(this.image,this.resultPointCallback);const r=t.find(e);return this.processFinderPatternInfo(r)}processFinderPatternInfo(e){const t=e.getTopLeft();const r=e.getTopRight();const n=e.getBottomLeft();const i=this.calculateModuleSize(t,r,n);if(i<1){throw new D("No pattern found in proccess finder.")}const s=Ft.computeDimension(t,r,n,i);const o=_t.getProvisionalVersionForDimension(s);const a=o.getDimensionForVersion()-7;let l=null;if(o.getAlignmentPatternCenters().length>0){const e=r.getX()-t.getX()+n.getX();const s=r.getY()-t.getY()+n.getY();const o=1-3/a;const h=Math.floor(t.getX()+o*(e-t.getX()));const c=Math.floor(t.getY()+o*(s-t.getY()));for(let e=4;e<=16;e<<=1){try{l=this.findAlignmentInRegion(i,h,c,e);break}catch(e){if(!(e instanceof D)){throw e}}}}const h=Ft.createTransform(t,r,n,l,s);const c=Ft.sampleGrid(this.image,h,s);let u;if(l===null){u=[n,t,r]}else{u=[n,t,r,l]}return new te(c,u)}static createTransform(e,t,r,n,i){const s=i-3.5;let o;let a;let l;let h;if(n!==null){o=n.getX();a=n.getY();l=s-3;h=l}else{o=t.getX()-e.getX()+r.getX();a=t.getY()-e.getY()+r.getY();l=s;h=s}return se.quadrilateralToQuadrilateral(3.5,3.5,s,3.5,l,h,3.5,s,e.getX(),e.getY(),t.getX(),t.getY(),o,a,r.getX(),r.getY())}static sampleGrid(e,t,r){const n=ae.getInstance();return n.sampleGridWithTransform(e,r,r,t)}static computeDimension(e,t,r,n){const i=J.round(ee.distance(e,t)/n);const s=J.round(ee.distance(e,r)/n);let o=Math.floor((i+s)/2)+7;switch(o&3){case 0:o++;break;case 2:o--;break;case 3:throw new D("Dimensions could be not found.")}return o}calculateModuleSize(e,t,r){return(this.calculateModuleSizeOneWay(e,t)+this.calculateModuleSizeOneWay(e,r))/2}calculateModuleSizeOneWay(e,t){const r=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(e.getX()),Math.floor(e.getY()),Math.floor(t.getX()),Math.floor(t.getY()));const n=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(t.getX()),Math.floor(t.getY()),Math.floor(e.getX()),Math.floor(e.getY()));if(isNaN(r)){return n/7}if(isNaN(n)){return r/7}return(r+n)/14}sizeOfBlackWhiteBlackRunBothWays(e,t,r,n){let i=this.sizeOfBlackWhiteBlackRun(e,t,r,n);let s=1;let o=e-(r-e);if(o<0){s=e/(e-o);o=0}else if(o>=this.image.getWidth()){s=(this.image.getWidth()-1-e)/(o-e);o=this.image.getWidth()-1}let a=Math.floor(t-(n-t)*s);s=1;if(a<0){s=t/(t-a);a=0}else if(a>=this.image.getHeight()){s=(this.image.getHeight()-1-t)/(a-t);a=this.image.getHeight()-1}o=Math.floor(e+(o-e)*s);i+=this.sizeOfBlackWhiteBlackRun(e,t,o,a);return i-1}sizeOfBlackWhiteBlackRun(e,t,r,n){const i=Math.abs(n-t)>Math.abs(r-e);if(i){let i=e;e=t;t=i;i=r;r=n;n=i}const s=Math.abs(r-e);const o=Math.abs(n-t);let a=-s/2;const l=e<r?1:-1;const h=t<n?1:-1;let c=0;const u=r+l;for(let r=e,d=t;r!==u;r+=l){const l=i?d:r;const u=i?r:d;if(c===1===this.image.get(l,u)){if(c===2){return J.distance(r,d,e,t)}c++}a+=o;if(a>0){if(d===n){break}d+=h;a-=s}}if(c===2){return J.distance(r+l,n,e,t)}return NaN}findAlignmentInRegion(e,t,r,n){const i=Math.floor(n*e);const s=Math.max(0,t-i);const o=Math.min(this.image.getWidth()-1,t+i);if(o-s<e*3){throw new D("Alignment top exceeds estimated module size.")}const a=Math.max(0,r-i);const l=Math.min(this.image.getHeight()-1,r+i);if(l-a<e*3){throw new D("Alignment bottom exceeds estimated module size.")}const h=new bt(this.image,s,a,o-s,l-a,e,this.resultPointCallback);return h.find()}}
/*
     * Copyright 2007 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class kt{constructor(){this.decoder=new Ot}getDecoder(){return this.decoder}decode(e,t){let r;let n;if(t!==undefined&&t!==null&&undefined!==t.get(m.PURE_BARCODE)){const i=kt.extractPureBits(e.getBlackMatrix());r=this.decoder.decodeBitMatrix(i,t);n=kt.NO_POINTS}else{const i=new Ft(e.getBlackMatrix()).detect(t);r=this.decoder.decodeBitMatrix(i.getBits(),t);n=i.getPoints()}if(r.getOther()instanceof Dt){r.getOther().applyMirroredCorrection(n)}const i=new v(r.getText(),r.getRawBytes(),undefined,n,V.QR_CODE,undefined);const s=r.getByteSegments();if(s!==null){i.putMetadata(H.BYTE_SEGMENTS,s)}const o=r.getECLevel();if(o!==null){i.putMetadata(H.ERROR_CORRECTION_LEVEL,o)}if(r.hasStructuredAppend()){i.putMetadata(H.STRUCTURED_APPEND_SEQUENCE,r.getStructuredAppendSequenceNumber());i.putMetadata(H.STRUCTURED_APPEND_PARITY,r.getStructuredAppendParity())}return i}reset(){}static extractPureBits(e){const t=e.getTopLeftOnBit();const r=e.getBottomRightOnBit();if(t===null||r===null){throw new D}const n=this.moduleSize(t,e);let i=t[1];let s=r[1];let o=t[0];let a=r[0];if(o>=a||i>=s){throw new D}if(s-i!==a-o){a=o+(s-i);if(a>=e.getWidth()){throw new D}}const l=Math.round((a-o+1)/n);const h=Math.round((s-i+1)/n);if(l<=0||h<=0){throw new D}if(h!==l){throw new D}const c=Math.floor(n/2);i+=c;o+=c;const u=o+Math.floor((l-1)*n)-a;if(u>0){if(u>c){throw new D}o-=u}const d=i+Math.floor((h-1)*n)-s;if(d>0){if(d>c){throw new D}i-=d}const f=new y(l,h);for(let t=0;t<h;t++){const r=i+Math.floor(t*n);for(let i=0;i<l;i++){if(e.get(o+Math.floor(i*n),r)){f.set(i,t)}}}return f}static moduleSize(e,t){const r=t.getHeight();const n=t.getWidth();let i=e[0];let s=e[1];let o=true;let a=0;while(i<n&&s<r){if(o!==t.get(i,s)){if(++a===5){break}o=!o}i++;s++}if(i===n||s===r){throw new D}return(i-e[0])/7}}kt.NO_POINTS=new Array;
/*
    * Copyright 2009 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class vt{PDF417Common(){}static getBitCountSum(e){return J.sum(e)}static toIntArray(e){if(e==null||!e.length){return vt.EMPTY_INT_ARRAY}const t=new Int32Array(e.length);let r=0;for(const n of e){t[r++]=n}return t}static getCodeword(e){const t=w.binarySearch(vt.SYMBOL_TABLE,e&262143);if(t<0){return-1}return(vt.CODEWORD_TABLE[t]-1)%vt.NUMBER_OF_CODEWORDS}}vt.NUMBER_OF_CODEWORDS=929;vt.MAX_CODEWORDS_IN_BARCODE=vt.NUMBER_OF_CODEWORDS-1;vt.MIN_ROWS_IN_BARCODE=3;vt.MAX_ROWS_IN_BARCODE=90;vt.MODULES_IN_CODEWORD=17;vt.MODULES_IN_STOP_PATTERN=18;vt.BARS_IN_MODULE=8;vt.EMPTY_INT_ARRAY=new Int32Array([]);vt.SYMBOL_TABLE=Int32Array.from([66142,66170,66206,66236,66290,66292,66350,66382,66396,66454,66470,66476,66594,66600,66614,66626,66628,66632,66640,66654,66662,66668,66682,66690,66718,66720,66748,66758,66776,66798,66802,66804,66820,66824,66832,66846,66848,66876,66880,66936,66950,66956,66968,66992,67006,67022,67036,67042,67044,67048,67062,67118,67150,67164,67214,67228,67256,67294,67322,67350,67366,67372,67398,67404,67416,67438,67474,67476,67490,67492,67496,67510,67618,67624,67650,67656,67664,67678,67686,67692,67706,67714,67716,67728,67742,67744,67772,67782,67788,67800,67822,67826,67828,67842,67848,67870,67872,67900,67904,67960,67974,67992,68016,68030,68046,68060,68066,68068,68072,68086,68104,68112,68126,68128,68156,68160,68216,68336,68358,68364,68376,68400,68414,68448,68476,68494,68508,68536,68546,68548,68552,68560,68574,68582,68588,68654,68686,68700,68706,68708,68712,68726,68750,68764,68792,68802,68804,68808,68816,68830,68838,68844,68858,68878,68892,68920,68976,68990,68994,68996,69e3,69008,69022,69024,69052,69062,69068,69080,69102,69106,69108,69142,69158,69164,69190,69208,69230,69254,69260,69272,69296,69310,69326,69340,69386,69394,69396,69410,69416,69430,69442,69444,69448,69456,69470,69478,69484,69554,69556,69666,69672,69698,69704,69712,69726,69754,69762,69764,69776,69790,69792,69820,69830,69836,69848,69870,69874,69876,69890,69918,69920,69948,69952,70008,70022,70040,70064,70078,70094,70108,70114,70116,70120,70134,70152,70174,70176,70264,70384,70412,70448,70462,70496,70524,70542,70556,70584,70594,70600,70608,70622,70630,70636,70664,70672,70686,70688,70716,70720,70776,70896,71136,71180,71192,71216,71230,71264,71292,71360,71416,71452,71480,71536,71550,71554,71556,71560,71568,71582,71584,71612,71622,71628,71640,71662,71726,71732,71758,71772,71778,71780,71784,71798,71822,71836,71864,71874,71880,71888,71902,71910,71916,71930,71950,71964,71992,72048,72062,72066,72068,72080,72094,72096,72124,72134,72140,72152,72174,72178,72180,72206,72220,72248,72304,72318,72416,72444,72456,72464,72478,72480,72508,72512,72568,72588,72600,72624,72638,72654,72668,72674,72676,72680,72694,72726,72742,72748,72774,72780,72792,72814,72838,72856,72880,72894,72910,72924,72930,72932,72936,72950,72966,72972,72984,73008,73022,73056,73084,73102,73116,73144,73156,73160,73168,73182,73190,73196,73210,73226,73234,73236,73250,73252,73256,73270,73282,73284,73296,73310,73318,73324,73346,73348,73352,73360,73374,73376,73404,73414,73420,73432,73454,73498,73518,73522,73524,73550,73564,73570,73572,73576,73590,73800,73822,73858,73860,73872,73886,73888,73916,73944,73970,73972,73992,74014,74016,74044,74048,74104,74118,74136,74160,74174,74210,74212,74216,74230,74244,74256,74270,74272,74360,74480,74502,74508,74544,74558,74592,74620,74638,74652,74680,74690,74696,74704,74726,74732,74782,74784,74812,74992,75232,75288,75326,75360,75388,75456,75512,75576,75632,75646,75650,75652,75664,75678,75680,75708,75718,75724,75736,75758,75808,75836,75840,75896,76016,76256,76736,76824,76848,76862,76896,76924,76992,77048,77296,77340,77368,77424,77438,77536,77564,77572,77576,77584,77600,77628,77632,77688,77702,77708,77720,77744,77758,77774,77788,77870,77902,77916,77922,77928,77966,77980,78008,78018,78024,78032,78046,78060,78074,78094,78136,78192,78206,78210,78212,78224,78238,78240,78268,78278,78284,78296,78322,78324,78350,78364,78448,78462,78560,78588,78600,78622,78624,78652,78656,78712,78726,78744,78768,78782,78798,78812,78818,78820,78824,78838,78862,78876,78904,78960,78974,79072,79100,79296,79352,79368,79376,79390,79392,79420,79424,79480,79600,79628,79640,79664,79678,79712,79740,79772,79800,79810,79812,79816,79824,79838,79846,79852,79894,79910,79916,79942,79948,79960,79982,79988,80006,80024,80048,80062,80078,80092,80098,80100,80104,80134,80140,80176,80190,80224,80252,80270,80284,80312,80328,80336,80350,80358,80364,80378,80390,80396,80408,80432,80446,80480,80508,80576,80632,80654,80668,80696,80752,80766,80776,80784,80798,80800,80828,80844,80856,80878,80882,80884,80914,80916,80930,80932,80936,80950,80962,80968,80976,80990,80998,81004,81026,81028,81040,81054,81056,81084,81094,81100,81112,81134,81154,81156,81160,81168,81182,81184,81212,81216,81272,81286,81292,81304,81328,81342,81358,81372,81380,81384,81398,81434,81454,81458,81460,81486,81500,81506,81508,81512,81526,81550,81564,81592,81602,81604,81608,81616,81630,81638,81644,81702,81708,81722,81734,81740,81752,81774,81778,81780,82050,82078,82080,82108,82180,82184,82192,82206,82208,82236,82240,82296,82316,82328,82352,82366,82402,82404,82408,82440,82448,82462,82464,82492,82496,82552,82672,82694,82700,82712,82736,82750,82784,82812,82830,82882,82884,82888,82896,82918,82924,82952,82960,82974,82976,83004,83008,83064,83184,83424,83468,83480,83504,83518,83552,83580,83648,83704,83740,83768,83824,83838,83842,83844,83848,83856,83872,83900,83910,83916,83928,83950,83984,84e3,84028,84032,84088,84208,84448,84928,85040,85054,85088,85116,85184,85240,85488,85560,85616,85630,85728,85756,85764,85768,85776,85790,85792,85820,85824,85880,85894,85900,85912,85936,85966,85980,86048,86080,86136,86256,86496,86976,88160,88188,88256,88312,88560,89056,89200,89214,89312,89340,89536,89592,89608,89616,89632,89664,89720,89840,89868,89880,89904,89952,89980,89998,90012,90040,90190,90204,90254,90268,90296,90306,90308,90312,90334,90382,90396,90424,90480,90494,90500,90504,90512,90526,90528,90556,90566,90572,90584,90610,90612,90638,90652,90680,90736,90750,90848,90876,90884,90888,90896,90910,90912,90940,90944,91e3,91014,91020,91032,91056,91070,91086,91100,91106,91108,91112,91126,91150,91164,91192,91248,91262,91360,91388,91584,91640,91664,91678,91680,91708,91712,91768,91888,91928,91952,91966,92e3,92028,92046,92060,92088,92098,92100,92104,92112,92126,92134,92140,92188,92216,92272,92384,92412,92608,92664,93168,93200,93214,93216,93244,93248,93304,93424,93664,93720,93744,93758,93792,93820,93888,93944,93980,94008,94064,94078,94084,94088,94096,94110,94112,94140,94150,94156,94168,94246,94252,94278,94284,94296,94318,94342,94348,94360,94384,94398,94414,94428,94440,94470,94476,94488,94512,94526,94560,94588,94606,94620,94648,94658,94660,94664,94672,94686,94694,94700,94714,94726,94732,94744,94768,94782,94816,94844,94912,94968,94990,95004,95032,95088,95102,95112,95120,95134,95136,95164,95180,95192,95214,95218,95220,95244,95256,95280,95294,95328,95356,95424,95480,95728,95758,95772,95800,95856,95870,95968,95996,96008,96016,96030,96032,96060,96064,96120,96152,96176,96190,96220,96226,96228,96232,96290,96292,96296,96310,96322,96324,96328,96336,96350,96358,96364,96386,96388,96392,96400,96414,96416,96444,96454,96460,96472,96494,96498,96500,96514,96516,96520,96528,96542,96544,96572,96576,96632,96646,96652,96664,96688,96702,96718,96732,96738,96740,96744,96758,96772,96776,96784,96798,96800,96828,96832,96888,97008,97030,97036,97048,97072,97086,97120,97148,97166,97180,97208,97220,97224,97232,97246,97254,97260,97326,97330,97332,97358,97372,97378,97380,97384,97398,97422,97436,97464,97474,97476,97480,97488,97502,97510,97516,97550,97564,97592,97648,97666,97668,97672,97680,97694,97696,97724,97734,97740,97752,97774,97830,97836,97850,97862,97868,97880,97902,97906,97908,97926,97932,97944,97968,97998,98012,98018,98020,98024,98038,98618,98674,98676,98838,98854,98874,98892,98904,98926,98930,98932,98968,99006,99042,99044,99048,99062,99166,99194,99246,99286,99350,99366,99372,99386,99398,99416,99438,99442,99444,99462,99504,99518,99534,99548,99554,99556,99560,99574,99590,99596,99608,99632,99646,99680,99708,99726,99740,99768,99778,99780,99784,99792,99806,99814,99820,99834,99858,99860,99874,99880,99894,99906,99920,99934,99962,99970,99972,99976,99984,99998,1e5,100028,100038,100044,100056,100078,100082,100084,100142,100174,100188,100246,100262,100268,100306,100308,100390,100396,100410,100422,100428,100440,100462,100466,100468,100486,100504,100528,100542,100558,100572,100578,100580,100584,100598,100620,100656,100670,100704,100732,100750,100792,100802,100808,100816,100830,100838,100844,100858,100888,100912,100926,100960,100988,101056,101112,101148,101176,101232,101246,101250,101252,101256,101264,101278,101280,101308,101318,101324,101336,101358,101362,101364,101410,101412,101416,101430,101442,101448,101456,101470,101478,101498,101506,101508,101520,101534,101536,101564,101580,101618,101620,101636,101640,101648,101662,101664,101692,101696,101752,101766,101784,101838,101858,101860,101864,101934,101938,101940,101966,101980,101986,101988,101992,102030,102044,102072,102082,102084,102088,102096,102138,102166,102182,102188,102214,102220,102232,102254,102282,102290,102292,102306,102308,102312,102326,102444,102458,102470,102476,102488,102514,102516,102534,102552,102576,102590,102606,102620,102626,102632,102646,102662,102668,102704,102718,102752,102780,102798,102812,102840,102850,102856,102864,102878,102886,102892,102906,102936,102974,103008,103036,103104,103160,103224,103280,103294,103298,103300,103312,103326,103328,103356,103366,103372,103384,103406,103410,103412,103472,103486,103520,103548,103616,103672,103920,103992,104048,104062,104160,104188,104194,104196,104200,104208,104224,104252,104256,104312,104326,104332,104344,104368,104382,104398,104412,104418,104420,104424,104482,104484,104514,104520,104528,104542,104550,104570,104578,104580,104592,104606,104608,104636,104652,104690,104692,104706,104712,104734,104736,104764,104768,104824,104838,104856,104910,104930,104932,104936,104968,104976,104990,104992,105020,105024,105080,105200,105240,105278,105312,105372,105410,105412,105416,105424,105446,105518,105524,105550,105564,105570,105572,105576,105614,105628,105656,105666,105672,105680,105702,105722,105742,105756,105784,105840,105854,105858,105860,105864,105872,105888,105932,105970,105972,106006,106022,106028,106054,106060,106072,106100,106118,106124,106136,106160,106174,106190,106210,106212,106216,106250,106258,106260,106274,106276,106280,106306,106308,106312,106320,106334,106348,106394,106414,106418,106420,106566,106572,106610,106612,106630,106636,106648,106672,106686,106722,106724,106728,106742,106758,106764,106776,106800,106814,106848,106876,106894,106908,106936,106946,106948,106952,106960,106974,106982,106988,107032,107056,107070,107104,107132,107200,107256,107292,107320,107376,107390,107394,107396,107400,107408,107422,107424,107452,107462,107468,107480,107502,107506,107508,107544,107568,107582,107616,107644,107712,107768,108016,108060,108088,108144,108158,108256,108284,108290,108292,108296,108304,108318,108320,108348,108352,108408,108422,108428,108440,108464,108478,108494,108508,108514,108516,108520,108592,108640,108668,108736,108792,109040,109536,109680,109694,109792,109820,110016,110072,110084,110088,110096,110112,110140,110144,110200,110320,110342,110348,110360,110384,110398,110432,110460,110478,110492,110520,110532,110536,110544,110558,110658,110686,110714,110722,110724,110728,110736,110750,110752,110780,110796,110834,110836,110850,110852,110856,110864,110878,110880,110908,110912,110968,110982,111e3,111054,111074,111076,111080,111108,111112,111120,111134,111136,111164,111168,111224,111344,111372,111422,111456,111516,111554,111556,111560,111568,111590,111632,111646,111648,111676,111680,111736,111856,112096,112152,112224,112252,112320,112440,112514,112516,112520,112528,112542,112544,112588,112686,112718,112732,112782,112796,112824,112834,112836,112840,112848,112870,112890,112910,112924,112952,113008,113022,113026,113028,113032,113040,113054,113056,113100,113138,113140,113166,113180,113208,113264,113278,113376,113404,113416,113424,113440,113468,113472,113560,113614,113634,113636,113640,113686,113702,113708,113734,113740,113752,113778,113780,113798,113804,113816,113840,113854,113870,113890,113892,113896,113926,113932,113944,113968,113982,114016,114044,114076,114114,114116,114120,114128,114150,114170,114194,114196,114210,114212,114216,114242,114244,114248,114256,114270,114278,114306,114308,114312,114320,114334,114336,114364,114380,114420,114458,114478,114482,114484,114510,114524,114530,114532,114536,114842,114866,114868,114970,114994,114996,115042,115044,115048,115062,115130,115226,115250,115252,115278,115292,115298,115300,115304,115318,115342,115394,115396,115400,115408,115422,115430,115436,115450,115478,115494,115514,115526,115532,115570,115572,115738,115758,115762,115764,115790,115804,115810,115812,115816,115830,115854,115868,115896,115906,115912,115920,115934,115942,115948,115962,115996,116024,116080,116094,116098,116100,116104,116112,116126,116128,116156,116166,116172,116184,116206,116210,116212,116246,116262,116268,116282,116294,116300,116312,116334,116338,116340,116358,116364,116376,116400,116414,116430,116444,116450,116452,116456,116498,116500,116514,116520,116534,116546,116548,116552,116560,116574,116582,116588,116602,116654,116694,116714,116762,116782,116786,116788,116814,116828,116834,116836,116840,116854,116878,116892,116920,116930,116936,116944,116958,116966,116972,116986,117006,117048,117104,117118,117122,117124,117136,117150,117152,117180,117190,117196,117208,117230,117234,117236,117304,117360,117374,117472,117500,117506,117508,117512,117520,117536,117564,117568,117624,117638,117644,117656,117680,117694,117710,117724,117730,117732,117736,117750,117782,117798,117804,117818,117830,117848,117874,117876,117894,117936,117950,117966,117986,117988,117992,118022,118028,118040,118064,118078,118112,118140,118172,118210,118212,118216,118224,118238,118246,118266,118306,118312,118338,118352,118366,118374,118394,118402,118404,118408,118416,118430,118432,118460,118476,118514,118516,118574,118578,118580,118606,118620,118626,118628,118632,118678,118694,118700,118730,118738,118740,118830,118834,118836,118862,118876,118882,118884,118888,118902,118926,118940,118968,118978,118980,118984,118992,119006,119014,119020,119034,119068,119096,119152,119166,119170,119172,119176,119184,119198,119200,119228,119238,119244,119256,119278,119282,119284,119324,119352,119408,119422,119520,119548,119554,119556,119560,119568,119582,119584,119612,119616,119672,119686,119692,119704,119728,119742,119758,119772,119778,119780,119784,119798,119920,119934,120032,120060,120256,120312,120324,120328,120336,120352,120384,120440,120560,120582,120588,120600,120624,120638,120672,120700,120718,120732,120760,120770,120772,120776,120784,120798,120806,120812,120870,120876,120890,120902,120908,120920,120946,120948,120966,120972,120984,121008,121022,121038,121058,121060,121064,121078,121100,121112,121136,121150,121184,121212,121244,121282,121284,121288,121296,121318,121338,121356,121368,121392,121406,121440,121468,121536,121592,121656,121730,121732,121736,121744,121758,121760,121804,121842,121844,121890,121922,121924,121928,121936,121950,121958,121978,121986,121988,121992,122e3,122014,122016,122044,122060,122098,122100,122116,122120,122128,122142,122144,122172,122176,122232,122246,122264,122318,122338,122340,122344,122414,122418,122420,122446,122460,122466,122468,122472,122510,122524,122552,122562,122564,122568,122576,122598,122618,122646,122662,122668,122694,122700,122712,122738,122740,122762,122770,122772,122786,122788,122792,123018,123026,123028,123042,123044,123048,123062,123098,123146,123154,123156,123170,123172,123176,123190,123202,123204,123208,123216,123238,123244,123258,123290,123314,123316,123402,123410,123412,123426,123428,123432,123446,123458,123464,123472,123486,123494,123500,123514,123522,123524,123528,123536,123552,123580,123590,123596,123608,123630,123634,123636,123674,123698,123700,123740,123746,123748,123752,123834,123914,123922,123924,123938,123944,123958,123970,123976,123984,123998,124006,124012,124026,124034,124036,124048,124062,124064,124092,124102,124108,124120,124142,124146,124148,124162,124164,124168,124176,124190,124192,124220,124224,124280,124294,124300,124312,124336,124350,124366,124380,124386,124388,124392,124406,124442,124462,124466,124468,124494,124508,124514,124520,124558,124572,124600,124610,124612,124616,124624,124646,124666,124694,124710,124716,124730,124742,124748,124760,124786,124788,124818,124820,124834,124836,124840,124854,124946,124948,124962,124964,124968,124982,124994,124996,125e3,125008,125022,125030,125036,125050,125058,125060,125064,125072,125086,125088,125116,125126,125132,125144,125166,125170,125172,125186,125188,125192,125200,125216,125244,125248,125304,125318,125324,125336,125360,125374,125390,125404,125410,125412,125416,125430,125444,125448,125456,125472,125504,125560,125680,125702,125708,125720,125744,125758,125792,125820,125838,125852,125880,125890,125892,125896,125904,125918,125926,125932,125978,125998,126002,126004,126030,126044,126050,126052,126056,126094,126108,126136,126146,126148,126152,126160,126182,126202,126222,126236,126264,126320,126334,126338,126340,126344,126352,126366,126368,126412,126450,126452,126486,126502,126508,126522,126534,126540,126552,126574,126578,126580,126598,126604,126616,126640,126654,126670,126684,126690,126692,126696,126738,126754,126756,126760,126774,126786,126788,126792,126800,126814,126822,126828,126842,126894,126898,126900,126934,127126,127142,127148,127162,127178,127186,127188,127254,127270,127276,127290,127302,127308,127320,127342,127346,127348,127370,127378,127380,127394,127396,127400,127450,127510,127526,127532,127546,127558,127576,127598,127602,127604,127622,127628,127640,127664,127678,127694,127708,127714,127716,127720,127734,127754,127762,127764,127778,127784,127810,127812,127816,127824,127838,127846,127866,127898,127918,127922,127924,128022,128038,128044,128058,128070,128076,128088,128110,128114,128116,128134,128140,128152,128176,128190,128206,128220,128226,128228,128232,128246,128262,128268,128280,128304,128318,128352,128380,128398,128412,128440,128450,128452,128456,128464,128478,128486,128492,128506,128522,128530,128532,128546,128548,128552,128566,128578,128580,128584,128592,128606,128614,128634,128642,128644,128648,128656,128670,128672,128700,128716,128754,128756,128794,128814,128818,128820,128846,128860,128866,128868,128872,128886,128918,128934,128940,128954,128978,128980,129178,129198,129202,129204,129238,129258,129306,129326,129330,129332,129358,129372,129378,129380,129384,129398,129430,129446,129452,129466,129482,129490,129492,129562,129582,129586,129588,129614,129628,129634,129636,129640,129654,129678,129692,129720,129730,129732,129736,129744,129758,129766,129772,129814,129830,129836,129850,129862,129868,129880,129902,129906,129908,129930,129938,129940,129954,129956,129960,129974,130010]);vt.CODEWORD_TABLE=Int32Array.from([2627,1819,2622,2621,1813,1812,2729,2724,2723,2779,2774,2773,902,896,908,868,865,861,859,2511,873,871,1780,835,2493,825,2491,842,837,844,1764,1762,811,810,809,2483,807,2482,806,2480,815,814,813,812,2484,817,816,1745,1744,1742,1746,2655,2637,2635,2626,2625,2623,2628,1820,2752,2739,2737,2728,2727,2725,2730,2785,2783,2778,2777,2775,2780,787,781,747,739,736,2413,754,752,1719,692,689,681,2371,678,2369,700,697,694,703,1688,1686,642,638,2343,631,2341,627,2338,651,646,643,2345,654,652,1652,1650,1647,1654,601,599,2322,596,2321,594,2319,2317,611,610,608,606,2324,603,2323,615,614,612,1617,1616,1614,1612,616,1619,1618,2575,2538,2536,905,901,898,909,2509,2507,2504,870,867,864,860,2512,875,872,1781,2490,2489,2487,2485,1748,836,834,832,830,2494,827,2492,843,841,839,845,1765,1763,2701,2676,2674,2653,2648,2656,2634,2633,2631,2629,1821,2638,2636,2770,2763,2761,2750,2745,2753,2736,2735,2733,2731,1848,2740,2738,2786,2784,591,588,576,569,566,2296,1590,537,534,526,2276,522,2274,545,542,539,548,1572,1570,481,2245,466,2242,462,2239,492,485,482,2249,496,494,1534,1531,1528,1538,413,2196,406,2191,2188,425,419,2202,415,2199,432,430,427,1472,1467,1464,433,1476,1474,368,367,2160,365,2159,362,2157,2155,2152,378,377,375,2166,372,2165,369,2162,383,381,379,2168,1419,1418,1416,1414,385,1411,384,1423,1422,1420,1424,2461,802,2441,2439,790,786,783,794,2409,2406,2403,750,742,738,2414,756,753,1720,2367,2365,2362,2359,1663,693,691,684,2373,680,2370,702,699,696,704,1690,1687,2337,2336,2334,2332,1624,2329,1622,640,637,2344,634,2342,630,2340,650,648,645,2346,655,653,1653,1651,1649,1655,2612,2597,2595,2571,2568,2565,2576,2534,2529,2526,1787,2540,2537,907,904,900,910,2503,2502,2500,2498,1768,2495,1767,2510,2508,2506,869,866,863,2513,876,874,1782,2720,2713,2711,2697,2694,2691,2702,2672,2670,2664,1828,2678,2675,2647,2646,2644,2642,1823,2639,1822,2654,2652,2650,2657,2771,1855,2765,2762,1850,1849,2751,2749,2747,2754,353,2148,344,342,336,2142,332,2140,345,1375,1373,306,2130,299,2128,295,2125,319,314,311,2132,1354,1352,1349,1356,262,257,2101,253,2096,2093,274,273,267,2107,263,2104,280,278,275,1316,1311,1308,1320,1318,2052,202,2050,2044,2040,219,2063,212,2060,208,2055,224,221,2066,1260,1258,1252,231,1248,229,1266,1264,1261,1268,155,1998,153,1996,1994,1991,1988,165,164,2007,162,2006,159,2003,2e3,172,171,169,2012,166,2010,1186,1184,1182,1179,175,1176,173,1192,1191,1189,1187,176,1194,1193,2313,2307,2305,592,589,2294,2292,2289,578,572,568,2297,580,1591,2272,2267,2264,1547,538,536,529,2278,525,2275,547,544,541,1574,1571,2237,2235,2229,1493,2225,1489,478,2247,470,2244,465,2241,493,488,484,2250,498,495,1536,1533,1530,1539,2187,2186,2184,2182,1432,2179,1430,2176,1427,414,412,2197,409,2195,405,2193,2190,426,424,421,2203,418,2201,431,429,1473,1471,1469,1466,434,1477,1475,2478,2472,2470,2459,2457,2454,2462,803,2437,2432,2429,1726,2443,2440,792,789,785,2401,2399,2393,1702,2389,1699,2411,2408,2405,745,741,2415,758,755,1721,2358,2357,2355,2353,1661,2350,1660,2347,1657,2368,2366,2364,2361,1666,690,687,2374,683,2372,701,698,705,1691,1689,2619,2617,2610,2608,2605,2613,2593,2588,2585,1803,2599,2596,2563,2561,2555,1797,2551,1795,2573,2570,2567,2577,2525,2524,2522,2520,1786,2517,1785,2514,1783,2535,2533,2531,2528,1788,2541,2539,906,903,911,2721,1844,2715,2712,1838,1836,2699,2696,2693,2703,1827,1826,1824,2673,2671,2669,2666,1829,2679,2677,1858,1857,2772,1854,1853,1851,1856,2766,2764,143,1987,139,1986,135,133,131,1984,128,1983,125,1981,138,137,136,1985,1133,1132,1130,112,110,1974,107,1973,104,1971,1969,122,121,119,117,1977,114,1976,124,1115,1114,1112,1110,1117,1116,84,83,1953,81,1952,78,1950,1948,1945,94,93,91,1959,88,1958,85,1955,99,97,95,1961,1086,1085,1083,1081,1078,100,1090,1089,1087,1091,49,47,1917,44,1915,1913,1910,1907,59,1926,56,1925,53,1922,1919,66,64,1931,61,1929,1042,1040,1038,71,1035,70,1032,68,1048,1047,1045,1043,1050,1049,12,10,1869,1867,1864,1861,21,1880,19,1877,1874,1871,28,1888,25,1886,22,1883,982,980,977,974,32,30,991,989,987,984,34,995,994,992,2151,2150,2147,2146,2144,356,355,354,2149,2139,2138,2136,2134,1359,343,341,338,2143,335,2141,348,347,346,1376,1374,2124,2123,2121,2119,1326,2116,1324,310,308,305,2131,302,2129,298,2127,320,318,316,313,2133,322,321,1355,1353,1351,1357,2092,2091,2089,2087,1276,2084,1274,2081,1271,259,2102,256,2100,252,2098,2095,272,269,2108,266,2106,281,279,277,1317,1315,1313,1310,282,1321,1319,2039,2037,2035,2032,1203,2029,1200,1197,207,2053,205,2051,201,2049,2046,2043,220,218,2064,215,2062,211,2059,228,226,223,2069,1259,1257,1254,232,1251,230,1267,1265,1263,2316,2315,2312,2311,2309,2314,2304,2303,2301,2299,1593,2308,2306,590,2288,2287,2285,2283,1578,2280,1577,2295,2293,2291,579,577,574,571,2298,582,581,1592,2263,2262,2260,2258,1545,2255,1544,2252,1541,2273,2271,2269,2266,1550,535,532,2279,528,2277,546,543,549,1575,1573,2224,2222,2220,1486,2217,1485,2214,1482,1479,2238,2236,2234,2231,1496,2228,1492,480,477,2248,473,2246,469,2243,490,487,2251,497,1537,1535,1532,2477,2476,2474,2479,2469,2468,2466,2464,1730,2473,2471,2453,2452,2450,2448,1729,2445,1728,2460,2458,2456,2463,805,804,2428,2427,2425,2423,1725,2420,1724,2417,1722,2438,2436,2434,2431,1727,2444,2442,793,791,788,795,2388,2386,2384,1697,2381,1696,2378,1694,1692,2402,2400,2398,2395,1703,2392,1701,2412,2410,2407,751,748,744,2416,759,757,1807,2620,2618,1806,1805,2611,2609,2607,2614,1802,1801,1799,2594,2592,2590,2587,1804,2600,2598,1794,1793,1791,1789,2564,2562,2560,2557,1798,2554,1796,2574,2572,2569,2578,1847,1846,2722,1843,1842,1840,1845,2716,2714,1835,1834,1832,1830,1839,1837,2700,2698,2695,2704,1817,1811,1810,897,862,1777,829,826,838,1760,1758,808,2481,1741,1740,1738,1743,2624,1818,2726,2776,782,740,737,1715,686,679,695,1682,1680,639,628,2339,647,644,1645,1643,1640,1648,602,600,597,595,2320,593,2318,609,607,604,1611,1610,1608,1606,613,1615,1613,2328,926,924,892,886,899,857,850,2505,1778,824,823,821,819,2488,818,2486,833,831,828,840,1761,1759,2649,2632,2630,2746,2734,2732,2782,2781,570,567,1587,531,527,523,540,1566,1564,476,467,463,2240,486,483,1524,1521,1518,1529,411,403,2192,399,2189,423,416,1462,1457,1454,428,1468,1465,2210,366,363,2158,360,2156,357,2153,376,373,370,2163,1410,1409,1407,1405,382,1402,380,1417,1415,1412,1421,2175,2174,777,774,771,784,732,725,722,2404,743,1716,676,674,668,2363,665,2360,685,1684,1681,626,624,622,2335,620,2333,617,2330,641,635,649,1646,1644,1642,2566,928,925,2530,2527,894,891,888,2501,2499,2496,858,856,854,851,1779,2692,2668,2665,2645,2643,2640,2651,2768,2759,2757,2744,2743,2741,2748,352,1382,340,337,333,1371,1369,307,300,296,2126,315,312,1347,1342,1350,261,258,250,2097,246,2094,271,268,264,1306,1301,1298,276,1312,1309,2115,203,2048,195,2045,191,2041,213,209,2056,1246,1244,1238,225,1234,222,1256,1253,1249,1262,2080,2079,154,1997,150,1995,147,1992,1989,163,160,2004,156,2001,1175,1174,1172,1170,1167,170,1164,167,1185,1183,1180,1177,174,1190,1188,2025,2024,2022,587,586,564,559,556,2290,573,1588,520,518,512,2268,508,2265,530,1568,1565,461,457,2233,450,2230,446,2226,479,471,489,1526,1523,1520,397,395,2185,392,2183,389,2180,2177,410,2194,402,422,1463,1461,1459,1456,1470,2455,799,2433,2430,779,776,773,2397,2394,2390,734,728,724,746,1717,2356,2354,2351,2348,1658,677,675,673,670,667,688,1685,1683,2606,2589,2586,2559,2556,2552,927,2523,2521,2518,2515,1784,2532,895,893,890,2718,2709,2707,2689,2687,2684,2663,2662,2660,2658,1825,2667,2769,1852,2760,2758,142,141,1139,1138,134,132,129,126,1982,1129,1128,1126,1131,113,111,108,105,1972,101,1970,120,118,115,1109,1108,1106,1104,123,1113,1111,82,79,1951,75,1949,72,1946,92,89,86,1956,1077,1076,1074,1072,98,1069,96,1084,1082,1079,1088,1968,1967,48,45,1916,42,1914,39,1911,1908,60,57,54,1923,50,1920,1031,1030,1028,1026,67,1023,65,1020,62,1041,1039,1036,1033,69,1046,1044,1944,1943,1941,11,9,1868,7,1865,1862,1859,20,1878,16,1875,13,1872,970,968,966,963,29,960,26,23,983,981,978,975,33,971,31,990,988,985,1906,1904,1902,993,351,2145,1383,331,330,328,326,2137,323,2135,339,1372,1370,294,293,291,289,2122,286,2120,283,2117,309,303,317,1348,1346,1344,245,244,242,2090,239,2088,236,2085,2082,260,2099,249,270,1307,1305,1303,1300,1314,189,2038,186,2036,183,2033,2030,2026,206,198,2047,194,216,1247,1245,1243,1240,227,1237,1255,2310,2302,2300,2286,2284,2281,565,563,561,558,575,1589,2261,2259,2256,2253,1542,521,519,517,514,2270,511,533,1569,1567,2223,2221,2218,2215,1483,2211,1480,459,456,453,2232,449,474,491,1527,1525,1522,2475,2467,2465,2451,2449,2446,801,800,2426,2424,2421,2418,1723,2435,780,778,775,2387,2385,2382,2379,1695,2375,1693,2396,735,733,730,727,749,1718,2616,2615,2604,2603,2601,2584,2583,2581,2579,1800,2591,2550,2549,2547,2545,1792,2542,1790,2558,929,2719,1841,2710,2708,1833,1831,2690,2688,2686,1815,1809,1808,1774,1756,1754,1737,1736,1734,1739,1816,1711,1676,1674,633,629,1638,1636,1633,1641,598,1605,1604,1602,1600,605,1609,1607,2327,887,853,1775,822,820,1757,1755,1584,524,1560,1558,468,464,1514,1511,1508,1519,408,404,400,1452,1447,1444,417,1458,1455,2208,364,361,358,2154,1401,1400,1398,1396,374,1393,371,1408,1406,1403,1413,2173,2172,772,726,723,1712,672,669,666,682,1678,1675,625,623,621,618,2331,636,632,1639,1637,1635,920,918,884,880,889,849,848,847,846,2497,855,852,1776,2641,2742,2787,1380,334,1367,1365,301,297,1340,1338,1335,1343,255,251,247,1296,1291,1288,265,1302,1299,2113,204,196,192,2042,1232,1230,1224,214,1220,210,1242,1239,1235,1250,2077,2075,151,148,1993,144,1990,1163,1162,1160,1158,1155,161,1152,157,1173,1171,1168,1165,168,1181,1178,2021,2020,2018,2023,585,560,557,1585,516,509,1562,1559,458,447,2227,472,1516,1513,1510,398,396,393,390,2181,386,2178,407,1453,1451,1449,1446,420,1460,2209,769,764,720,712,2391,729,1713,664,663,661,659,2352,656,2349,671,1679,1677,2553,922,919,2519,2516,885,883,881,2685,2661,2659,2767,2756,2755,140,1137,1136,130,127,1125,1124,1122,1127,109,106,102,1103,1102,1100,1098,116,1107,1105,1980,80,76,73,1947,1068,1067,1065,1063,90,1060,87,1075,1073,1070,1080,1966,1965,46,43,40,1912,36,1909,1019,1018,1016,1014,58,1011,55,1008,51,1029,1027,1024,1021,63,1037,1034,1940,1939,1937,1942,8,1866,4,1863,1,1860,956,954,952,949,946,17,14,969,967,964,961,27,957,24,979,976,972,1901,1900,1898,1896,986,1905,1903,350,349,1381,329,327,324,1368,1366,292,290,287,284,2118,304,1341,1339,1337,1345,243,240,237,2086,233,2083,254,1297,1295,1293,1290,1304,2114,190,187,184,2034,180,2031,177,2027,199,1233,1231,1229,1226,217,1223,1241,2078,2076,584,555,554,552,550,2282,562,1586,507,506,504,502,2257,499,2254,515,1563,1561,445,443,441,2219,438,2216,435,2212,460,454,475,1517,1515,1512,2447,798,797,2422,2419,770,768,766,2383,2380,2376,721,719,717,714,731,1714,2602,2582,2580,2548,2546,2543,923,921,2717,2706,2705,2683,2682,2680,1771,1752,1750,1733,1732,1731,1735,1814,1707,1670,1668,1631,1629,1626,1634,1599,1598,1596,1594,1603,1601,2326,1772,1753,1751,1581,1554,1552,1504,1501,1498,1509,1442,1437,1434,401,1448,1445,2206,1392,1391,1389,1387,1384,359,1399,1397,1394,1404,2171,2170,1708,1672,1669,619,1632,1630,1628,1773,1378,1363,1361,1333,1328,1336,1286,1281,1278,248,1292,1289,2111,1218,1216,1210,197,1206,193,1228,1225,1221,1236,2073,2071,1151,1150,1148,1146,152,1143,149,1140,145,1161,1159,1156,1153,158,1169,1166,2017,2016,2014,2019,1582,510,1556,1553,452,448,1506,1500,394,391,387,1443,1441,1439,1436,1450,2207,765,716,713,1709,662,660,657,1673,1671,916,914,879,878,877,882,1135,1134,1121,1120,1118,1123,1097,1096,1094,1092,103,1101,1099,1979,1059,1058,1056,1054,77,1051,74,1066,1064,1061,1071,1964,1963,1007,1006,1004,1002,999,41,996,37,1017,1015,1012,1009,52,1025,1022,1936,1935,1933,1938,942,940,938,935,932,5,2,955,953,950,947,18,943,15,965,962,958,1895,1894,1892,1890,973,1899,1897,1379,325,1364,1362,288,285,1334,1332,1330,241,238,234,1287,1285,1283,1280,1294,2112,188,185,181,178,2028,1219,1217,1215,1212,200,1209,1227,2074,2072,583,553,551,1583,505,503,500,513,1557,1555,444,442,439,436,2213,455,451,1507,1505,1502,796,763,762,760,767,711,710,708,706,2377,718,715,1710,2544,917,915,2681,1627,1597,1595,2325,1769,1749,1747,1499,1438,1435,2204,1390,1388,1385,1395,2169,2167,1704,1665,1662,1625,1623,1620,1770,1329,1282,1279,2109,1214,1207,1222,2068,2065,1149,1147,1144,1141,146,1157,1154,2013,2011,2008,2015,1579,1549,1546,1495,1487,1433,1431,1428,1425,388,1440,2205,1705,658,1667,1664,1119,1095,1093,1978,1057,1055,1052,1062,1962,1960,1005,1003,1e3,997,38,1013,1010,1932,1930,1927,1934,941,939,936,933,6,930,3,951,948,944,1889,1887,1884,1881,959,1893,1891,35,1377,1360,1358,1327,1325,1322,1331,1277,1275,1272,1269,235,1284,2110,1205,1204,1201,1198,182,1195,179,1213,2070,2067,1580,501,1551,1548,440,437,1497,1494,1490,1503,761,709,707,1706,913,912,2198,1386,2164,2161,1621,1766,2103,1208,2058,2054,1145,1142,2005,2002,1999,2009,1488,1429,1426,2200,1698,1659,1656,1975,1053,1957,1954,1001,998,1924,1921,1918,1928,937,934,931,1879,1876,1873,1870,945,1885,1882,1323,1273,1270,2105,1202,1199,1196,1211,2061,2057,1576,1543,1540,1484,1481,1478,1491,1700]);
/*
    * Copyright 2007 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class xt{constructor(e,t){this.bits=e;this.points=t}getBits(){return this.bits}getPoints(){return this.points}}
/*
    * Copyright 2009 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Vt{static detectMultiple(e,t,r){let n=e.getBlackMatrix();let i=Vt.detect(r,n);if(!i.length){n=n.clone();n.rotate180();i=Vt.detect(r,n)}return new xt(n,i)}static detect(e,t){const r=new Array;let n=0;let i=0;let s=false;while(n<t.getHeight()){const o=Vt.findVertices(t,n,i);if(o[0]==null&&o[3]==null){if(!s){break}s=false;i=0;for(const e of r){if(e[1]!=null){n=Math.trunc(Math.max(n,e[1].getY()))}if(e[3]!=null){n=Math.max(n,Math.trunc(e[3].getY()))}}n+=Vt.ROW_STEP;continue}s=true;r.push(o);if(!e){break}if(o[2]!=null){i=Math.trunc(o[2].getX());n=Math.trunc(o[2].getY())}else{i=Math.trunc(o[4].getX());n=Math.trunc(o[4].getY())}}return r}static findVertices(e,t,r){const n=e.getHeight();const i=e.getWidth();const s=new Array(8);Vt.copyToResult(s,Vt.findRowsWithPattern(e,n,i,t,r,Vt.START_PATTERN),Vt.INDEXES_START_PATTERN);if(s[4]!=null){r=Math.trunc(s[4].getX());t=Math.trunc(s[4].getY())}Vt.copyToResult(s,Vt.findRowsWithPattern(e,n,i,t,r,Vt.STOP_PATTERN),Vt.INDEXES_STOP_PATTERN);return s}static copyToResult(e,t,r){for(let n=0;n<r.length;n++){e[r[n]]=t[n]}}static findRowsWithPattern(e,t,r,n,i,s){const o=new Array(4);let a=false;const l=new Int32Array(s.length);for(;n<t;n+=Vt.ROW_STEP){let t=Vt.findGuardPattern(e,i,n,r,false,s,l);if(t!=null){while(n>0){const o=Vt.findGuardPattern(e,i,--n,r,false,s,l);if(o!=null){t=o}else{n++;break}}o[0]=new ee(t[0],n);o[1]=new ee(t[1],n);a=true;break}}let h=n+1;if(a){let n=0;let i=Int32Array.from([Math.trunc(o[0].getX()),Math.trunc(o[1].getX())]);for(;h<t;h++){const t=Vt.findGuardPattern(e,i[0],h,r,false,s,l);if(t!=null&&Math.abs(i[0]-t[0])<Vt.MAX_PATTERN_DRIFT&&Math.abs(i[1]-t[1])<Vt.MAX_PATTERN_DRIFT){i=t;n=0}else{if(n>Vt.SKIPPED_ROW_COUNT_MAX){break}else{n++}}}h-=n+1;o[2]=new ee(i[0],h);o[3]=new ee(i[1],h)}if(h-n<Vt.BARCODE_MIN_HEIGHT){w.fill(o,null)}return o}static findGuardPattern(e,t,r,n,i,s,o){w.fillWithin(o,0,o.length,0);let a=t;let l=0;while(e.get(a,r)&&a>0&&l++<Vt.MAX_PIXEL_DRIFT){a--}let h=a;let c=0;let u=s.length;for(let t=i;h<n;h++){let n=e.get(h,r);if(n!==t){o[c]++}else{if(c===u-1){if(Vt.patternMatchVariance(o,s,Vt.MAX_INDIVIDUAL_VARIANCE)<Vt.MAX_AVG_VARIANCE){return new Int32Array([a,h])}a+=o[0]+o[1];d.arraycopy(o,2,o,0,c-1);o[c-1]=0;o[c]=0;c--}else{c++}o[c]=1;t=!t}}if(c===u-1&&Vt.patternMatchVariance(o,s,Vt.MAX_INDIVIDUAL_VARIANCE)<Vt.MAX_AVG_VARIANCE){return new Int32Array([a,h-1])}return null}static patternMatchVariance(e,t,r){let n=e.length;let i=0;let s=0;for(let r=0;r<n;r++){i+=e[r];s+=t[r]}if(i<s){return Infinity}let o=i/s;r*=o;let a=0;for(let i=0;i<n;i++){let n=e[i];let s=t[i]*o;let l=n>s?n-s:s-n;if(l>r){return Infinity}a+=l}return a/i}}Vt.INDEXES_START_PATTERN=Int32Array.from([0,4,1,5]);Vt.INDEXES_STOP_PATTERN=Int32Array.from([6,2,7,3]);Vt.MAX_AVG_VARIANCE=.42;Vt.MAX_INDIVIDUAL_VARIANCE=.8;Vt.START_PATTERN=Int32Array.from([8,1,1,1,1,1,1,3]);Vt.STOP_PATTERN=Int32Array.from([7,1,1,3,1,1,1,2,1]);Vt.MAX_PIXEL_DRIFT=3;Vt.MAX_PATTERN_DRIFT=5;Vt.SKIPPED_ROW_COUNT_MAX=25;Vt.ROW_STEP=5;Vt.BARCODE_MIN_HEIGHT=10;
/*
    * Copyright 2012 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Ut{constructor(e,t){if(t.length===0){throw new l}this.field=e;let r=t.length;if(r>1&&t[0]===0){let e=1;while(e<r&&t[e]===0){e++}if(e===r){this.coefficients=new Int32Array([0])}else{this.coefficients=new Int32Array(r-e);d.arraycopy(t,e,this.coefficients,0,this.coefficients.length)}}else{this.coefficients=t}}getCoefficients(){return this.coefficients}getDegree(){return this.coefficients.length-1}isZero(){return this.coefficients[0]===0}getCoefficient(e){return this.coefficients[this.coefficients.length-1-e]}evaluateAt(e){if(e===0){return this.getCoefficient(0)}if(e===1){let e=0;for(let t of this.coefficients){e=this.field.add(e,t)}return e}let t=this.coefficients[0];let r=this.coefficients.length;for(let n=1;n<r;n++){t=this.field.add(this.field.multiply(e,t),this.coefficients[n])}return t}add(e){if(!this.field.equals(e.field)){throw new l("ModulusPolys do not have same ModulusGF field")}if(this.isZero()){return e}if(e.isZero()){return this}let t=this.coefficients;let r=e.coefficients;if(t.length>r.length){let e=t;t=r;r=e}let n=new Int32Array(r.length);let i=r.length-t.length;d.arraycopy(r,0,n,0,i);for(let e=i;e<r.length;e++){n[e]=this.field.add(t[e-i],r[e])}return new Ut(this.field,n)}subtract(e){if(!this.field.equals(e.field)){throw new l("ModulusPolys do not have same ModulusGF field")}if(e.isZero()){return this}return this.add(e.negative())}multiply(e){if(e instanceof Ut){return this.multiplyOther(e)}return this.multiplyScalar(e)}multiplyOther(e){if(!this.field.equals(e.field)){throw new l("ModulusPolys do not have same ModulusGF field")}if(this.isZero()||e.isZero()){return new Ut(this.field,new Int32Array([0]))}let t=this.coefficients;let r=t.length;let n=e.coefficients;let i=n.length;let s=new Int32Array(r+i-1);for(let e=0;e<r;e++){let r=t[e];for(let t=0;t<i;t++){s[e+t]=this.field.add(s[e+t],this.field.multiply(r,n[t]))}}return new Ut(this.field,s)}negative(){let e=this.coefficients.length;let t=new Int32Array(e);for(let r=0;r<e;r++){t[r]=this.field.subtract(0,this.coefficients[r])}return new Ut(this.field,t)}multiplyScalar(e){if(e===0){return new Ut(this.field,new Int32Array([0]))}if(e===1){return this}let t=this.coefficients.length;let r=new Int32Array(t);for(let n=0;n<t;n++){r[n]=this.field.multiply(this.coefficients[n],e)}return new Ut(this.field,r)}multiplyByMonomial(e,t){if(e<0){throw new l}if(t===0){return new Ut(this.field,new Int32Array([0]))}let r=this.coefficients.length;let n=new Int32Array(r+e);for(let e=0;e<r;e++){n[e]=this.field.multiply(this.coefficients[e],t)}return new Ut(this.field,n)}toString(){let e=new N;for(let t=this.getDegree();t>=0;t--){let r=this.getCoefficient(t);if(r!==0){if(r<0){e.append(" - ");r=-r}else{if(e.length()>0){e.append(" + ")}}if(t===0||r!==1){e.append(r)}if(t!==0){if(t===1){e.append("x")}else{e.append("x^");e.append(t)}}}}return e.toString()}}class Ht{add(e,t){return(e+t)%this.modulus}subtract(e,t){return(this.modulus+e-t)%this.modulus}exp(e){return this.expTable[e]}log(e){if(e===0){throw new l}return this.logTable[e]}inverse(e){if(e===0){throw new z}return this.expTable[this.modulus-this.logTable[e]-1]}multiply(e,t){if(e===0||t===0){return 0}return this.expTable[(this.logTable[e]+this.logTable[t])%(this.modulus-1)]}getSize(){return this.modulus}equals(e){return e===this}}
/*
     * Copyright 2012 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Gt extends Ht{constructor(e,t){super();this.modulus=e;this.expTable=new Int32Array(e);this.logTable=new Int32Array(e);let r=1;for(let n=0;n<e;n++){this.expTable[n]=r;r=r*t%e}for(let t=0;t<e-1;t++){this.logTable[this.expTable[t]]=t}this.zero=new Ut(this,new Int32Array([0]));this.one=new Ut(this,new Int32Array([1]))}getZero(){return this.zero}getOne(){return this.one}buildMonomial(e,t){if(e<0){throw new l}if(t===0){return this.zero}let r=new Int32Array(e+1);r[0]=t;return new Ut(this,r)}}Gt.PDF417_GF=new Gt(vt.NUMBER_OF_CODEWORDS,3);
/*
    * Copyright 2012 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Xt{constructor(){this.field=Gt.PDF417_GF}decode(e,t,r){let n=new Ut(this.field,e);let i=new Int32Array(t);let s=false;for(let e=t;e>0;e--){let r=n.evaluateAt(this.field.exp(e));i[t-e]=r;if(r!==0){s=true}}if(!s){return 0}let o=this.field.getOne();if(r!=null){for(const t of r){let r=this.field.exp(e.length-1-t);let n=new Ut(this.field,new Int32Array([this.field.subtract(0,r),1]));o=o.multiply(n)}}let a=new Ut(this.field,i);let l=this.runEuclideanAlgorithm(this.field.buildMonomial(t,1),a,t);let h=l[0];let u=l[1];let d=this.findErrorLocations(h);let f=this.findErrorMagnitudes(u,h,d);for(let t=0;t<d.length;t++){let r=e.length-1-this.field.log(d[t]);if(r<0){throw c.getChecksumInstance()}e[r]=this.field.subtract(e[r],f[t])}return d.length}runEuclideanAlgorithm(e,t,r){if(e.getDegree()<t.getDegree()){let r=e;e=t;t=r}let n=e;let i=t;let s=this.field.getZero();let o=this.field.getOne();while(i.getDegree()>=Math.round(r/2)){let e=n;let t=s;n=i;s=o;if(n.isZero()){throw c.getChecksumInstance()}i=e;let r=this.field.getZero();let a=n.getCoefficient(n.getDegree());let l=this.field.inverse(a);while(i.getDegree()>=n.getDegree()&&!i.isZero()){let e=i.getDegree()-n.getDegree();let t=this.field.multiply(i.getCoefficient(i.getDegree()),l);r=r.add(this.field.buildMonomial(e,t));i=i.subtract(n.multiplyByMonomial(e,t))}o=r.multiply(s).subtract(t).negative()}let a=o.getCoefficient(0);if(a===0){throw c.getChecksumInstance()}let l=this.field.inverse(a);let h=o.multiply(l);let u=i.multiply(l);return[h,u]}findErrorLocations(e){let t=e.getDegree();let r=new Int32Array(t);let n=0;for(let i=1;i<this.field.getSize()&&n<t;i++){if(e.evaluateAt(i)===0){r[n]=this.field.inverse(i);n++}}if(n!==t){throw c.getChecksumInstance()}return r}findErrorMagnitudes(e,t,r){let n=t.getDegree();let i=new Int32Array(n);for(let e=1;e<=n;e++){i[n-e]=this.field.multiply(e,t.getCoefficient(e))}let s=new Ut(this.field,i);let o=r.length;let a=new Int32Array(o);for(let t=0;t<o;t++){let n=this.field.inverse(r[t]);let i=this.field.subtract(0,e.evaluateAt(n));let o=this.field.inverse(s.evaluateAt(n));a[t]=this.field.multiply(i,o)}return a}}
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Wt{constructor(e,t,r,n,i){if(e instanceof Wt){this.constructor_2(e)}else{this.constructor_1(e,t,r,n,i)}}constructor_1(e,t,r,n,i){const s=t==null||r==null;const o=n==null||i==null;if(s&&o){throw new D}if(s){t=new ee(0,n.getY());r=new ee(0,i.getY())}else if(o){n=new ee(e.getWidth()-1,t.getY());i=new ee(e.getWidth()-1,r.getY())}this.image=e;this.topLeft=t;this.bottomLeft=r;this.topRight=n;this.bottomRight=i;this.minX=Math.trunc(Math.min(t.getX(),r.getX()));this.maxX=Math.trunc(Math.max(n.getX(),i.getX()));this.minY=Math.trunc(Math.min(t.getY(),n.getY()));this.maxY=Math.trunc(Math.max(r.getY(),i.getY()))}constructor_2(e){this.image=e.image;this.topLeft=e.getTopLeft();this.bottomLeft=e.getBottomLeft();this.topRight=e.getTopRight();this.bottomRight=e.getBottomRight();this.minX=e.getMinX();this.maxX=e.getMaxX();this.minY=e.getMinY();this.maxY=e.getMaxY()}static merge(e,t){if(e==null){return t}if(t==null){return e}return new Wt(e.image,e.topLeft,e.bottomLeft,t.topRight,t.bottomRight)}addMissingRows(e,t,r){let n=this.topLeft;let i=this.bottomLeft;let s=this.topRight;let o=this.bottomRight;if(e>0){let t=r?this.topLeft:this.topRight;let i=Math.trunc(t.getY()-e);if(i<0){i=0}let o=new ee(t.getX(),i);if(r){n=o}else{s=o}}if(t>0){let e=r?this.bottomLeft:this.bottomRight;let n=Math.trunc(e.getY()+t);if(n>=this.image.getHeight()){n=this.image.getHeight()-1}let s=new ee(e.getX(),n);if(r){i=s}else{o=s}}return new Wt(this.image,n,i,s,o)}getMinX(){return this.minX}getMaxX(){return this.maxX}getMinY(){return this.minY}getMaxY(){return this.maxY}getTopLeft(){return this.topLeft}getTopRight(){return this.topRight}getBottomLeft(){return this.bottomLeft}getBottomRight(){return this.bottomRight}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class zt{constructor(e,t,r,n){this.columnCount=e;this.errorCorrectionLevel=n;this.rowCountUpperPart=t;this.rowCountLowerPart=r;this.rowCount=t+r}getColumnCount(){return this.columnCount}getErrorCorrectionLevel(){return this.errorCorrectionLevel}getRowCount(){return this.rowCount}getRowCountUpperPart(){return this.rowCountUpperPart}getRowCountLowerPart(){return this.rowCountLowerPart}}class Yt{constructor(){this.buffer=""}static form(e,t){let r=-1;function n(e,n,i,s,o,a){if(e==="%%")return"%";if(t[++r]===undefined)return undefined;e=s?parseInt(s.substr(1)):undefined;let l=o?parseInt(o.substr(1)):undefined;let h;switch(a){case"s":h=t[r];break;case"c":h=t[r][0];break;case"f":h=parseFloat(t[r]).toFixed(e);break;case"p":h=parseFloat(t[r]).toPrecision(e);break;case"e":h=parseFloat(t[r]).toExponential(e);break;case"x":h=parseInt(t[r]).toString(l?l:16);break;case"d":h=parseFloat(parseInt(t[r],l?l:10).toPrecision(e)).toFixed(0);break}h=typeof h==="object"?JSON.stringify(h):(+h).toString(l);let c=parseInt(i);let u=i&&i[0]+""==="0"?"0":" ";while(h.length<c)h=n!==undefined?h+u:u+h;return h}let i=/%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;return e.replace(i,n)}format(e,...t){this.buffer+=Yt.form(e,t)}toString(){return this.buffer}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Zt{constructor(e){this.boundingBox=new Wt(e);this.codewords=new Array(e.getMaxY()-e.getMinY()+1)}getCodewordNearby(e){let t=this.getCodeword(e);if(t!=null){return t}for(let r=1;r<Zt.MAX_NEARBY_DISTANCE;r++){let n=this.imageRowToCodewordIndex(e)-r;if(n>=0){t=this.codewords[n];if(t!=null){return t}}n=this.imageRowToCodewordIndex(e)+r;if(n<this.codewords.length){t=this.codewords[n];if(t!=null){return t}}}return null}imageRowToCodewordIndex(e){return e-this.boundingBox.getMinY()}setCodeword(e,t){this.codewords[this.imageRowToCodewordIndex(e)]=t}getCodeword(e){return this.codewords[this.imageRowToCodewordIndex(e)]}getBoundingBox(){return this.boundingBox}getCodewords(){return this.codewords}toString(){const e=new Yt;let t=0;for(const r of this.codewords){if(r==null){e.format("%3d:    |   %n",t++);continue}e.format("%3d: %3d|%3d%n",t++,r.getRowNumber(),r.getValue())}return e.toString()}}Zt.MAX_NEARBY_DISTANCE=5;
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Kt{constructor(){this.values=new Map}setValue(e){e=Math.trunc(e);let t=this.values.get(e);if(t==null){t=0}t++;this.values.set(e,t)}getValue(){let e=-1;let t=new Array;for(const[r,n]of this.values.entries()){const i={getKey:()=>r,getValue:()=>n};if(i.getValue()>e){e=i.getValue();t=[];t.push(i.getKey())}else if(i.getValue()===e){t.push(i.getKey())}}return vt.toIntArray(t)}getConfidence(e){return this.values.get(e)}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class qt extends Zt{constructor(e,t){super(e);this._isLeft=t}setRowNumbers(){for(let e of this.getCodewords()){if(e!=null){e.setRowNumberAsRowIndicatorColumn()}}}adjustCompleteIndicatorColumnRowNumbers(e){let t=this.getCodewords();this.setRowNumbers();this.removeIncorrectCodewords(t,e);let r=this.getBoundingBox();let n=this._isLeft?r.getTopLeft():r.getTopRight();let i=this._isLeft?r.getBottomLeft():r.getBottomRight();let s=this.imageRowToCodewordIndex(Math.trunc(n.getY()));let o=this.imageRowToCodewordIndex(Math.trunc(i.getY()));let a=-1;let l=1;let h=0;for(let r=s;r<o;r++){if(t[r]==null){continue}let n=t[r];let i=n.getRowNumber()-a;if(i===0){h++}else if(i===1){l=Math.max(l,h);h=1;a=n.getRowNumber()}else if(i<0||n.getRowNumber()>=e.getRowCount()||i>r){t[r]=null}else{let e;if(l>2){e=(l-2)*i}else{e=i}let s=e>=r;for(let n=1;n<=e&&!s;n++){s=t[r-n]!=null}if(s){t[r]=null}else{a=n.getRowNumber();h=1}}}}getRowHeights(){let e=this.getBarcodeMetadata();if(e==null){return null}this.adjustIncompleteIndicatorColumnRowNumbers(e);let t=new Int32Array(e.getRowCount());for(let e of this.getCodewords()){if(e!=null){let r=e.getRowNumber();if(r>=t.length){continue}t[r]++}}return t}adjustIncompleteIndicatorColumnRowNumbers(e){let t=this.getBoundingBox();let r=this._isLeft?t.getTopLeft():t.getTopRight();let n=this._isLeft?t.getBottomLeft():t.getBottomRight();let i=this.imageRowToCodewordIndex(Math.trunc(r.getY()));let s=this.imageRowToCodewordIndex(Math.trunc(n.getY()));let o=this.getCodewords();let a=-1;for(let t=i;t<s;t++){if(o[t]==null){continue}let r=o[t];r.setRowNumberAsRowIndicatorColumn();let n=r.getRowNumber()-a;if(n===0);else if(n===1){a=r.getRowNumber()}else if(r.getRowNumber()>=e.getRowCount()){o[t]=null}else{a=r.getRowNumber()}}}getBarcodeMetadata(){let e=this.getCodewords();let t=new Kt;let r=new Kt;let n=new Kt;let i=new Kt;for(let s of e){if(s==null){continue}s.setRowNumberAsRowIndicatorColumn();let e=s.getValue()%30;let o=s.getRowNumber();if(!this._isLeft){o+=2}switch(o%3){case 0:r.setValue(e*3+1);break;case 1:i.setValue(e/3);n.setValue(e%3);break;case 2:t.setValue(e+1);break}}if(t.getValue().length===0||r.getValue().length===0||n.getValue().length===0||i.getValue().length===0||t.getValue()[0]<1||r.getValue()[0]+n.getValue()[0]<vt.MIN_ROWS_IN_BARCODE||r.getValue()[0]+n.getValue()[0]>vt.MAX_ROWS_IN_BARCODE){return null}let s=new zt(t.getValue()[0],r.getValue()[0],n.getValue()[0],i.getValue()[0]);this.removeIncorrectCodewords(e,s);return s}removeIncorrectCodewords(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(e[r]==null){continue}let i=n.getValue()%30;let s=n.getRowNumber();if(s>t.getRowCount()){e[r]=null;continue}if(!this._isLeft){s+=2}switch(s%3){case 0:if(i*3+1!==t.getRowCountUpperPart()){e[r]=null}break;case 1:if(Math.trunc(i/3)!==t.getErrorCorrectionLevel()||i%3!==t.getRowCountLowerPart()){e[r]=null}break;case 2:if(i+1!==t.getColumnCount()){e[r]=null}break}}}isLeft(){return this._isLeft}toString(){return"IsLeft: "+this._isLeft+"\n"+super.toString()}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Qt{constructor(e,t){this.ADJUST_ROW_NUMBER_SKIP=2;this.barcodeMetadata=e;this.barcodeColumnCount=e.getColumnCount();this.boundingBox=t;this.detectionResultColumns=new Array(this.barcodeColumnCount+2)}getDetectionResultColumns(){this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[0]);this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[this.barcodeColumnCount+1]);let e=vt.MAX_CODEWORDS_IN_BARCODE;let t;do{t=e;e=this.adjustRowNumbersAndGetCount()}while(e>0&&e<t);return this.detectionResultColumns}adjustIndicatorColumnRowNumbers(e){if(e!=null){e.adjustCompleteIndicatorColumnRowNumbers(this.barcodeMetadata)}}adjustRowNumbersAndGetCount(){let e=this.adjustRowNumbersByRow();if(e===0){return 0}for(let e=1;e<this.barcodeColumnCount+1;e++){let t=this.detectionResultColumns[e].getCodewords();for(let r=0;r<t.length;r++){if(t[r]==null){continue}if(!t[r].hasValidRowNumber()){this.adjustRowNumbers(e,r,t)}}}return e}adjustRowNumbersByRow(){this.adjustRowNumbersFromBothRI();let e=this.adjustRowNumbersFromLRI();return e+this.adjustRowNumbersFromRRI()}adjustRowNumbersFromBothRI(){if(this.detectionResultColumns[0]==null||this.detectionResultColumns[this.barcodeColumnCount+1]==null){return}let e=this.detectionResultColumns[0].getCodewords();let t=this.detectionResultColumns[this.barcodeColumnCount+1].getCodewords();for(let r=0;r<e.length;r++){if(e[r]!=null&&t[r]!=null&&e[r].getRowNumber()===t[r].getRowNumber()){for(let t=1;t<=this.barcodeColumnCount;t++){let n=this.detectionResultColumns[t].getCodewords()[r];if(n==null){continue}n.setRowNumber(e[r].getRowNumber());if(!n.hasValidRowNumber()){this.detectionResultColumns[t].getCodewords()[r]=null}}}}}adjustRowNumbersFromRRI(){if(this.detectionResultColumns[this.barcodeColumnCount+1]==null){return 0}let e=0;let t=this.detectionResultColumns[this.barcodeColumnCount+1].getCodewords();for(let r=0;r<t.length;r++){if(t[r]==null){continue}let n=t[r].getRowNumber();let i=0;for(let t=this.barcodeColumnCount+1;t>0&&i<this.ADJUST_ROW_NUMBER_SKIP;t--){let s=this.detectionResultColumns[t].getCodewords()[r];if(s!=null){i=Qt.adjustRowNumberIfValid(n,i,s);if(!s.hasValidRowNumber()){e++}}}}return e}adjustRowNumbersFromLRI(){if(this.detectionResultColumns[0]==null){return 0}let e=0;let t=this.detectionResultColumns[0].getCodewords();for(let r=0;r<t.length;r++){if(t[r]==null){continue}let n=t[r].getRowNumber();let i=0;for(let t=1;t<this.barcodeColumnCount+1&&i<this.ADJUST_ROW_NUMBER_SKIP;t++){let s=this.detectionResultColumns[t].getCodewords()[r];if(s!=null){i=Qt.adjustRowNumberIfValid(n,i,s);if(!s.hasValidRowNumber()){e++}}}}return e}static adjustRowNumberIfValid(e,t,r){if(r==null){return t}if(!r.hasValidRowNumber()){if(r.isValidRowNumber(e)){r.setRowNumber(e);t=0}else{++t}}return t}adjustRowNumbers(e,t,r){if(this.detectionResultColumns[e-1]==null){return}let n=r[t];let i=this.detectionResultColumns[e-1].getCodewords();let s=i;if(this.detectionResultColumns[e+1]!=null){s=this.detectionResultColumns[e+1].getCodewords()}let o=new Array(14);o[2]=i[t];o[3]=s[t];if(t>0){o[0]=r[t-1];o[4]=i[t-1];o[5]=s[t-1]}if(t>1){o[8]=r[t-2];o[10]=i[t-2];o[11]=s[t-2]}if(t<r.length-1){o[1]=r[t+1];o[6]=i[t+1];o[7]=s[t+1]}if(t<r.length-2){o[9]=r[t+2];o[12]=i[t+2];o[13]=s[t+2]}for(let e of o){if(Qt.adjustRowNumber(n,e)){return}}}static adjustRowNumber(e,t){if(t==null){return false}if(t.hasValidRowNumber()&&t.getBucket()===e.getBucket()){e.setRowNumber(t.getRowNumber());return true}return false}getBarcodeColumnCount(){return this.barcodeColumnCount}getBarcodeRowCount(){return this.barcodeMetadata.getRowCount()}getBarcodeECLevel(){return this.barcodeMetadata.getErrorCorrectionLevel()}setBoundingBox(e){this.boundingBox=e}getBoundingBox(){return this.boundingBox}setDetectionResultColumn(e,t){this.detectionResultColumns[e]=t}getDetectionResultColumn(e){return this.detectionResultColumns[e]}toString(){let e=this.detectionResultColumns[0];if(e==null){e=this.detectionResultColumns[this.barcodeColumnCount+1]}let t=new Yt;for(let r=0;r<e.getCodewords().length;r++){t.format("CW %3d:",r);for(let e=0;e<this.barcodeColumnCount+2;e++){if(this.detectionResultColumns[e]==null){t.format("    |   ");continue}let n=this.detectionResultColumns[e].getCodewords()[r];if(n==null){t.format("    |   ");continue}t.format(" %3d|%3d",n.getRowNumber(),n.getValue())}t.format("%n")}return t.toString()}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class jt{constructor(e,t,r,n){this.rowNumber=jt.BARCODE_ROW_UNKNOWN;this.startX=Math.trunc(e);this.endX=Math.trunc(t);this.bucket=Math.trunc(r);this.value=Math.trunc(n)}hasValidRowNumber(){return this.isValidRowNumber(this.rowNumber)}isValidRowNumber(e){return e!==jt.BARCODE_ROW_UNKNOWN&&this.bucket===e%3*3}setRowNumberAsRowIndicatorColumn(){this.rowNumber=Math.trunc(Math.trunc(this.value/30)*3+Math.trunc(this.bucket/3))}getWidth(){return this.endX-this.startX}getStartX(){return this.startX}getEndX(){return this.endX}getBucket(){return this.bucket}getValue(){return this.value}getRowNumber(){return this.rowNumber}setRowNumber(e){this.rowNumber=e}toString(){return this.rowNumber+"|"+this.value}}jt.BARCODE_ROW_UNKNOWN=-1;
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Jt{static initialize(){for(let e=0;e<vt.SYMBOL_TABLE.length;e++){let t=vt.SYMBOL_TABLE[e];let r=t&1;for(let n=0;n<vt.BARS_IN_MODULE;n++){let i=0;while((t&1)===r){i+=1;t>>=1}r=t&1;if(!Jt.RATIOS_TABLE[e]){Jt.RATIOS_TABLE[e]=new Array(vt.BARS_IN_MODULE)}Jt.RATIOS_TABLE[e][vt.BARS_IN_MODULE-n-1]=Math.fround(i/vt.MODULES_IN_CODEWORD)}}this.bSymbolTableReady=true}static getDecodedValue(e){let t=Jt.getDecodedCodewordValue(Jt.sampleBitCounts(e));if(t!==-1){return t}return Jt.getClosestDecodedValue(e)}static sampleBitCounts(e){let t=J.sum(e);let r=new Int32Array(vt.BARS_IN_MODULE);let n=0;let i=0;for(let s=0;s<vt.MODULES_IN_CODEWORD;s++){let o=t/(2*vt.MODULES_IN_CODEWORD)+s*t/vt.MODULES_IN_CODEWORD;if(i+e[n]<=o){i+=e[n];n++}r[n]++}return r}static getDecodedCodewordValue(e){let t=Jt.getBitValue(e);return vt.getCodeword(t)===-1?-1:t}static getBitValue(e){let t=0;for(let r=0;r<e.length;r++){for(let n=0;n<e[r];n++){t=t<<1|(r%2===0?1:0)}}return Math.trunc(t)}static getClosestDecodedValue(e){let t=J.sum(e);let r=new Array(vt.BARS_IN_MODULE);if(t>1){for(let n=0;n<r.length;n++){r[n]=Math.fround(e[n]/t)}}let n=$.MAX_VALUE;let i=-1;if(!this.bSymbolTableReady){Jt.initialize()}for(let e=0;e<Jt.RATIOS_TABLE.length;e++){let t=0;let s=Jt.RATIOS_TABLE[e];for(let e=0;e<vt.BARS_IN_MODULE;e++){let i=Math.fround(s[e]-r[e]);t+=Math.fround(i*i);if(t>=n){break}}if(t<n){n=t;i=vt.SYMBOL_TABLE[e]}}return i}}Jt.bSymbolTableReady=false;Jt.RATIOS_TABLE=new Array(vt.SYMBOL_TABLE.length).map(e=>e=new Array(vt.BARS_IN_MODULE));
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class $t{constructor(){this.segmentCount=-1;this.fileSize=-1;this.timestamp=-1;this.checksum=-1}getSegmentIndex(){return this.segmentIndex}setSegmentIndex(e){this.segmentIndex=e}getFileId(){return this.fileId}setFileId(e){this.fileId=e}getOptionalData(){return this.optionalData}setOptionalData(e){this.optionalData=e}isLastSegment(){return this.lastSegment}setLastSegment(e){this.lastSegment=e}getSegmentCount(){return this.segmentCount}setSegmentCount(e){this.segmentCount=e}getSender(){return this.sender||null}setSender(e){this.sender=e}getAddressee(){return this.addressee||null}setAddressee(e){this.addressee=e}getFileName(){return this.fileName}setFileName(e){this.fileName=e}getFileSize(){return this.fileSize}setFileSize(e){this.fileSize=e}getChecksum(){return this.checksum}setChecksum(e){this.checksum=e}getTimestamp(){return this.timestamp}setTimestamp(e){this.timestamp=e}}class er{static parseLong(e,t=undefined){return parseInt(e,t)}}class tr extends o{}tr.kind="NullPointerException";
/*
     * Copyright (c) 1994, 2004, Oracle and/or its affiliates. All rights reserved.
     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
     *
     * This code is free software; you can redistribute it and/or modify it
     * under the terms of the GNU General Public License version 2 only, as
     * published by the Free Software Foundation.  Oracle designates this
     * particular file as subject to the "Classpath" exception as provided
     * by Oracle in the LICENSE file that accompanied this code.
     *
     * This code is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     * version 2 for more details (a copy is included in the LICENSE file that
     * accompanied this code).
     *
     * You should have received a copy of the GNU General Public License version
     * 2 along with this work; if not, write to the Free Software Foundation,
     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
     *
     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
     * or visit www.oracle.com if you need additional information or have any
     * questions.
     */class rr{writeBytes(e){this.writeBytesOffset(e,0,e.length)}writeBytesOffset(e,t,r){if(e==null){throw new tr}else if(t<0||t>e.length||r<0||t+r>e.length||t+r<0){throw new f}else if(r===0){return}for(let n=0;n<r;n++){this.write(e[t+n])}}flush(){}close(){}}class nr extends o{}
/*
     * Copyright (c) 1994, 2010, Oracle and/or its affiliates. All rights reserved.
     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
     *
     * This code is free software; you can redistribute it and/or modify it
     * under the terms of the GNU General Public License version 2 only, as
     * published by the Free Software Foundation.  Oracle designates this
     * particular file as subject to the "Classpath" exception as provided
     * by Oracle in the LICENSE file that accompanied this code.
     *
     * This code is distributed in the hope that it will be useful, but WITHOUT
     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
     * version 2 for more details (a copy is included in the LICENSE file that
     * accompanied this code).
     *
     * You should have received a copy of the GNU General Public License version
     * 2 along with this work; if not, write to the Free Software Foundation,
     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
     *
     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
     * or visit www.oracle.com if you need additional information or have any
     * questions.
     */class ir extends rr{constructor(e=32){super();this.count=0;if(e<0){throw new l("Negative initial size: "+e)}this.buf=new Uint8Array(e)}ensureCapacity(e){if(e-this.buf.length>0)this.grow(e)}grow(e){let t=this.buf.length;let r=t<<1;if(r-e<0)r=e;if(r<0){if(e<0)throw new nr;r=A.MAX_VALUE}this.buf=w.copyOfUint8Array(this.buf,r)}write(e){this.ensureCapacity(this.count+1);this.buf[this.count]=e;this.count+=1}writeBytesOffset(e,t,r){if(t<0||t>e.length||r<0||t+r-e.length>0){throw new f}this.ensureCapacity(this.count+r);d.arraycopy(e,t,this.buf,this.count,r);this.count+=r}writeTo(e){e.writeBytesOffset(this.buf,0,this.count)}reset(){this.count=0}toByteArray(){return w.copyOfUint8Array(this.buf,this.count)}size(){return this.count}toString(e){if(!e){return this.toString_void()}if(typeof e==="string"){return this.toString_string(e)}return this.toString_number(e)}toString_void(){return new String(this.buf).toString()}toString_string(e){return new String(this.buf).toString()}toString_number(e){return new String(this.buf).toString()}close(){}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var sr;(function(e){e[e["ALPHA"]=0]="ALPHA";e[e["LOWER"]=1]="LOWER";e[e["MIXED"]=2]="MIXED";e[e["PUNCT"]=3]="PUNCT";e[e["ALPHA_SHIFT"]=4]="ALPHA_SHIFT";e[e["PUNCT_SHIFT"]=5]="PUNCT_SHIFT"})(sr||(sr={}));function or(){if(typeof window!=="undefined"){return window["BigInt"]||null}if(typeof global!=="undefined"){return global["BigInt"]||null}if(typeof self!=="undefined"){return self["BigInt"]||null}throw new Error("Can't search globals for BigInt!")}let ar;function lr(e){if(typeof ar==="undefined"){ar=or()}if(ar===null){throw new Error("BigInt is not supported!")}return ar(e)}function hr(){let e=[];e[0]=lr(1);let t=lr(900);e[1]=t;for(let r=2;r<16;r++){e[r]=e[r-1]*t}return e}class cr{static decode(e,t){let r=new N("");let n=S.ISO8859_1;r.enableDecoding(n);let i=1;let s=e[i++];let o=new $t;while(i<e[0]){switch(s){case cr.TEXT_COMPACTION_MODE_LATCH:i=cr.textCompaction(e,i,r);break;case cr.BYTE_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH_6:i=cr.byteCompaction(s,e,n,i,r);break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:r.append(e[i++]);break;case cr.NUMERIC_COMPACTION_MODE_LATCH:i=cr.numericCompaction(e,i,r);break;case cr.ECI_CHARSET:let t=S.getCharacterSetECIByValue(e[i++]);break;case cr.ECI_GENERAL_PURPOSE:i+=2;break;case cr.ECI_USER_DEFINED:i++;break;case cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK:i=cr.decodeMacroBlock(e,i,o);break;case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case cr.MACRO_PDF417_TERMINATOR:throw new _;default:i--;i=cr.textCompaction(e,i,r);break}if(i<e.length){s=e[i++]}else{throw _.getFormatInstance()}}if(r.length()===0){throw _.getFormatInstance()}let a=new G(null,r.toString(),null,t);a.setOther(o);return a}static decodeMacroBlock(e,t,r){if(t+cr.NUMBER_OF_SEQUENCE_CODEWORDS>e[0]){throw _.getFormatInstance()}let n=new Int32Array(cr.NUMBER_OF_SEQUENCE_CODEWORDS);for(let r=0;r<cr.NUMBER_OF_SEQUENCE_CODEWORDS;r++,t++){n[r]=e[t]}r.setSegmentIndex(A.parseInt(cr.decodeBase900toBase10(n,cr.NUMBER_OF_SEQUENCE_CODEWORDS)));let i=new N;t=cr.textCompaction(e,t,i);r.setFileId(i.toString());let s=-1;if(e[t]===cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD){s=t+1}while(t<e[0]){switch(e[t]){case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:t++;switch(e[t]){case cr.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME:let n=new N;t=cr.textCompaction(e,t+1,n);r.setFileName(n.toString());break;case cr.MACRO_PDF417_OPTIONAL_FIELD_SENDER:let i=new N;t=cr.textCompaction(e,t+1,i);r.setSender(i.toString());break;case cr.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE:let s=new N;t=cr.textCompaction(e,t+1,s);r.setAddressee(s.toString());break;case cr.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT:let o=new N;t=cr.numericCompaction(e,t+1,o);r.setSegmentCount(A.parseInt(o.toString()));break;case cr.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP:let a=new N;t=cr.numericCompaction(e,t+1,a);r.setTimestamp(er.parseLong(a.toString()));break;case cr.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM:let l=new N;t=cr.numericCompaction(e,t+1,l);r.setChecksum(A.parseInt(l.toString()));break;case cr.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE:let h=new N;t=cr.numericCompaction(e,t+1,h);r.setFileSize(er.parseLong(h.toString()));break;default:throw _.getFormatInstance()}break;case cr.MACRO_PDF417_TERMINATOR:t++;r.setLastSegment(true);break;default:throw _.getFormatInstance()}}if(s!==-1){let n=t-s;if(r.isLastSegment()){n--}r.setOptionalData(w.copyOfRange(e,s,s+n))}return t}static textCompaction(e,t,r){let n=new Int32Array((e[0]-t)*2);let i=new Int32Array((e[0]-t)*2);let s=0;let o=false;while(t<e[0]&&!o){let r=e[t++];if(r<cr.TEXT_COMPACTION_MODE_LATCH){n[s]=r/30;n[s+1]=r%30;s+=2}else{switch(r){case cr.TEXT_COMPACTION_MODE_LATCH:n[s++]=cr.TEXT_COMPACTION_MODE_LATCH;break;case cr.BYTE_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH_6:case cr.NUMERIC_COMPACTION_MODE_LATCH:case cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case cr.MACRO_PDF417_TERMINATOR:t--;o=true;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n[s]=cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE;r=e[t++];i[s]=r;s++;break}}}cr.decodeTextCompaction(n,i,s,r);return t}static decodeTextCompaction(e,t,r,n){let i=sr.ALPHA;let s=sr.ALPHA;let o=0;while(o<r){let r=e[o];let a="";switch(i){case sr.ALPHA:if(r<26){a=String.fromCharCode(65+r)}else{switch(r){case 26:a=" ";break;case cr.LL:i=sr.LOWER;break;case cr.ML:i=sr.MIXED;break;case cr.PS:s=i;i=sr.PUNCT_SHIFT;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n.append(t[o]);break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break;case sr.LOWER:if(r<26){a=String.fromCharCode(97+r)}else{switch(r){case 26:a=" ";break;case cr.AS:s=i;i=sr.ALPHA_SHIFT;break;case cr.ML:i=sr.MIXED;break;case cr.PS:s=i;i=sr.PUNCT_SHIFT;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n.append(t[o]);break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break;case sr.MIXED:if(r<cr.PL){a=cr.MIXED_CHARS[r]}else{switch(r){case cr.PL:i=sr.PUNCT;break;case 26:a=" ";break;case cr.LL:i=sr.LOWER;break;case cr.AL:i=sr.ALPHA;break;case cr.PS:s=i;i=sr.PUNCT_SHIFT;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n.append(t[o]);break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break;case sr.PUNCT:if(r<cr.PAL){a=cr.PUNCT_CHARS[r]}else{switch(r){case cr.PAL:i=sr.ALPHA;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n.append(t[o]);break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break;case sr.ALPHA_SHIFT:i=s;if(r<26){a=String.fromCharCode(65+r)}else{switch(r){case 26:a=" ";break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break;case sr.PUNCT_SHIFT:i=s;if(r<cr.PAL){a=cr.PUNCT_CHARS[r]}else{switch(r){case cr.PAL:i=sr.ALPHA;break;case cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:n.append(t[o]);break;case cr.TEXT_COMPACTION_MODE_LATCH:i=sr.ALPHA;break}}break}if(a!==""){n.append(a)}o++}}static byteCompaction(e,t,r,n,i){let s=new ir;let o=0;let a=0;let l=false;switch(e){case cr.BYTE_COMPACTION_MODE_LATCH:let e=new Int32Array(6);let r=t[n++];while(n<t[0]&&!l){e[o++]=r;a=900*a+r;r=t[n++];switch(r){case cr.TEXT_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH:case cr.NUMERIC_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH_6:case cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case cr.MACRO_PDF417_TERMINATOR:n--;l=true;break;default:if(o%5===0&&o>0){for(let e=0;e<6;++e){s.write(Number(lr(a)>>lr(8*(5-e))))}a=0;o=0}break}}if(n===t[0]&&r<cr.TEXT_COMPACTION_MODE_LATCH){e[o++]=r}for(let t=0;t<o;t++){s.write(e[t])}break;case cr.BYTE_COMPACTION_MODE_LATCH_6:while(n<t[0]&&!l){let e=t[n++];if(e<cr.TEXT_COMPACTION_MODE_LATCH){o++;a=900*a+e}else{switch(e){case cr.TEXT_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH:case cr.NUMERIC_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH_6:case cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case cr.MACRO_PDF417_TERMINATOR:n--;l=true;break}}if(o%5===0&&o>0){for(let e=0;e<6;++e){s.write(Number(lr(a)>>lr(8*(5-e))))}a=0;o=0}}break}i.append(T.decode(s.toByteArray(),r));return n}static numericCompaction(e,t,r){let n=0;let i=false;let s=new Int32Array(cr.MAX_NUMERIC_CODEWORDS);while(t<e[0]&&!i){let o=e[t++];if(t===e[0]){i=true}if(o<cr.TEXT_COMPACTION_MODE_LATCH){s[n]=o;n++}else{switch(o){case cr.TEXT_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH:case cr.BYTE_COMPACTION_MODE_LATCH_6:case cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK:case cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:case cr.MACRO_PDF417_TERMINATOR:t--;i=true;break}}if((n%cr.MAX_NUMERIC_CODEWORDS===0||o===cr.NUMERIC_COMPACTION_MODE_LATCH||i)&&n>0){r.append(cr.decodeBase900toBase10(s,n));n=0}}return t}static decodeBase900toBase10(e,t){let r=lr(0);for(let n=0;n<t;n++){r+=cr.EXP900[t-n-1]*lr(e[n])}let n=r.toString();if(n.charAt(0)!=="1"){throw new _}return n.substring(1)}}cr.TEXT_COMPACTION_MODE_LATCH=900;cr.BYTE_COMPACTION_MODE_LATCH=901;cr.NUMERIC_COMPACTION_MODE_LATCH=902;cr.BYTE_COMPACTION_MODE_LATCH_6=924;cr.ECI_USER_DEFINED=925;cr.ECI_GENERAL_PURPOSE=926;cr.ECI_CHARSET=927;cr.BEGIN_MACRO_PDF417_CONTROL_BLOCK=928;cr.BEGIN_MACRO_PDF417_OPTIONAL_FIELD=923;cr.MACRO_PDF417_TERMINATOR=922;cr.MODE_SHIFT_TO_BYTE_COMPACTION_MODE=913;cr.MAX_NUMERIC_CODEWORDS=15;cr.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME=0;cr.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT=1;cr.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP=2;cr.MACRO_PDF417_OPTIONAL_FIELD_SENDER=3;cr.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE=4;cr.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE=5;cr.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM=6;cr.PL=25;cr.LL=27;cr.AS=27;cr.ML=28;cr.AL=28;cr.PS=29;cr.PAL=29;cr.PUNCT_CHARS=";<>@[\\]_`~!\r\t,:\n-.$/\"|*()?{}'";cr.MIXED_CHARS="0123456789&\r\t,:#-.$/+%*=^";cr.EXP900=or()?hr():[];cr.NUMBER_OF_SEQUENCE_CODEWORDS=2;
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class ur{constructor(){}static decode(e,t,r,n,i,s,o){let a=new Wt(e,t,r,n,i);let l=null;let h=null;let c;for(let r=true;;r=false){if(t!=null){l=ur.getRowIndicatorColumn(e,a,t,true,s,o)}if(n!=null){h=ur.getRowIndicatorColumn(e,a,n,false,s,o)}c=ur.merge(l,h);if(c==null){throw D.getNotFoundInstance()}let i=c.getBoundingBox();if(r&&i!=null&&(i.getMinY()<a.getMinY()||i.getMaxY()>a.getMaxY())){a=i}else{break}}c.setBoundingBox(a);let u=c.getBarcodeColumnCount()+1;c.setDetectionResultColumn(0,l);c.setDetectionResultColumn(u,h);let d=l!=null;for(let t=1;t<=u;t++){let r=d?t:u-t;if(c.getDetectionResultColumn(r)!==undefined){continue}let n;if(r===0||r===u){n=new qt(a,r===0)}else{n=new Zt(a)}c.setDetectionResultColumn(r,n);let i=-1;let l=i;for(let t=a.getMinY();t<=a.getMaxY();t++){i=ur.getStartColumn(c,r,t,d);if(i<0||i>a.getMaxX()){if(l===-1){continue}i=l}let h=ur.detectCodeword(e,a.getMinX(),a.getMaxX(),d,i,t,s,o);if(h!=null){n.setCodeword(t,h);l=i;s=Math.min(s,h.getWidth());o=Math.max(o,h.getWidth())}}}return ur.createDecoderResult(c)}static merge(e,t){if(e==null&&t==null){return null}let r=ur.getBarcodeMetadata(e,t);if(r==null){return null}let n=Wt.merge(ur.adjustBoundingBox(e),ur.adjustBoundingBox(t));return new Qt(r,n)}static adjustBoundingBox(e){if(e==null){return null}let t=e.getRowHeights();if(t==null){return null}let r=ur.getMax(t);let n=0;for(let e of t){n+=r-e;if(e>0){break}}let i=e.getCodewords();for(let e=0;n>0&&i[e]==null;e++){n--}let s=0;for(let e=t.length-1;e>=0;e--){s+=r-t[e];if(t[e]>0){break}}for(let e=i.length-1;s>0&&i[e]==null;e--){s--}return e.getBoundingBox().addMissingRows(n,s,e.isLeft())}static getMax(e){let t=-1;for(let r of e){t=Math.max(t,r)}return t}static getBarcodeMetadata(e,t){let r;if(e==null||(r=e.getBarcodeMetadata())==null){return t==null?null:t.getBarcodeMetadata()}let n;if(t==null||(n=t.getBarcodeMetadata())==null){return r}if(r.getColumnCount()!==n.getColumnCount()&&r.getErrorCorrectionLevel()!==n.getErrorCorrectionLevel()&&r.getRowCount()!==n.getRowCount()){return null}return r}static getRowIndicatorColumn(e,t,r,n,i,s){let o=new qt(t,n);for(let a=0;a<2;a++){let l=a===0?1:-1;let h=Math.trunc(Math.trunc(r.getX()));for(let a=Math.trunc(Math.trunc(r.getY()));a<=t.getMaxY()&&a>=t.getMinY();a+=l){let t=ur.detectCodeword(e,0,e.getWidth(),n,h,a,i,s);if(t!=null){o.setCodeword(a,t);if(n){h=t.getStartX()}else{h=t.getEndX()}}}}return o}static adjustCodewordCount(e,t){let r=t[0][1];let n=r.getValue();let i=e.getBarcodeColumnCount()*e.getBarcodeRowCount()-ur.getNumberOfECCodeWords(e.getBarcodeECLevel());if(n.length===0){if(i<1||i>vt.MAX_CODEWORDS_IN_BARCODE){throw D.getNotFoundInstance()}r.setValue(i)}else if(n[0]!==i){r.setValue(i)}}static createDecoderResult(e){let t=ur.createBarcodeMatrix(e);ur.adjustCodewordCount(e,t);let r=new Array;let n=new Int32Array(e.getBarcodeRowCount()*e.getBarcodeColumnCount());let i=[];let s=new Array;for(let o=0;o<e.getBarcodeRowCount();o++){for(let a=0;a<e.getBarcodeColumnCount();a++){let l=t[o][a+1].getValue();let h=o*e.getBarcodeColumnCount()+a;if(l.length===0){r.push(h)}else if(l.length===1){n[h]=l[0]}else{s.push(h);i.push(l)}}}let o=new Array(i.length);for(let e=0;e<o.length;e++){o[e]=i[e]}return ur.createDecoderResultFromAmbiguousValues(e.getBarcodeECLevel(),n,vt.toIntArray(r),vt.toIntArray(s),o)}static createDecoderResultFromAmbiguousValues(e,t,r,n,i){let s=new Int32Array(n.length);let o=100;while(o-- >0){for(let e=0;e<s.length;e++){t[n[e]]=i[e][s[e]]}try{return ur.decodeCodewords(t,e,r)}catch(e){let t=e instanceof c;if(!t){throw e}}if(s.length===0){throw c.getChecksumInstance()}for(let e=0;e<s.length;e++){if(s[e]<i[e].length-1){s[e]++;break}else{s[e]=0;if(e===s.length-1){throw c.getChecksumInstance()}}}}throw c.getChecksumInstance()}static createBarcodeMatrix(e){let t=Array.from({length:e.getBarcodeRowCount()},()=>new Array(e.getBarcodeColumnCount()+2));for(let e=0;e<t.length;e++){for(let r=0;r<t[e].length;r++){t[e][r]=new Kt}}let r=0;for(let n of e.getDetectionResultColumns()){if(n!=null){for(let e of n.getCodewords()){if(e!=null){let n=e.getRowNumber();if(n>=0){if(n>=t.length){continue}t[n][r].setValue(e.getValue())}}}}r++}return t}static isValidBarcodeColumn(e,t){return t>=0&&t<=e.getBarcodeColumnCount()+1}static getStartColumn(e,t,r,n){let i=n?1:-1;let s=null;if(ur.isValidBarcodeColumn(e,t-i)){s=e.getDetectionResultColumn(t-i).getCodeword(r)}if(s!=null){return n?s.getEndX():s.getStartX()}s=e.getDetectionResultColumn(t).getCodewordNearby(r);if(s!=null){return n?s.getStartX():s.getEndX()}if(ur.isValidBarcodeColumn(e,t-i)){s=e.getDetectionResultColumn(t-i).getCodewordNearby(r)}if(s!=null){return n?s.getEndX():s.getStartX()}let o=0;while(ur.isValidBarcodeColumn(e,t-i)){t-=i;for(let r of e.getDetectionResultColumn(t).getCodewords()){if(r!=null){return(n?r.getEndX():r.getStartX())+i*o*(r.getEndX()-r.getStartX())}}o++}return n?e.getBoundingBox().getMinX():e.getBoundingBox().getMaxX()}static detectCodeword(e,t,r,n,i,s,o,a){i=ur.adjustCodewordStartColumn(e,t,r,n,i,s);let l=ur.getModuleBitCount(e,t,r,n,i,s);if(l==null){return null}let h;let c=J.sum(l);if(n){h=i+c}else{for(let e=0;e<l.length/2;e++){let t=l[e];l[e]=l[l.length-1-e];l[l.length-1-e]=t}h=i;i=h-c}if(!ur.checkCodewordSkew(c,o,a)){return null}let u=Jt.getDecodedValue(l);let d=vt.getCodeword(u);if(d===-1){return null}return new jt(i,h,ur.getCodewordBucketNumber(u),d)}static getModuleBitCount(e,t,r,n,i,s){let o=i;let a=new Int32Array(8);let l=0;let h=n?1:-1;let c=n;while((n?o<r:o>=t)&&l<a.length){if(e.get(o,s)===c){a[l]++;o+=h}else{l++;c=!c}}if(l===a.length||o===(n?r:t)&&l===a.length-1){return a}return null}static getNumberOfECCodeWords(e){return 2<<e}static adjustCodewordStartColumn(e,t,r,n,i,s){let o=i;let a=n?-1:1;for(let l=0;l<2;l++){while((n?o>=t:o<r)&&n===e.get(o,s)){if(Math.abs(i-o)>ur.CODEWORD_SKEW_SIZE){return i}o+=a}a=-a;n=!n}return o}static checkCodewordSkew(e,t,r){return t-ur.CODEWORD_SKEW_SIZE<=e&&e<=r+ur.CODEWORD_SKEW_SIZE}static decodeCodewords(e,t,r){if(e.length===0){throw _.getFormatInstance()}let n=1<<t+1;let i=ur.correctErrors(e,r,n);ur.verifyCodewordCount(e,n);let s=cr.decode(e,""+t);s.setErrorsCorrected(i);s.setErasures(r.length);return s}static correctErrors(e,t,r){if(t!=null&&t.length>r/2+ur.MAX_ERRORS||r<0||r>ur.MAX_EC_CODEWORDS){throw c.getChecksumInstance()}return ur.errorCorrection.decode(e,r,t)}static verifyCodewordCount(e,t){if(e.length<4){throw _.getFormatInstance()}let r=e[0];if(r>e.length){throw _.getFormatInstance()}if(r===0){if(t<e.length){e[0]=e.length-t}else{throw _.getFormatInstance()}}}static getBitCountForCodeword(e){let t=new Int32Array(8);let r=0;let n=t.length-1;while(true){if((e&1)!==r){r=e&1;n--;if(n<0){break}}t[n]++;e>>=1}return t}static getCodewordBucketNumber(e){if(e instanceof Int32Array){return this.getCodewordBucketNumber_Int32Array(e)}return this.getCodewordBucketNumber_number(e)}static getCodewordBucketNumber_number(e){return ur.getCodewordBucketNumber(ur.getBitCountForCodeword(e))}static getCodewordBucketNumber_Int32Array(e){return(e[0]-e[2]+e[4]-e[6]+9)%9}static toString(e){let t=new Yt;for(let r=0;r<e.length;r++){t.format("Row %2d: ",r);for(let n=0;n<e[r].length;n++){let i=e[r][n];if(i.getValue().length===0){t.format("        ",null)}else{t.format("%4d(%2d)",i.getValue()[0],i.getConfidence(i.getValue()[0]))}}t.format("%n")}return t.toString()}}ur.CODEWORD_SKEW_SIZE=2;ur.MAX_ERRORS=3;ur.MAX_EC_CODEWORDS=512;ur.errorCorrection=new Xt;
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class dr{decode(e,t=null){let r=dr.decode(e,t,false);if(r==null||r.length===0||r[0]==null){throw D.getNotFoundInstance()}return r[0]}decodeMultiple(e,t=null){try{return dr.decode(e,t,true)}catch(e){if(e instanceof _||e instanceof c){throw D.getNotFoundInstance()}throw e}}static decode(e,t,r){const n=new Array;const i=Vt.detectMultiple(e,t,r);for(const e of i.getPoints()){const t=ur.decode(i.getBits(),e[4],e[5],e[6],e[7],dr.getMinCodewordWidth(e),dr.getMaxCodewordWidth(e));const r=new v(t.getText(),t.getRawBytes(),undefined,e,V.PDF_417);r.putMetadata(H.ERROR_CORRECTION_LEVEL,t.getECLevel());const s=t.getOther();if(s!=null){r.putMetadata(H.PDF417_EXTRA_METADATA,s)}n.push(r)}return n.map(e=>e)}static getMaxWidth(e,t){if(e==null||t==null){return 0}return Math.trunc(Math.abs(e.getX()-t.getX()))}static getMinWidth(e,t){if(e==null||t==null){return A.MAX_VALUE}return Math.trunc(Math.abs(e.getX()-t.getX()))}static getMaxCodewordWidth(e){return Math.floor(Math.max(Math.max(dr.getMaxWidth(e[0],e[4]),dr.getMaxWidth(e[6],e[2])*vt.MODULES_IN_CODEWORD/vt.MODULES_IN_STOP_PATTERN),Math.max(dr.getMaxWidth(e[1],e[5]),dr.getMaxWidth(e[7],e[3])*vt.MODULES_IN_CODEWORD/vt.MODULES_IN_STOP_PATTERN)))}static getMinCodewordWidth(e){return Math.floor(Math.min(Math.min(dr.getMinWidth(e[0],e[4]),dr.getMinWidth(e[6],e[2])*vt.MODULES_IN_CODEWORD/vt.MODULES_IN_STOP_PATTERN),Math.min(dr.getMinWidth(e[1],e[5]),dr.getMinWidth(e[7],e[3])*vt.MODULES_IN_CODEWORD/vt.MODULES_IN_STOP_PATTERN)))}reset(){}}class fr extends o{}fr.kind="ReaderException";
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class gr{decode(e,t){this.setHints(t);return this.decodeInternal(e)}decodeWithState(e){if(this.readers===null||this.readers===undefined){this.setHints(null)}return this.decodeInternal(e)}setHints(e){this.hints=e;const t=e!==null&&e!==undefined&&undefined!==e.get(m.TRY_HARDER);const r=e===null||e===undefined?null:e.get(m.POSSIBLE_FORMATS);const n=new Array;if(r!==null&&r!==undefined){const i=r.some(e=>e===V.UPC_A||e===V.UPC_E||e===V.EAN_13||e===V.EAN_8||e===V.CODABAR||e===V.CODE_39||e===V.CODE_93||e===V.CODE_128||e===V.ITF||e===V.RSS_14||e===V.RSS_EXPANDED);if(i&&!t){n.push(new tt(e))}if(r.includes(V.QR_CODE)){n.push(new kt)}if(r.includes(V.DATA_MATRIX)){n.push(new ft)}if(r.includes(V.AZTEC)){n.push(new ce)}if(r.includes(V.PDF_417)){n.push(new dr)}if(i&&t){n.push(new tt(e))}}if(n.length===0){if(!t){n.push(new tt(e))}n.push(new kt);n.push(new ft);n.push(new ce);n.push(new dr);if(t){n.push(new tt(e))}}this.readers=n}reset(){if(this.readers!==null){for(const e of this.readers){e.reset()}}}decodeInternal(e){if(this.readers===null){throw new fr("No readers where selected, nothing can be read.")}for(const t of this.readers){try{return t.decode(e,this.hints)}catch(e){if(e instanceof fr){continue}}}throw new D("No MultiFormat Readers were able to detect the code.")}}class wr extends k{constructor(e=null,t=500){const r=new gr;r.setHints(e);super(r,t)}decodeBitmap(e){return this.reader.decodeWithState(e)}}class Ar extends k{constructor(e=500){super(new dr,e)}}class Cr extends k{constructor(e=500){super(new kt,e)}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */var Er;(function(e){e[e["ERROR_CORRECTION"]=0]="ERROR_CORRECTION";e[e["CHARACTER_SET"]=1]="CHARACTER_SET";e[e["DATA_MATRIX_SHAPE"]=2]="DATA_MATRIX_SHAPE";e[e["MIN_SIZE"]=3]="MIN_SIZE";e[e["MAX_SIZE"]=4]="MAX_SIZE";e[e["MARGIN"]=5]="MARGIN";e[e["PDF417_COMPACT"]=6]="PDF417_COMPACT";e[e["PDF417_COMPACTION"]=7]="PDF417_COMPACTION";e[e["PDF417_DIMENSIONS"]=8]="PDF417_DIMENSIONS";e[e["AZTEC_LAYERS"]=9]="AZTEC_LAYERS";e[e["QR_VERSION"]=10]="QR_VERSION"})(Er||(Er={}));var mr=Er;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class _r{constructor(e){this.field=e;this.cachedGenerators=[];this.cachedGenerators.push(new W(e,Int32Array.from([1])))}buildGenerator(e){const t=this.cachedGenerators;if(e>=t.length){let r=t[t.length-1];const n=this.field;for(let i=t.length;i<=e;i++){const e=r.multiply(new W(n,Int32Array.from([1,n.exp(i-1+n.getGeneratorBase())])));t.push(e);r=e}}return t[e]}encode(e,t){if(t===0){throw new l("No error correction bytes")}const r=e.length-t;if(r<=0){throw new l("No data bytes provided")}const n=this.buildGenerator(t);const i=new Int32Array(r);d.arraycopy(e,0,i,0,r);let s=new W(this.field,i);s=s.multiplyByMonomial(t,1);const o=s.divide(n)[1];const a=o.getCoefficients();const h=t-a.length;for(let t=0;t<h;t++){e[r+t]=0}d.arraycopy(a,0,e,r+h,a.length)}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Ir{constructor(){}static applyMaskPenaltyRule1(e){return Ir.applyMaskPenaltyRule1Internal(e,true)+Ir.applyMaskPenaltyRule1Internal(e,false)}static applyMaskPenaltyRule2(e){let t=0;const r=e.getArray();const n=e.getWidth();const i=e.getHeight();for(let e=0;e<i-1;e++){const i=r[e];for(let s=0;s<n-1;s++){const n=i[s];if(n===i[s+1]&&n===r[e+1][s]&&n===r[e+1][s+1]){t++}}}return Ir.N2*t}static applyMaskPenaltyRule3(e){let t=0;const r=e.getArray();const n=e.getWidth();const i=e.getHeight();for(let e=0;e<i;e++){for(let s=0;s<n;s++){const o=r[e];if(s+6<n&&o[s]===1&&o[s+1]===0&&o[s+2]===1&&o[s+3]===1&&o[s+4]===1&&o[s+5]===0&&o[s+6]===1&&(Ir.isWhiteHorizontal(o,s-4,s)||Ir.isWhiteHorizontal(o,s+7,s+11))){t++}if(e+6<i&&r[e][s]===1&&r[e+1][s]===0&&r[e+2][s]===1&&r[e+3][s]===1&&r[e+4][s]===1&&r[e+5][s]===0&&r[e+6][s]===1&&(Ir.isWhiteVertical(r,s,e-4,e)||Ir.isWhiteVertical(r,s,e+7,e+11))){t++}}}return t*Ir.N3}static isWhiteHorizontal(e,t,r){t=Math.max(t,0);r=Math.min(r,e.length);for(let n=t;n<r;n++){if(e[n]===1){return false}}return true}static isWhiteVertical(e,t,r,n){r=Math.max(r,0);n=Math.min(n,e.length);for(let i=r;i<n;i++){if(e[i][t]===1){return false}}return true}static applyMaskPenaltyRule4(e){let t=0;const r=e.getArray();const n=e.getWidth();const i=e.getHeight();for(let e=0;e<i;e++){const i=r[e];for(let e=0;e<n;e++){if(i[e]===1){t++}}}const s=e.getHeight()*e.getWidth();const o=Math.floor(Math.abs(t*2-s)*10/s);return o*Ir.N4}static getDataMaskBit(e,t,r){let n;let i;switch(e){case 0:n=r+t&1;break;case 1:n=r&1;break;case 2:n=t%3;break;case 3:n=(r+t)%3;break;case 4:n=Math.floor(r/2)+Math.floor(t/3)&1;break;case 5:i=r*t;n=(i&1)+i%3;break;case 6:i=r*t;n=(i&1)+i%3&1;break;case 7:i=r*t;n=i%3+(r+t&1)&1;break;default:throw new l("Invalid mask pattern: "+e)}return n===0}static applyMaskPenaltyRule1Internal(e,t){let r=0;const n=t?e.getHeight():e.getWidth();const i=t?e.getWidth():e.getHeight();const s=e.getArray();for(let e=0;e<n;e++){let n=0;let o=-1;for(let a=0;a<i;a++){const i=t?s[e][a]:s[a][e];if(i===o){n++}else{if(n>=5){r+=Ir.N1+(n-5)}n=1;o=i}}if(n>=5){r+=Ir.N1+(n-5)}}return r}}Ir.N1=3;Ir.N2=3;Ir.N3=40;Ir.N4=10;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Sr{constructor(e,t){this.width=e;this.height=t;const r=new Array(t);for(let n=0;n!==t;n++){r[n]=new Uint8Array(e)}this.bytes=r}getHeight(){return this.height}getWidth(){return this.width}get(e,t){return this.bytes[t][e]}getArray(){return this.bytes}setNumber(e,t,r){this.bytes[t][e]=r}setBoolean(e,t,r){this.bytes[t][e]=r?1:0}clear(e){for(const t of this.bytes){w.fill(t,e)}}equals(e){if(!(e instanceof Sr)){return false}const t=e;if(this.width!==t.width){return false}if(this.height!==t.height){return false}for(let e=0,r=this.height;e<r;++e){const r=this.bytes[e];const n=t.bytes[e];for(let e=0,t=this.width;e<t;++e){if(r[e]!==n[e]){return false}}}return true}toString(){const e=new N;for(let t=0,r=this.height;t<r;++t){const r=this.bytes[t];for(let t=0,n=this.width;t<n;++t){switch(r[t]){case 0:e.append(" 0");break;case 1:e.append(" 1");break;default:e.append("  ");break}}e.append("\n")}return e.toString()}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class pr{constructor(){this.maskPattern=-1}getMode(){return this.mode}getECLevel(){return this.ecLevel}getVersion(){return this.version}getMaskPattern(){return this.maskPattern}getMatrix(){return this.matrix}toString(){const e=new N;e.append("<<\n");e.append(" mode: ");e.append(this.mode?this.mode.toString():"null");e.append("\n ecLevel: ");e.append(this.ecLevel?this.ecLevel.toString():"null");e.append("\n version: ");e.append(this.version?this.version.toString():"null");e.append("\n maskPattern: ");e.append(this.maskPattern.toString());if(this.matrix){e.append("\n matrix:\n");e.append(this.matrix.toString())}else{e.append("\n matrix: null\n")}e.append(">>\n");return e.toString()}setMode(e){this.mode=e}setECLevel(e){this.ecLevel=e}setVersion(e){this.version=e}setMaskPattern(e){this.maskPattern=e}setMatrix(e){this.matrix=e}static isValidMaskPattern(e){return e>=0&&e<pr.NUM_MASK_PATTERNS}}pr.NUM_MASK_PATTERNS=8;class Tr extends o{}Tr.kind="WriterException";
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Rr{constructor(){}static clearMatrix(e){e.clear(255)}static buildMatrix(e,t,r,n,i){Rr.clearMatrix(i);Rr.embedBasicPatterns(r,i);Rr.embedTypeInfo(t,n,i);Rr.maybeEmbedVersionInfo(r,i);Rr.embedDataBits(e,n,i)}static embedBasicPatterns(e,t){Rr.embedPositionDetectionPatternsAndSeparators(t);Rr.embedDarkDotAtLeftBottomCorner(t);Rr.maybeEmbedPositionAdjustmentPatterns(e,t);Rr.embedTimingPatterns(t)}static embedTypeInfo(e,t,r){const n=new C;Rr.makeTypeInfoBits(e,t,n);for(let e=0,t=n.getSize();e<t;++e){const t=n.get(n.getSize()-1-e);const i=Rr.TYPE_INFO_COORDINATES[e];const s=i[0];const o=i[1];r.setBoolean(s,o,t);if(e<8){const n=r.getWidth()-e-1;const i=8;r.setBoolean(n,i,t)}else{const n=8;const i=r.getHeight()-7+(e-8);r.setBoolean(n,i,t)}}}static maybeEmbedVersionInfo(e,t){if(e.getVersionNumber()<7){return}const r=new C;Rr.makeVersionInfoBits(e,r);let n=6*3-1;for(let e=0;e<6;++e){for(let i=0;i<3;++i){const s=r.get(n);n--;t.setBoolean(e,t.getHeight()-11+i,s);t.setBoolean(t.getHeight()-11+i,e,s)}}}static embedDataBits(e,t,r){let n=0;let i=-1;let s=r.getWidth()-1;let o=r.getHeight()-1;while(s>0){if(s===6){s-=1}while(o>=0&&o<r.getHeight()){for(let i=0;i<2;++i){const a=s-i;if(!Rr.isEmpty(r.get(a,o))){continue}let l;if(n<e.getSize()){l=e.get(n);++n}else{l=false}if(t!==255&&Ir.getDataMaskBit(t,a,o)){l=!l}r.setBoolean(a,o,l)}o+=i}i=-i;o+=i;s-=2}if(n!==e.getSize()){throw new Tr("Not all bits consumed: "+n+"/"+e.getSize())}}static findMSBSet(e){return 32-A.numberOfLeadingZeros(e)}static calculateBCHCode(e,t){if(t===0){throw new l("0 polynomial")}const r=Rr.findMSBSet(t);e<<=r-1;while(Rr.findMSBSet(e)>=r){e^=t<<Rr.findMSBSet(e)-r}return e}static makeTypeInfoBits(e,t,r){if(!pr.isValidMaskPattern(t)){throw new Tr("Invalid mask pattern")}const n=e.getBits()<<3|t;r.appendBits(n,5);const i=Rr.calculateBCHCode(n,Rr.TYPE_INFO_POLY);r.appendBits(i,10);const s=new C;s.appendBits(Rr.TYPE_INFO_MASK_PATTERN,15);r.xor(s);if(r.getSize()!==15){throw new Tr("should not happen but we got: "+r.getSize())}}static makeVersionInfoBits(e,t){t.appendBits(e.getVersionNumber(),6);const r=Rr.calculateBCHCode(e.getVersionNumber(),Rr.VERSION_INFO_POLY);t.appendBits(r,12);if(t.getSize()!==18){throw new Tr("should not happen but we got: "+t.getSize())}}static isEmpty(e){return e===255}static embedTimingPatterns(e){for(let t=8;t<e.getWidth()-8;++t){const r=(t+1)%2;if(Rr.isEmpty(e.get(t,6))){e.setNumber(t,6,r)}if(Rr.isEmpty(e.get(6,t))){e.setNumber(6,t,r)}}}static embedDarkDotAtLeftBottomCorner(e){if(e.get(8,e.getHeight()-8)===0){throw new Tr}e.setNumber(8,e.getHeight()-8,1)}static embedHorizontalSeparationPattern(e,t,r){for(let n=0;n<8;++n){if(!Rr.isEmpty(r.get(e+n,t))){throw new Tr}r.setNumber(e+n,t,0)}}static embedVerticalSeparationPattern(e,t,r){for(let n=0;n<7;++n){if(!Rr.isEmpty(r.get(e,t+n))){throw new Tr}r.setNumber(e,t+n,0)}}static embedPositionAdjustmentPattern(e,t,r){for(let n=0;n<5;++n){const i=Rr.POSITION_ADJUSTMENT_PATTERN[n];for(let s=0;s<5;++s){r.setNumber(e+s,t+n,i[s])}}}static embedPositionDetectionPattern(e,t,r){for(let n=0;n<7;++n){const i=Rr.POSITION_DETECTION_PATTERN[n];for(let s=0;s<7;++s){r.setNumber(e+s,t+n,i[s])}}}static embedPositionDetectionPatternsAndSeparators(e){const t=Rr.POSITION_DETECTION_PATTERN[0].length;Rr.embedPositionDetectionPattern(0,0,e);Rr.embedPositionDetectionPattern(e.getWidth()-t,0,e);Rr.embedPositionDetectionPattern(0,e.getWidth()-t,e);const r=8;Rr.embedHorizontalSeparationPattern(0,r-1,e);Rr.embedHorizontalSeparationPattern(e.getWidth()-r,r-1,e);Rr.embedHorizontalSeparationPattern(0,e.getWidth()-r,e);const n=7;Rr.embedVerticalSeparationPattern(n,0,e);Rr.embedVerticalSeparationPattern(e.getHeight()-n-1,0,e);Rr.embedVerticalSeparationPattern(n,e.getHeight()-n,e)}static maybeEmbedPositionAdjustmentPatterns(e,t){if(e.getVersionNumber()<2){return}const r=e.getVersionNumber()-1;const n=Rr.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[r];for(let e=0,r=n.length;e!==r;e++){const i=n[e];if(i>=0){for(let e=0;e!==r;e++){const r=n[e];if(r>=0&&Rr.isEmpty(t.get(r,i))){Rr.embedPositionAdjustmentPattern(r-2,i-2,t)}}}}}}Rr.POSITION_DETECTION_PATTERN=Array.from([Int32Array.from([1,1,1,1,1,1,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,1,1,1,0,1]),Int32Array.from([1,0,0,0,0,0,1]),Int32Array.from([1,1,1,1,1,1,1])]);Rr.POSITION_ADJUSTMENT_PATTERN=Array.from([Int32Array.from([1,1,1,1,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,0,1,0,1]),Int32Array.from([1,0,0,0,1]),Int32Array.from([1,1,1,1,1])]);Rr.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE=Array.from([Int32Array.from([-1,-1,-1,-1,-1,-1,-1]),Int32Array.from([6,18,-1,-1,-1,-1,-1]),Int32Array.from([6,22,-1,-1,-1,-1,-1]),Int32Array.from([6,26,-1,-1,-1,-1,-1]),Int32Array.from([6,30,-1,-1,-1,-1,-1]),Int32Array.from([6,34,-1,-1,-1,-1,-1]),Int32Array.from([6,22,38,-1,-1,-1,-1]),Int32Array.from([6,24,42,-1,-1,-1,-1]),Int32Array.from([6,26,46,-1,-1,-1,-1]),Int32Array.from([6,28,50,-1,-1,-1,-1]),Int32Array.from([6,30,54,-1,-1,-1,-1]),Int32Array.from([6,32,58,-1,-1,-1,-1]),Int32Array.from([6,34,62,-1,-1,-1,-1]),Int32Array.from([6,26,46,66,-1,-1,-1]),Int32Array.from([6,26,48,70,-1,-1,-1]),Int32Array.from([6,26,50,74,-1,-1,-1]),Int32Array.from([6,30,54,78,-1,-1,-1]),Int32Array.from([6,30,56,82,-1,-1,-1]),Int32Array.from([6,30,58,86,-1,-1,-1]),Int32Array.from([6,34,62,90,-1,-1,-1]),Int32Array.from([6,28,50,72,94,-1,-1]),Int32Array.from([6,26,50,74,98,-1,-1]),Int32Array.from([6,30,54,78,102,-1,-1]),Int32Array.from([6,28,54,80,106,-1,-1]),Int32Array.from([6,32,58,84,110,-1,-1]),Int32Array.from([6,30,58,86,114,-1,-1]),Int32Array.from([6,34,62,90,118,-1,-1]),Int32Array.from([6,26,50,74,98,122,-1]),Int32Array.from([6,30,54,78,102,126,-1]),Int32Array.from([6,26,52,78,104,130,-1]),Int32Array.from([6,30,56,82,108,134,-1]),Int32Array.from([6,34,60,86,112,138,-1]),Int32Array.from([6,30,58,86,114,142,-1]),Int32Array.from([6,34,62,90,118,146,-1]),Int32Array.from([6,30,54,78,102,126,150]),Int32Array.from([6,24,50,76,102,128,154]),Int32Array.from([6,28,54,80,106,132,158]),Int32Array.from([6,32,58,84,110,136,162]),Int32Array.from([6,26,54,82,110,138,166]),Int32Array.from([6,30,58,86,114,142,170])]);Rr.TYPE_INFO_COORDINATES=Array.from([Int32Array.from([8,0]),Int32Array.from([8,1]),Int32Array.from([8,2]),Int32Array.from([8,3]),Int32Array.from([8,4]),Int32Array.from([8,5]),Int32Array.from([8,7]),Int32Array.from([8,8]),Int32Array.from([7,8]),Int32Array.from([5,8]),Int32Array.from([4,8]),Int32Array.from([3,8]),Int32Array.from([2,8]),Int32Array.from([1,8]),Int32Array.from([0,8])]);Rr.VERSION_INFO_POLY=7973;Rr.TYPE_INFO_POLY=1335;Rr.TYPE_INFO_MASK_PATTERN=21522;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Nr{constructor(e,t){this.dataBytes=e;this.errorCorrectionBytes=t}getDataBytes(){return this.dataBytes}getErrorCorrectionBytes(){return this.errorCorrectionBytes}}
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class yr{constructor(){}static calculateMaskPenalty(e){return Ir.applyMaskPenaltyRule1(e)+Ir.applyMaskPenaltyRule2(e)+Ir.applyMaskPenaltyRule3(e)+Ir.applyMaskPenaltyRule4(e)}static encode(e,t,r=null){let n=yr.DEFAULT_BYTE_MODE_ENCODING;const i=r!==null&&undefined!==r.get(mr.CHARACTER_SET);if(i){n=r.get(mr.CHARACTER_SET).toString()}const s=this.chooseMode(e,n);const o=new C;if(s===Nt.BYTE&&(i||yr.DEFAULT_BYTE_MODE_ENCODING!==n)){const e=S.getCharacterSetECIByName(n);if(e!==undefined){this.appendECI(e,o)}}this.appendModeInfo(s,o);const a=new C;this.appendBytes(e,s,a,n);let l;if(r!==null&&undefined!==r.get(mr.QR_VERSION)){const e=Number.parseInt(r.get(mr.QR_VERSION).toString(),10);l=_t.getVersionForNumber(e);const n=this.calculateBitsNeeded(s,o,a,l);if(!this.willFit(n,l,t)){throw new Tr("Data too big for requested version")}}else{l=this.recommendVersion(t,s,o,a)}const h=new C;h.appendBitArray(o);const c=s===Nt.BYTE?a.getSizeInBytes():e.length;this.appendLengthInfo(c,l,s,h);h.appendBitArray(a);const u=l.getECBlocksForLevel(t);const d=l.getTotalCodewords()-u.getTotalECCodewords();this.terminateBits(d,h);const f=this.interleaveWithECBytes(h,l.getTotalCodewords(),d,u.getNumBlocks());const g=new pr;g.setECLevel(t);g.setMode(s);g.setVersion(l);const w=l.getDimensionForVersion();const A=new Sr(w,w);const E=this.chooseMaskPattern(f,t,l,A);g.setMaskPattern(E);Rr.buildMatrix(f,t,l,E,A);g.setMatrix(A);return g}static recommendVersion(e,t,r,n){const i=this.calculateBitsNeeded(t,r,n,_t.getVersionForNumber(1));const s=this.chooseVersion(i,e);const o=this.calculateBitsNeeded(t,r,n,s);return this.chooseVersion(o,e)}static calculateBitsNeeded(e,t,r,n){return t.getSize()+e.getCharacterCountBits(n)+r.getSize()}static getAlphanumericCode(e){if(e<yr.ALPHANUMERIC_TABLE.length){return yr.ALPHANUMERIC_TABLE[e]}return-1}static chooseMode(e,t=null){if(S.SJIS.getName()===t&&this.isOnlyDoubleByteKanji(e)){return Nt.KANJI}let r=false;let n=false;for(let t=0,i=e.length;t<i;++t){const i=e.charAt(t);if(yr.isDigit(i)){r=true}else if(this.getAlphanumericCode(i.charCodeAt(0))!==-1){n=true}else{return Nt.BYTE}}if(n){return Nt.ALPHANUMERIC}if(r){return Nt.NUMERIC}return Nt.BYTE}static isOnlyDoubleByteKanji(e){let t;try{t=T.encode(e,S.SJIS)}catch(e){return false}const r=t.length;if(r%2!==0){return false}for(let e=0;e<r;e+=2){const r=t[e]&255;if((r<129||r>159)&&(r<224||r>235)){return false}}return true}static chooseMaskPattern(e,t,r,n){let i=Number.MAX_SAFE_INTEGER;let s=-1;for(let o=0;o<pr.NUM_MASK_PATTERNS;o++){Rr.buildMatrix(e,t,r,o,n);let a=this.calculateMaskPenalty(n);if(a<i){i=a;s=o}}return s}static chooseVersion(e,t){for(let r=1;r<=40;r++){const n=_t.getVersionForNumber(r);if(yr.willFit(e,n,t)){return n}}throw new Tr("Data too big")}static willFit(e,t,r){const n=t.getTotalCodewords();const i=t.getECBlocksForLevel(r);const s=i.getTotalECCodewords();const o=n-s;const a=(e+7)/8;return o>=a}static terminateBits(e,t){const r=e*8;if(t.getSize()>r){throw new Tr("data bits cannot fit in the QR Code"+t.getSize()+" > "+r)}for(let e=0;e<4&&t.getSize()<r;++e){t.appendBit(false)}const n=t.getSize()&7;if(n>0){for(let e=n;e<8;e++){t.appendBit(false)}}const i=e-t.getSizeInBytes();for(let e=0;e<i;++e){t.appendBits((e&1)===0?236:17,8)}if(t.getSize()!==r){throw new Tr("Bits size does not equal capacity")}}static getNumDataBytesAndNumECBytesForBlockID(e,t,r,n,i,s){if(n>=r){throw new Tr("Block ID too large")}const o=e%r;const a=r-o;const l=Math.floor(e/r);const h=l+1;const c=Math.floor(t/r);const u=c+1;const d=l-c;const f=h-u;if(d!==f){throw new Tr("EC bytes mismatch")}if(r!==a+o){throw new Tr("RS blocks mismatch")}if(e!==(c+d)*a+(u+f)*o){throw new Tr("Total bytes mismatch")}if(n<a){i[0]=c;s[0]=d}else{i[0]=u;s[0]=f}}static interleaveWithECBytes(e,t,r,n){if(e.getSizeInBytes()!==r){throw new Tr("Number of bits and data bytes does not match")}let i=0;let s=0;let o=0;const a=new Array;for(let l=0;l<n;++l){const h=new Int32Array(1);const c=new Int32Array(1);yr.getNumDataBytesAndNumECBytesForBlockID(t,r,n,l,h,c);const u=h[0];const d=new Uint8Array(u);e.toBytes(8*i,d,0,u);const f=yr.generateECBytes(d,c[0]);a.push(new Nr(d,f));s=Math.max(s,u);o=Math.max(o,f.length);i+=h[0]}if(r!==i){throw new Tr("Data bytes does not match offset")}const l=new C;for(let e=0;e<s;++e){for(const t of a){const r=t.getDataBytes();if(e<r.length){l.appendBits(r[e],8)}}}for(let e=0;e<o;++e){for(const t of a){const r=t.getErrorCorrectionBytes();if(e<r.length){l.appendBits(r[e],8)}}}if(t!==l.getSizeInBytes()){throw new Tr("Interleaving error: "+t+" and "+l.getSizeInBytes()+" differ.")}return l}static generateECBytes(e,t){const r=e.length;const n=new Int32Array(r+t);for(let t=0;t<r;t++){n[t]=e[t]&255}new _r(Y.QR_CODE_FIELD_256).encode(n,t);const i=new Uint8Array(t);for(let e=0;e<t;e++){i[e]=n[r+e]}return i}static appendModeInfo(e,t){t.appendBits(e.getBits(),4)}static appendLengthInfo(e,t,r,n){const i=r.getCharacterCountBits(t);if(e>=1<<i){throw new Tr(e+" is bigger than "+((1<<i)-1))}n.appendBits(e,i)}static appendBytes(e,t,r,n){switch(t){case Nt.NUMERIC:yr.appendNumericBytes(e,r);break;case Nt.ALPHANUMERIC:yr.appendAlphanumericBytes(e,r);break;case Nt.BYTE:yr.append8BitBytes(e,r,n);break;case Nt.KANJI:yr.appendKanjiBytes(e,r);break;default:throw new Tr("Invalid mode: "+t)}}static getDigit(e){return e.charCodeAt(0)-48}static isDigit(e){const t=yr.getDigit(e);return t>=0&&t<=9}static appendNumericBytes(e,t){const r=e.length;let n=0;while(n<r){const i=yr.getDigit(e.charAt(n));if(n+2<r){const r=yr.getDigit(e.charAt(n+1));const s=yr.getDigit(e.charAt(n+2));t.appendBits(i*100+r*10+s,10);n+=3}else if(n+1<r){const r=yr.getDigit(e.charAt(n+1));t.appendBits(i*10+r,7);n+=2}else{t.appendBits(i,4);n++}}}static appendAlphanumericBytes(e,t){const r=e.length;let n=0;while(n<r){const i=yr.getAlphanumericCode(e.charCodeAt(n));if(i===-1){throw new Tr}if(n+1<r){const r=yr.getAlphanumericCode(e.charCodeAt(n+1));if(r===-1){throw new Tr}t.appendBits(i*45+r,11);n+=2}else{t.appendBits(i,6);n++}}}static append8BitBytes(e,t,r){let n;try{n=T.encode(e,r)}catch(e){throw new Tr(e)}for(let e=0,r=n.length;e!==r;e++){const r=n[e];t.appendBits(r,8)}}static appendKanjiBytes(e,t){let r;try{r=T.encode(e,S.SJIS)}catch(e){throw new Tr(e)}const n=r.length;for(let e=0;e<n;e+=2){const n=r[e]&255;const i=r[e+1]&255;const s=n<<8&4294967295|i;let o=-1;if(s>=33088&&s<=40956){o=s-33088}else if(s>=57408&&s<=60351){o=s-49472}if(o===-1){throw new Tr("Invalid byte sequence")}const a=(o>>8)*192+(o&255);t.appendBits(a,13)}}static appendECI(e,t){t.appendBits(Nt.ECI.getBits(),4);t.appendBits(e.getValue(),8)}}yr.ALPHANUMERIC_TABLE=Int32Array.from([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,36,-1,-1,-1,37,38,-1,-1,-1,-1,39,40,-1,41,42,43,0,1,2,3,4,5,6,7,8,9,44,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,-1,-1,-1,-1,-1]);yr.DEFAULT_BYTE_MODE_ENCODING=S.UTF8.getName();class Dr{write(e,t,r,n=null){if(e.length===0){throw new l("Found empty contents")}if(t<0||r<0){throw new l("Requested dimensions are too small: "+t+"x"+r)}let i=At.L;let s=Dr.QUIET_ZONE_SIZE;if(n!==null){if(undefined!==n.get(mr.ERROR_CORRECTION)){i=At.fromString(n.get(mr.ERROR_CORRECTION).toString())}if(undefined!==n.get(mr.MARGIN)){s=Number.parseInt(n.get(mr.MARGIN).toString(),10)}}const o=yr.encode(e,i,n);return this.renderResult(o,t,r,s)}writeToDom(e,t,r,n,i=null){if(typeof e==="string"){e=document.querySelector(e)}const s=this.write(t,r,n,i);if(e)e.appendChild(s)}renderResult(e,t,r,n){const i=e.getMatrix();if(i===null){throw new K}const s=i.getWidth();const o=i.getHeight();const a=s+n*2;const l=o+n*2;const h=Math.max(t,a);const c=Math.max(r,l);const u=Math.min(Math.floor(h/a),Math.floor(c/l));const d=Math.floor((h-s*u)/2);const f=Math.floor((c-o*u)/2);const g=this.createSVGElement(h,c);for(let e=0,t=f;e<o;e++,t+=u){for(let r=0,n=d;r<s;r++,n+=u){if(i.get(r,e)===1){const e=this.createSvgRectElement(n,t,u,u);g.appendChild(e)}}}return g}createSVGElement(e,t){const r=document.createElementNS(Dr.SVG_NS,"svg");r.setAttributeNS(null,"height",e.toString());r.setAttributeNS(null,"width",t.toString());return r}createSvgRectElement(e,t,r,n){const i=document.createElementNS(Dr.SVG_NS,"rect");i.setAttributeNS(null,"x",e.toString());i.setAttributeNS(null,"y",t.toString());i.setAttributeNS(null,"height",r.toString());i.setAttributeNS(null,"width",n.toString());i.setAttributeNS(null,"fill","#000000");return i}}Dr.QUIET_ZONE_SIZE=4;Dr.SVG_NS="http://www.w3.org/2000/svg";
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Or{encode(e,t,r,n,i){if(e.length===0){throw new l("Found empty contents")}if(t!==V.QR_CODE){throw new l("Can only encode QR_CODE, but got "+t)}if(r<0||n<0){throw new l(`Requested dimensions are too small: ${r}x${n}`)}let s=At.L;let o=Or.QUIET_ZONE_SIZE;if(i!==null){if(undefined!==i.get(mr.ERROR_CORRECTION)){s=At.fromString(i.get(mr.ERROR_CORRECTION).toString())}if(undefined!==i.get(mr.MARGIN)){o=Number.parseInt(i.get(mr.MARGIN).toString(),10)}}const a=yr.encode(e,s,i);return Or.renderResult(a,r,n,o)}static renderResult(e,t,r,n){const i=e.getMatrix();if(i===null){throw new K}const s=i.getWidth();const o=i.getHeight();const a=s+n*2;const l=o+n*2;const h=Math.max(t,a);const c=Math.max(r,l);const u=Math.min(Math.floor(h/a),Math.floor(c/l));const d=Math.floor((h-s*u)/2);const f=Math.floor((c-o*u)/2);const g=new y(h,c);for(let e=0,t=f;e<o;e++,t+=u){for(let r=0,n=d;r<s;r++,n+=u){if(i.get(r,e)===1){g.setRegion(n,t,u,u)}}}return g}}Or.QUIET_ZONE_SIZE=4;
/*
     * Copyright 2008 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Mr{encode(e,t,r,n,i){let s;switch(t){case V.QR_CODE:s=new Or;break;default:throw new l("No encoder available for format "+t)}return s.encode(e,t,r,n,i)}}
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class br extends b{constructor(e,t,r,n,i,s,o,a){super(s,o);this.yuvData=e;this.dataWidth=t;this.dataHeight=r;this.left=n;this.top=i;if(n+s>t||i+o>r){throw new l("Crop rectangle does not fit within image data.")}if(a){this.reverseHorizontal(s,o)}}getRow(e,t){if(e<0||e>=this.getHeight()){throw new l("Requested row is outside the image: "+e)}const r=this.getWidth();if(t===null||t===undefined||t.length<r){t=new Uint8ClampedArray(r)}const n=(e+this.top)*this.dataWidth+this.left;d.arraycopy(this.yuvData,n,t,0,r);return t}getMatrix(){const e=this.getWidth();const t=this.getHeight();if(e===this.dataWidth&&t===this.dataHeight){return this.yuvData}const r=e*t;const n=new Uint8ClampedArray(r);let i=this.top*this.dataWidth+this.left;if(e===this.dataWidth){d.arraycopy(this.yuvData,i,n,0,r);return n}for(let r=0;r<t;r++){const t=r*e;d.arraycopy(this.yuvData,i,n,t,e);i+=this.dataWidth}return n}isCropSupported(){return true}crop(e,t,r,n){return new br(this.yuvData,this.dataWidth,this.dataHeight,this.left+e,this.top+t,r,n,false)}renderThumbnail(){const e=this.getWidth()/br.THUMBNAIL_SCALE_FACTOR;const t=this.getHeight()/br.THUMBNAIL_SCALE_FACTOR;const r=new Int32Array(e*t);const n=this.yuvData;let i=this.top*this.dataWidth+this.left;for(let s=0;s<t;s++){const t=s*e;for(let s=0;s<e;s++){const e=n[i+s*br.THUMBNAIL_SCALE_FACTOR]&255;r[t+s]=4278190080|e*65793}i+=this.dataWidth*br.THUMBNAIL_SCALE_FACTOR}return r}getThumbnailWidth(){return this.getWidth()/br.THUMBNAIL_SCALE_FACTOR}getThumbnailHeight(){return this.getHeight()/br.THUMBNAIL_SCALE_FACTOR}reverseHorizontal(e,t){const r=this.yuvData;for(let n=0,i=this.top*this.dataWidth+this.left;n<t;n++,i+=this.dataWidth){const t=i+e/2;for(let n=i,s=i+e-1;n<t;n++,s--){const e=r[n];r[n]=r[s];r[s]=e}}}invert(){return new B(this)}}br.THUMBNAIL_SCALE_FACTOR=2;
/*
     * Copyright 2009 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Br extends b{constructor(e,t,r,n,i,s,o){super(t,r);this.dataWidth=n;this.dataHeight=i;this.left=s;this.top=o;if(e.BYTES_PER_ELEMENT===4){const n=t*r;const i=new Uint8ClampedArray(n);for(let t=0;t<n;t++){const r=e[t];const n=r>>16&255;const s=r>>7&510;const o=r&255;i[t]=(n+s+o)/4&255}this.luminances=i}else{this.luminances=e}if(undefined===n){this.dataWidth=t}if(undefined===i){this.dataHeight=r}if(undefined===s){this.left=0}if(undefined===o){this.top=0}if(this.left+t>this.dataWidth||this.top+r>this.dataHeight){throw new l("Crop rectangle does not fit within image data.")}}getRow(e,t){if(e<0||e>=this.getHeight()){throw new l("Requested row is outside the image: "+e)}const r=this.getWidth();if(t===null||t===undefined||t.length<r){t=new Uint8ClampedArray(r)}const n=(e+this.top)*this.dataWidth+this.left;d.arraycopy(this.luminances,n,t,0,r);return t}getMatrix(){const e=this.getWidth();const t=this.getHeight();if(e===this.dataWidth&&t===this.dataHeight){return this.luminances}const r=e*t;const n=new Uint8ClampedArray(r);let i=this.top*this.dataWidth+this.left;if(e===this.dataWidth){d.arraycopy(this.luminances,i,n,0,r);return n}for(let r=0;r<t;r++){const t=r*e;d.arraycopy(this.luminances,i,n,t,e);i+=this.dataWidth}return n}isCropSupported(){return true}crop(e,t,r,n){return new Br(this.luminances,r,n,this.dataWidth,this.dataHeight,this.left+e,this.top+t)}invert(){return new B(this)}}class Pr extends S{static forName(e){return this.getCharacterSetECIByName(e)}}class Lr{}Lr.ISO_8859_1=S.ISO8859_1;
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Fr{isCompact(){return this.compact}setCompact(e){this.compact=e}getSize(){return this.size}setSize(e){this.size=e}getLayers(){return this.layers}setLayers(e){this.layers=e}getCodeWords(){return this.codeWords}setCodeWords(e){this.codeWords=e}getMatrix(){return this.matrix}setMatrix(e){this.matrix=e}}class kr{static singletonList(e){return[e]}static min(e,t){return e.sort(t)[0]}}
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class vr{constructor(e){this.previous=e}getPrevious(){return this.previous}}
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class xr extends vr{constructor(e,t,r){super(e);this.value=t;this.bitCount=r}appendTo(e,t){e.appendBits(this.value,this.bitCount)}add(e,t){return new xr(this,e,t)}addBinaryShift(e,t){console.warn("addBinaryShift on SimpleToken, this simply returns a copy of this token");return new xr(this,e,t)}toString(){let e=this.value&(1<<this.bitCount)-1;e|=1<<this.bitCount;return"<"+A.toBinaryString(e|1<<this.bitCount).substring(1)+">"}}
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class Vr extends xr{constructor(e,t,r){super(e,0,0);this.binaryShiftStart=t;this.binaryShiftByteCount=r}appendTo(e,t){for(let r=0;r<this.binaryShiftByteCount;r++){if(r===0||r===31&&this.binaryShiftByteCount<=62){e.appendBits(31,5);if(this.binaryShiftByteCount>62){e.appendBits(this.binaryShiftByteCount-31,16)}else if(r===0){e.appendBits(Math.min(this.binaryShiftByteCount,31),5)}else{e.appendBits(this.binaryShiftByteCount-31,5)}}e.appendBits(t[this.binaryShiftStart+r],8)}}addBinaryShift(e,t){return new Vr(this,e,t)}toString(){return"<"+this.binaryShiftStart+"::"+(this.binaryShiftStart+this.binaryShiftByteCount-1)+">"}}function Ur(e,t,r){return new Vr(e,t,r)}function Hr(e,t,r){return new xr(e,t,r)}const Gr=["UPPER","LOWER","DIGIT","MIXED","PUNCT"];const Xr=0;const Wr=1;const zr=2;const Yr=3;const Zr=4;const Kr=new xr(null,0,0);const qr=[Int32Array.from([0,(5<<16)+28,(5<<16)+30,(5<<16)+29,(10<<16)+(29<<5)+30]),Int32Array.from([(9<<16)+(30<<4)+14,0,(5<<16)+30,(5<<16)+29,(10<<16)+(29<<5)+30]),Int32Array.from([(4<<16)+14,(9<<16)+(14<<5)+28,0,(9<<16)+(14<<5)+29,(14<<16)+(14<<10)+(29<<5)+30]),Int32Array.from([(5<<16)+29,(5<<16)+28,(10<<16)+(29<<5)+30,0,(5<<16)+30]),Int32Array.from([(5<<16)+31,(10<<16)+(31<<5)+28,(10<<16)+(31<<5)+30,(10<<16)+(31<<5)+29,0])];function Qr(e){for(let t of e){w.fill(t,-1)}e[Xr][Zr]=0;e[Wr][Zr]=0;e[Wr][Xr]=28;e[Yr][Zr]=0;e[zr][Zr]=0;e[zr][Xr]=15;return e}const jr=Qr(w.createInt32Array(6,6));
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class Jr{constructor(e,t,r,n){this.token=e;this.mode=t;this.binaryShiftByteCount=r;this.bitCount=n}getMode(){return this.mode}getToken(){return this.token}getBinaryShiftByteCount(){return this.binaryShiftByteCount}getBitCount(){return this.bitCount}latchAndAppend(e,t){let r=this.bitCount;let n=this.token;if(e!==this.mode){let t=qr[this.mode][e];n=Hr(n,t&65535,t>>16);r+=t>>16}let i=e===zr?4:5;n=Hr(n,t,i);return new Jr(n,e,0,r+i)}shiftAndAppend(e,t){let r=this.token;let n=this.mode===zr?4:5;r=Hr(r,jr[this.mode][e],n);r=Hr(r,t,5);return new Jr(r,this.mode,0,this.bitCount+n+5)}addBinaryShiftChar(e){let t=this.token;let r=this.mode;let n=this.bitCount;if(this.mode===Zr||this.mode===zr){let e=qr[r][Xr];t=Hr(t,e&65535,e>>16);n+=e>>16;r=Xr}let i=this.binaryShiftByteCount===0||this.binaryShiftByteCount===31?18:this.binaryShiftByteCount===62?9:8;let s=new Jr(t,r,this.binaryShiftByteCount+1,n+i);if(s.binaryShiftByteCount===2047+31){s=s.endBinaryShift(e+1)}return s}endBinaryShift(e){if(this.binaryShiftByteCount===0){return this}let t=this.token;t=Ur(t,e-this.binaryShiftByteCount,this.binaryShiftByteCount);return new Jr(t,this.mode,0,this.bitCount)}isBetterThanOrEqualTo(e){let t=this.bitCount+(qr[this.mode][e.mode]>>16);if(this.binaryShiftByteCount<e.binaryShiftByteCount){t+=Jr.calculateBinaryShiftCost(e)-Jr.calculateBinaryShiftCost(this)}else if(this.binaryShiftByteCount>e.binaryShiftByteCount&&e.binaryShiftByteCount>0){t+=10}return t<=e.bitCount}toBitArray(e){let t=[];for(let r=this.endBinaryShift(e.length).token;r!==null;r=r.getPrevious()){t.unshift(r)}let r=new C;for(const n of t){n.appendTo(r,e)}return r}toString(){return R.format("%s bits=%d bytes=%d",Gr[this.mode],this.bitCount,this.binaryShiftByteCount)}static calculateBinaryShiftCost(e){if(e.binaryShiftByteCount>62){return 21}if(e.binaryShiftByteCount>31){return 20}if(e.binaryShiftByteCount>0){return 10}return 0}}Jr.INITIAL_STATE=new Jr(Kr,Xr,0,0);function $r(e){const t=R.getCharCode(" ");const r=R.getCharCode(".");const n=R.getCharCode(",");e[Xr][t]=1;const i=R.getCharCode("Z");const s=R.getCharCode("A");for(let t=s;t<=i;t++){e[Xr][t]=t-s+2}e[Wr][t]=1;const o=R.getCharCode("z");const a=R.getCharCode("a");for(let t=a;t<=o;t++){e[Wr][t]=t-a+2}e[zr][t]=1;const l=R.getCharCode("9");const h=R.getCharCode("0");for(let t=h;t<=l;t++){e[zr][t]=t-h+2}e[zr][n]=12;e[zr][r]=13;const c=["\0"," ","","","","","","","","\b","\t","\n","\v","\f","\r","","","","","","@","\\","^","_","`","|","~",""];for(let t=0;t<c.length;t++){e[Yr][R.getCharCode(c[t])]=t}const u=["\0","\r","\0","\0","\0","\0","!","'","#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","[","]","{","}"];for(let t=0;t<u.length;t++){if(R.getCharCode(u[t])>0){e[Zr][R.getCharCode(u[t])]=t}}return e}const en=$r(w.createInt32Array(5,256));
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class tn{constructor(e){this.text=e}encode(){const e=R.getCharCode(" ");const t=R.getCharCode("\n");let r=kr.singletonList(Jr.INITIAL_STATE);for(let n=0;n<this.text.length;n++){let i;let s=n+1<this.text.length?this.text[n+1]:0;switch(this.text[n]){case R.getCharCode("\r"):i=s===t?2:0;break;case R.getCharCode("."):i=s===e?3:0;break;case R.getCharCode(","):i=s===e?4:0;break;case R.getCharCode(":"):i=s===e?5:0;break;default:i=0}if(i>0){r=tn.updateStateListForPair(r,n,i);n++}else{r=this.updateStateListForChar(r,n)}}const n=kr.min(r,(e,t)=>e.getBitCount()-t.getBitCount());return n.toBitArray(this.text)}updateStateListForChar(e,t){const r=[];for(let n of e){this.updateStateForChar(n,t,r)}return tn.simplifyStates(r)}updateStateForChar(e,t,r){let n=this.text[t]&255;let i=en[e.getMode()][n]>0;let s=null;for(let o=0;o<=Zr;o++){let a=en[o][n];if(a>0){if(s==null){s=e.endBinaryShift(t)}if(!i||o===e.getMode()||o===zr){const e=s.latchAndAppend(o,a);r.push(e)}if(!i&&jr[e.getMode()][o]>=0){const e=s.shiftAndAppend(o,a);r.push(e)}}}if(e.getBinaryShiftByteCount()>0||en[e.getMode()][n]===0){let n=e.addBinaryShiftChar(t);r.push(n)}}static updateStateListForPair(e,t,r){const n=[];for(let i of e){this.updateStateForPair(i,t,r,n)}return this.simplifyStates(n)}static updateStateForPair(e,t,r,n){let i=e.endBinaryShift(t);n.push(i.latchAndAppend(Zr,r));if(e.getMode()!==Zr){n.push(i.shiftAndAppend(Zr,r))}if(r===3||r===4){let e=i.latchAndAppend(zr,16-r).latchAndAppend(zr,1);n.push(e)}if(e.getBinaryShiftByteCount()>0){let r=e.addBinaryShiftChar(t).addBinaryShiftChar(t+1);n.push(r)}}static simplifyStates(e){let t=[];for(const r of e){let e=true;for(const n of t){if(n.isBetterThanOrEqualTo(r)){e=false;break}if(r.isBetterThanOrEqualTo(n)){t=t.filter(e=>e!==n)}}if(e){t.push(r)}}return t}}
/*
     * Copyright 2013 ZXing authors
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *      http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */class rn{constructor(){}static encodeBytes(e){return rn.encode(e,rn.DEFAULT_EC_PERCENT,rn.DEFAULT_AZTEC_LAYERS)}static encode(e,t,r){let n=new tn(e).encode();let i=A.truncDivision(n.getSize()*t,100)+11;let s=n.getSize()+i;let o;let a;let h;let c;let u;if(r!==rn.DEFAULT_AZTEC_LAYERS){o=r<0;a=Math.abs(r);if(a>(o?rn.MAX_NB_BITS_COMPACT:rn.MAX_NB_BITS)){throw new l(R.format("Illegal value %s for layers",r))}h=rn.totalBitsInLayer(a,o);c=rn.WORD_SIZE[a];let e=h-h%c;u=rn.stuffBits(n,c);if(u.getSize()+i>e){throw new l("Data to large for user specified layer")}if(o&&u.getSize()>c*64){throw new l("Data to large for user specified layer")}}else{c=0;u=null;for(let e=0;;e++){if(e>rn.MAX_NB_BITS){throw new l("Data too large for an Aztec code")}o=e<=3;a=o?e+1:e;h=rn.totalBitsInLayer(a,o);if(s>h){continue}if(u==null||c!==rn.WORD_SIZE[a]){c=rn.WORD_SIZE[a];u=rn.stuffBits(n,c)}let t=h-h%c;if(o&&u.getSize()>c*64){continue}if(u.getSize()+i<=t){break}}}let d=rn.generateCheckWords(u,h,c);let f=u.getSize()/c;let g=rn.generateModeMessage(o,a,f);let w=(o?11:14)+a*4;let C=new Int32Array(w);let E;if(o){E=w;for(let e=0;e<C.length;e++){C[e]=e}}else{E=w+1+2*A.truncDivision(A.truncDivision(w,2)-1,15);let e=A.truncDivision(w,2);let t=A.truncDivision(E,2);for(let r=0;r<e;r++){let n=r+A.truncDivision(r,15);C[e-r-1]=t-n-1;C[e+r]=t+n+1}}let m=new y(E);for(let e=0,t=0;e<a;e++){let r=(a-e)*4+(o?9:12);for(let n=0;n<r;n++){let i=n*2;for(let s=0;s<2;s++){if(d.get(t+i+s)){m.set(C[e*2+s],C[e*2+n])}if(d.get(t+r*2+i+s)){m.set(C[e*2+n],C[w-1-e*2-s])}if(d.get(t+r*4+i+s)){m.set(C[w-1-e*2-s],C[w-1-e*2-n])}if(d.get(t+r*6+i+s)){m.set(C[w-1-e*2-n],C[e*2+s])}}}t+=r*8}rn.drawModeMessage(m,o,E,g);if(o){rn.drawBullsEye(m,A.truncDivision(E,2),5)}else{rn.drawBullsEye(m,A.truncDivision(E,2),7);for(let e=0,t=0;e<A.truncDivision(w,2)-1;e+=15,t+=16){for(let e=A.truncDivision(E,2)&1;e<E;e+=2){m.set(A.truncDivision(E,2)-t,e);m.set(A.truncDivision(E,2)+t,e);m.set(e,A.truncDivision(E,2)-t);m.set(e,A.truncDivision(E,2)+t)}}}let _=new Fr;_.setCompact(o);_.setSize(E);_.setLayers(a);_.setCodeWords(f);_.setMatrix(m);return _}static drawBullsEye(e,t,r){for(let n=0;n<r;n+=2){for(let r=t-n;r<=t+n;r++){e.set(r,t-n);e.set(r,t+n);e.set(t-n,r);e.set(t+n,r)}}e.set(t-r,t-r);e.set(t-r+1,t-r);e.set(t-r,t-r+1);e.set(t+r,t-r);e.set(t+r,t-r+1);e.set(t+r,t+r-1)}static generateModeMessage(e,t,r){let n=new C;if(e){n.appendBits(t-1,2);n.appendBits(r-1,6);n=rn.generateCheckWords(n,28,4)}else{n.appendBits(t-1,5);n.appendBits(r-1,11);n=rn.generateCheckWords(n,40,4)}return n}static drawModeMessage(e,t,r,n){let i=A.truncDivision(r,2);if(t){for(let t=0;t<7;t++){let r=i-3+t;if(n.get(t)){e.set(r,i-5)}if(n.get(t+7)){e.set(i+5,r)}if(n.get(20-t)){e.set(r,i+5)}if(n.get(27-t)){e.set(i-5,r)}}}else{for(let t=0;t<10;t++){let r=i-5+t+A.truncDivision(t,5);if(n.get(t)){e.set(r,i-7)}if(n.get(t+10)){e.set(i+7,r)}if(n.get(29-t)){e.set(r,i+7)}if(n.get(39-t)){e.set(i-7,r)}}}}static generateCheckWords(e,t,r){let n=e.getSize()/r;let i=new _r(rn.getGF(r));let s=A.truncDivision(t,r);let o=rn.bitsToWords(e,r,s);i.encode(o,s-n);let a=t%r;let l=new C;l.appendBits(0,a);for(const e of Array.from(o)){l.appendBits(e,r)}return l}static bitsToWords(e,t,r){let n=new Int32Array(r);let i;let s;for(i=0,s=e.getSize()/t;i<s;i++){let r=0;for(let n=0;n<t;n++){r|=e.get(i*t+n)?1<<t-n-1:0}n[i]=r}return n}static getGF(e){switch(e){case 4:return Y.AZTEC_PARAM;case 6:return Y.AZTEC_DATA_6;case 8:return Y.AZTEC_DATA_8;case 10:return Y.AZTEC_DATA_10;case 12:return Y.AZTEC_DATA_12;default:throw new l("Unsupported word size "+e)}}static stuffBits(e,t){let r=new C;let n=e.getSize();let i=(1<<t)-2;for(let s=0;s<n;s+=t){let o=0;for(let r=0;r<t;r++){if(s+r>=n||e.get(s+r)){o|=1<<t-1-r}}if((o&i)===i){r.appendBits(o&i,t);s--}else if((o&i)===0){r.appendBits(o|1,t);s--}else{r.appendBits(o,t)}}return r}static totalBitsInLayer(e,t){return((t?88:112)+16*e)*e}}rn.DEFAULT_EC_PERCENT=33;rn.DEFAULT_AZTEC_LAYERS=0;rn.MAX_NB_BITS=32;rn.MAX_NB_BITS_COMPACT=4;rn.WORD_SIZE=Int32Array.from([4,6,6,8,8,8,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12]);
/*
    * Copyright 2013 ZXing authors
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */class nn{encode(e,t,r,n){return this.encodeWithHints(e,t,r,n,null)}encodeWithHints(e,t,r,n,i){let s=Lr.ISO_8859_1;let o=rn.DEFAULT_EC_PERCENT;let a=rn.DEFAULT_AZTEC_LAYERS;if(i!=null){if(i.has(mr.CHARACTER_SET)){s=Pr.forName(i.get(mr.CHARACTER_SET).toString())}if(i.has(mr.ERROR_CORRECTION)){o=A.parseInt(i.get(mr.ERROR_CORRECTION).toString())}if(i.has(mr.AZTEC_LAYERS)){a=A.parseInt(i.get(mr.AZTEC_LAYERS).toString())}}return nn.encodeLayers(e,t,r,n,s,o,a)}static encodeLayers(e,t,r,n,i,s,o){if(t!==V.AZTEC){throw new l("Can only encode AZTEC, but got "+t)}let a=rn.encode(R.getBytes(e,i),s,o);return nn.renderResult(a,r,n)}static renderResult(e,t,r){let n=e.getMatrix();if(n==null){throw new K}let i=n.getWidth();let s=n.getHeight();let o=Math.max(t,i);let a=Math.max(r,s);let l=Math.min(o/i,a/s);let h=(o-i*l)/2;let c=(a-s*l)/2;let u=new y(o,a);for(let e=0,t=c;e<s;e++,t+=l){for(let r=0,s=h;r<i;r++,s+=l){if(n.get(r,e)){u.setRegion(s,t,l,l)}}}return u}}e.AbstractExpandedDecoder=xe;e.ArgumentException=a;e.ArithmeticException=z;e.AztecCode=Fr;e.AztecCodeReader=ce;e.AztecCodeWriter=nn;e.AztecDecoder=j;e.AztecDetector=he;e.AztecDetectorResult=re;e.AztecEncoder=rn;e.AztecHighLevelEncoder=tn;e.AztecPoint=le;e.BarcodeFormat=V;e.Binarizer=u;e.BinaryBitmap=h;e.BitArray=C;e.BitMatrix=y;e.BitSource=lt;e.BrowserAztecCodeReader=ue;e.BrowserBarcodeReader=rt;e.BrowserCodeReader=k;e.BrowserDatamatrixCodeReader=gt;e.BrowserMultiFormatReader=wr;e.BrowserPDF417Reader=Ar;e.BrowserQRCodeReader=Cr;e.BrowserQRCodeSvgWriter=Dr;e.CharacterSetECI=S;e.ChecksumException=c;e.Code128Reader=fe;e.Code39Reader=ge;e.DataMatrixDecodedBitStreamParser=ct;e.DataMatrixReader=ft;e.DecodeHintType=m;e.DecoderResult=G;e.DefaultGridSampler=oe;e.DetectorResult=te;e.EAN13Reader=Ie;e.EncodeHintType=mr;e.Exception=o;e.FormatException=_;e.GenericGF=Y;e.GenericGFPoly=W;e.GlobalHistogramBinarizer=O;e.GridSampler=ie;e.GridSamplerInstance=ae;e.HTMLCanvasElementLuminanceSource=P;e.HybridBinarizer=M;e.ITFReader=we;e.IllegalArgumentException=l;e.IllegalStateException=K;e.InvertedLuminanceSource=B;e.LuminanceSource=b;e.MathUtils=J;e.MultiFormatOneDReader=tt;e.MultiFormatReader=gr;e.MultiFormatWriter=Mr;e.NotFoundException=D;e.OneDReader=de;e.PDF417DecodedBitStreamParser=cr;e.PDF417DecoderErrorCorrection=Xt;e.PDF417Reader=dr;e.PDF417ResultMetadata=$t;e.PerspectiveTransform=se;e.PlanarYUVLuminanceSource=br;e.QRCodeByteMatrix=Sr;e.QRCodeDataMask=St;e.QRCodeDecodedBitStreamParser=yt;e.QRCodeDecoderErrorCorrectionLevel=At;e.QRCodeDecoderFormatInformation=Ct;e.QRCodeEncoder=yr;e.QRCodeEncoderQRCode=pr;e.QRCodeMaskUtil=Ir;e.QRCodeMatrixUtil=Rr;e.QRCodeMode=Nt;e.QRCodeReader=kt;e.QRCodeVersion=_t;e.QRCodeWriter=Or;e.RGBLuminanceSource=Br;e.RSS14Reader=et;e.RSSExpandedReader=Je;e.ReaderException=fr;e.ReedSolomonDecoder=q;e.ReedSolomonEncoder=_r;e.ReedSolomonException=Z;e.Result=v;e.ResultMetadataType=H;e.ResultPoint=ee;e.StringUtils=R;e.UnsupportedOperationException=p;e.VideoInputDevice=L;e.WhiteRectangleDetector=ne;e.WriterException=Tr;e.ZXingArrays=w;e.ZXingCharset=Pr;e.ZXingInteger=A;e.ZXingStandardCharsets=Lr;e.ZXingStringBuilder=N;e.ZXingStringEncoding=T;e.ZXingSystem=d;e.createAbstractExpandedDecoder=qe;Object.defineProperty(e,"__esModule",{value:true})});
//# sourceMappingURL=zxing.js.map