/*!
 * OpenUI5
 * (c) Copyright 2009-2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/base/Log","sap/ui/base/EventProvider","sap/ui/performance/trace/Interaction","sap/ui/performance/Measurement"],(e,n,t,d)=>{"use strict";const i=e.getLogger("sap.ui.Rendering",window["sap-ui-config"]&&(window["sap-ui-config"]["xx-debugRendering"]||window["sap-ui-config"]["xx-debugrendering"])||/sap-ui-xx-debug(R|-r)endering=(true|x|X)/.test(document.location.search)?e.Level.DEBUG:Math.min(e.Level.INFO,e.getLevel()));const r=20,a=new n,s=[];let p,o={};let u=[];let g=false;const U=e=>{d.start("renderPendingUIUpdates","Render pending UI updates in all UIAreas");i.debug("Render pending UI updates: start ("+(e||"by timer")+")");let n=0;const t=r>0;g=true;do{if(t){n++;if(n>r){g=false;throw new Error("Rendering has been re-started too many times ("+n+"). Add URL parameter sap-ui-xx-debugRendering=true for a detailed analysis.")}if(n>1){i.debug("Render pending UI updates: iteration "+n)}}if(p){if(p!==f){clearTimeout(p)}p=undefined;if(s.length>0){s.pop()()}}c();const e=o;o={};for(const n in e){e[n].rerender()}}while(t&&p);g=false;f.fireUIUpdated();i.debug("Render pending UI updates: finished");d.end("renderPendingUIUpdates")};const f={notifyInteractionStep(){s.push(t.notifyAsyncStep())},addPrerenderingTask(e,n){if(n){u.unshift(e)}else{u.push(e)}},renderPendingUIUpdates(e,n){if(n!==undefined){s.push(t.notifyAsyncStep());p=setTimeout(U.bind(null,e),n)}else{U(e)}},suspend(){p=f},resume(e){f.renderPendingUIUpdates(e,0)},isPending(){return!!(p||g)},attachUIUpdated(e,n){a.attachEvent("UIUpdated",e,n)},detachUIUpdated(e,n){a.detachEvent("UIUpdated",e,n)},fireUIUpdated(e){a.fireEvent("UIUpdated",e)},getLogger(){return i},invalidateUIArea(e){o[e.getId()]=e;if(!p){i.debug("Registering timer for delayed re-rendering");f.renderPendingUIUpdates("invalidated UIArea",0)}}};const c=()=>{const e=u.slice();u=[];e.forEach(e=>{e()})};return f});
//# sourceMappingURL=Rendering.js.map